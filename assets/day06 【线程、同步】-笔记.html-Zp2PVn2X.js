const e=JSON.parse('{"key":"v-9726e3ee","path":"/back-base/2.Java%E6%A0%B8%E5%BF%83/day06%20%E3%80%90%E7%BA%BF%E7%A8%8B%E3%80%81%E5%90%8C%E6%AD%A5%E3%80%91-%E7%AC%94%E8%AE%B0.html","title":"day 06 【线程、同步】","lang":"zh-CN","frontmatter":{"description":"day 06 【线程、同步】 主要内容 线程 同步 线程状态 教学目标 能够描述Java中多线程运行原理 能够使用继承类的方式创建多线程 能够使用实现接口的方式创建多线程 能够说出实现接口方式的好处 能够解释安全问题的出现的原因 能够使用同步代码块解决线程安全问题 能够使用同步方法解决线程安全问题 能够说出线程 6 个状态的名称","head":[["meta",{"property":"og:url","content":"https://apzs.github.io/back-base/2.Java%E6%A0%B8%E5%BF%83/day06%20%E3%80%90%E7%BA%BF%E7%A8%8B%E3%80%81%E5%90%8C%E6%AD%A5%E3%80%91-%E7%AC%94%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"apzs"}],["meta",{"property":"og:title","content":"day 06 【线程、同步】"}],["meta",{"property":"og:description","content":"day 06 【线程、同步】 主要内容 线程 同步 线程状态 教学目标 能够描述Java中多线程运行原理 能够使用继承类的方式创建多线程 能够使用实现接口的方式创建多线程 能够说出实现接口方式的好处 能够解释安全问题的出现的原因 能够使用同步代码块解决线程安全问题 能够使用同步方法解决线程安全问题 能够说出线程 6 个状态的名称"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-05T06:05:15.000Z"}],["meta",{"property":"article:author","content":"apzs"}],["meta",{"property":"article:modified_time","content":"2024-03-05T06:05:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"day 06 【线程、同步】\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-05T06:05:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"apzs\\",\\"url\\":\\"https://apzs.eu.org\\"}]}"]]},"headers":[{"level":2,"title":"主要内容","slug":"主要内容","link":"#主要内容","children":[]},{"level":2,"title":"教学目标","slug":"教学目标","link":"#教学目标","children":[]},{"level":2,"title":"1.1 多线程原理","slug":"_1-1-多线程原理","link":"#_1-1-多线程原理","children":[]},{"level":2,"title":"1.2 Thread类","slug":"_1-2-thread类","link":"#_1-2-thread类","children":[]},{"level":2,"title":"1.3 创建线程方式二","slug":"_1-3-创建线程方式二","link":"#_1-3-创建线程方式二","children":[]},{"level":2,"title":"1.4 Thread和Runnable的区别","slug":"_1-4-thread和runnable的区别","link":"#_1-4-thread和runnable的区别","children":[]},{"level":2,"title":"1.5 匿名内部类方式实现线程的创建","slug":"_1-5-匿名内部类方式实现线程的创建","link":"#_1-5-匿名内部类方式实现线程的创建","children":[]},{"level":2,"title":"1.1 线程安全","slug":"_1-1-线程安全","link":"#_1-1-线程安全","children":[]},{"level":2,"title":"2.2 线程同步","slug":"_2-2-线程同步","link":"#_2-2-线程同步","children":[]},{"level":2,"title":"2.3 同步代码块","slug":"_2-3-同步代码块","link":"#_2-3-同步代码块","children":[]},{"level":2,"title":"2.4 同步方法","slug":"_2-4-同步方法","link":"#_2-4-同步方法","children":[]},{"level":2,"title":"2.5 Lock锁","slug":"_2-5-lock锁","link":"#_2-5-lock锁","children":[]},{"level":2,"title":"3.1 线程状态概述","slug":"_3-1-线程状态概述","link":"#_3-1-线程状态概述","children":[]},{"level":2,"title":"3.2 Timed Waiting（计时等待）","slug":"_3-2-timed-waiting-计时等待","link":"#_3-2-timed-waiting-计时等待","children":[]},{"level":2,"title":"3.3 BLOCKED（锁阻塞）","slug":"_3-3-blocked-锁阻塞","link":"#_3-3-blocked-锁阻塞","children":[]},{"level":2,"title":"3.4 Waiting（无限等待）","slug":"_3-4-waiting-无限等待","link":"#_3-4-waiting-无限等待","children":[]},{"level":2,"title":"3.5 补充知识点","slug":"_3-5-补充知识点","link":"#_3-5-补充知识点","children":[]}],"git":{"createdTime":1709618715000,"updatedTime":1709618715000,"contributors":[{"name":"zhaoshuo","email":"apzs@foxmaill.com","commits":1}]},"readingTime":{"minutes":18.66,"words":5597},"filePathRelative":"back-base/2.Java核心/day06 【线程、同步】-笔记.md","localizedDate":"2024年3月5日","excerpt":"<h1> day 06 【线程、同步】</h1>\\n<h2> 主要内容</h2>\\n<ul>\\n<li>\\n<p>线程</p>\\n</li>\\n<li>\\n<p>同步</p>\\n</li>\\n<li>\\n<p>线程状态</p>\\n</li>\\n</ul>\\n<h2> 教学目标</h2>\\n<ul>\\n<li>能够描述Java中多线程运行原理</li>\\n<li>能够使用继承类的方式创建多线程</li>\\n<li>能够使用实现接口的方式创建多线程</li>\\n<li>能够说出实现接口方式的好处</li>\\n<li>能够解释安全问题的出现的原因</li>\\n<li>能够使用同步代码块解决线程安全问题</li>\\n<li>能够使用同步方法解决线程安全问题</li>\\n<li>能够说出线程 6 个状态的名称</li>\\n</ul>","autoDesc":true}');export{e as data};
