const e=JSON.parse('{"key":"v-28a9c71e","path":"/back-base/2.Java%E6%A0%B8%E5%BF%83/08.%20File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92.html","title":"8.File类、递归","lang":"zh-CN","frontmatter":{"title":"8.File类、递归","icon":"gears","order":8,"category":["后端"],"tag":["java","后端"],"description":"08. File类、递归 主要内容 File类 递归 教学目标 [ ] 能够说出File对象的创建方式 [ ] 能够说出File类获取名称的方法名称 [ ] 能够说出File类获取绝对路径的方法名称 [ ] 能够说出File类获取文件大小的方法名称 [ ] 能够说出File类判断是否是文件的方法名称 [ ] 能够说出File类判断是否是文件夹的方法名称 [ ] 能够辨别相对路径和绝对路径 [ ] 能够遍历文件夹 [ ] 能够解释递归的含义 [ ] 能够使用递归的方式计算5的阶乘 [ ] 能够说出使用递归会内存溢出隐患的原因","head":[["meta",{"property":"og:url","content":"https://apzs.github.io/back-base/2.Java%E6%A0%B8%E5%BF%83/08.%20File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92.html"}],["meta",{"property":"og:site_name","content":"apzs"}],["meta",{"property":"og:title","content":"8.File类、递归"}],["meta",{"property":"og:description","content":"08. File类、递归 主要内容 File类 递归 教学目标 [ ] 能够说出File对象的创建方式 [ ] 能够说出File类获取名称的方法名称 [ ] 能够说出File类获取绝对路径的方法名称 [ ] 能够说出File类获取文件大小的方法名称 [ ] 能够说出File类判断是否是文件的方法名称 [ ] 能够说出File类判断是否是文件夹的方法名称 [ ] 能够辨别相对路径和绝对路径 [ ] 能够遍历文件夹 [ ] 能够解释递归的含义 [ ] 能够使用递归的方式计算5的阶乘 [ ] 能够说出使用递归会内存溢出隐患的原因"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-10T13:06:08.000Z"}],["meta",{"property":"article:author","content":"apzs"}],["meta",{"property":"article:tag","content":"java"}],["meta",{"property":"article:tag","content":"后端"}],["meta",{"property":"article:modified_time","content":"2024-03-10T13:06:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"8.File类、递归\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-10T13:06:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"apzs\\",\\"url\\":\\"https://apzs.eu.org\\"}]}"]]},"headers":[{"level":2,"title":"08. File类、递归","slug":"_08-file类、递归","link":"#_08-file类、递归","children":[{"level":3,"title":"主要内容","slug":"主要内容","link":"#主要内容","children":[]},{"level":3,"title":"教学目标","slug":"教学目标","link":"#教学目标","children":[]}]},{"level":2,"title":"第一章 File类","slug":"第一章-file类","link":"#第一章-file类","children":[{"level":3,"title":"1.1 概述","slug":"_1-1-概述","link":"#_1-1-概述","children":[]},{"level":3,"title":"1.2 构造方法","slug":"_1-2-构造方法","link":"#_1-2-构造方法","children":[]},{"level":3,"title":"1.3 常用方法","slug":"_1-3-常用方法","link":"#_1-3-常用方法","children":[]},{"level":3,"title":"1.4 目录的遍历","slug":"_1-4-目录的遍历","link":"#_1-4-目录的遍历","children":[]}]},{"level":2,"title":"第二章 递归","slug":"第二章-递归","link":"#第二章-递归","children":[{"level":3,"title":"2.1 概述","slug":"_2-1-概述","link":"#_2-1-概述","children":[]},{"level":3,"title":"2.2 递归累加求和","slug":"_2-2-递归累加求和","link":"#_2-2-递归累加求和","children":[]},{"level":3,"title":"2.3 递归求阶乘","slug":"_2-3-递归求阶乘","link":"#_2-3-递归求阶乘","children":[]},{"level":3,"title":"2.4 递归打印多级目录","slug":"_2-4-递归打印多级目录","link":"#_2-4-递归打印多级目录","children":[]}]},{"level":2,"title":"第三章 综合案例","slug":"第三章-综合案例","link":"#第三章-综合案例","children":[{"level":3,"title":"3.1 文件搜索","slug":"_3-1-文件搜索","link":"#_3-1-文件搜索","children":[]},{"level":3,"title":"3.2 文件过滤器优化","slug":"_3-2-文件过滤器优化","link":"#_3-2-文件过滤器优化","children":[]},{"level":3,"title":"3.3 Lambda优化","slug":"_3-3-lambda优化","link":"#_3-3-lambda优化","children":[]}]}],"git":{"createdTime":1710049926000,"updatedTime":1710075968000,"contributors":[{"name":"zhaoshuo","email":"apzs@foxmaill.com","commits":2}]},"readingTime":{"minutes":10,"words":3001},"filePathRelative":"back-base/2.Java核心/08. File类、递归.md","localizedDate":"2024年3月10日","excerpt":"<h2> 08. File类、递归</h2>\\n<h3> 主要内容</h3>\\n<ul>\\n<li>File类</li>\\n<li>递归</li>\\n</ul>\\n<h3> 教学目标</h3>\\n<ul>\\n<li>[ ] 能够说出File对象的创建方式</li>\\n<li>[ ] 能够说出File类获取名称的方法名称</li>\\n<li>[ ] 能够说出File类获取绝对路径的方法名称</li>\\n<li>[ ] 能够说出File类获取文件大小的方法名称</li>\\n<li>[ ] 能够说出File类判断是否是文件的方法名称</li>\\n<li>[ ] 能够说出File类判断是否是文件夹的方法名称</li>\\n<li>[ ] 能够辨别相对路径和绝对路径</li>\\n<li>[ ] 能够遍历文件夹</li>\\n<li>[ ] 能够解释递归的含义</li>\\n<li>[ ] 能够使用递归的方式计算5的阶乘</li>\\n<li>[ ] 能够说出使用递归会内存溢出隐患的原因</li>\\n</ul>","autoDesc":true}');export{e as data};
