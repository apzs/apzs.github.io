const e=JSON.parse('{"key":"v-1ff8f41a","path":"/back-base/3.JavaWeb/9.VUE_Element%E6%95%B4%E5%90%88Javaweb%E7%9A%84%E5%95%86%E5%93%81%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.html","title":"JavaWeb基础9——VUE，Element&整合Javaweb的商品管理系统","lang":"zh-CN","frontmatter":{"description":"JavaWeb基础9——VUE，Element&amp;整合Javaweb的商品管理系统 1，VUE 1.1 Vue概述，MVVM设计模式 Vue 是一套前端框架，免除原生JavaScript中的DOM操作，简化书写。 **回顾DOM：**Document Object Model 文档对象模型。也就是 JavaScript 将 HTML 文档的各个组成部分封装为对象。作用：使javascript有能力操作HTML文档（获取HTML标记元素，添加HTML标记元素，删除HTML标记元素等）","head":[["meta",{"property":"og:url","content":"https://apzs.github.io/back-base/3.JavaWeb/9.VUE_Element%E6%95%B4%E5%90%88Javaweb%E7%9A%84%E5%95%86%E5%93%81%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F.html"}],["meta",{"property":"og:site_name","content":"apzs"}],["meta",{"property":"og:title","content":"JavaWeb基础9——VUE，Element&整合Javaweb的商品管理系统"}],["meta",{"property":"og:description","content":"JavaWeb基础9——VUE，Element&amp;整合Javaweb的商品管理系统 1，VUE 1.1 Vue概述，MVVM设计模式 Vue 是一套前端框架，免除原生JavaScript中的DOM操作，简化书写。 **回顾DOM：**Document Object Model 文档对象模型。也就是 JavaScript 将 HTML 文档的各个组成部分封装为对象。作用：使javascript有能力操作HTML文档（获取HTML标记元素，添加HTML标记元素，删除HTML标记元素等）"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-05T06:05:15.000Z"}],["meta",{"property":"article:author","content":"apzs"}],["meta",{"property":"article:modified_time","content":"2024-03-05T06:05:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"JavaWeb基础9——VUE，Element&整合Javaweb的商品管理系统\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-05T06:05:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"apzs\\",\\"url\\":\\"https://apzs.eu.org\\"}]}"]]},"headers":[{"level":2,"title":"1，VUE","slug":"_1-vue","link":"#_1-vue","children":[{"level":3,"title":"1.1 Vue概述，MVVM设计模式","slug":"_1-1-vue概述-mvvm设计模式","link":"#_1-1-vue概述-mvvm设计模式","children":[]},{"level":3,"title":"1.2 快速入门","slug":"_1-2-快速入门","link":"#_1-2-快速入门","children":[]},{"level":3,"title":"1.3 Vue 指令","slug":"_1-3-vue-指令","link":"#_1-3-vue-指令","children":[]},{"level":3,"title":"1.4 生命周期","slug":"_1-4-生命周期","link":"#_1-4-生命周期","children":[]},{"level":3,"title":"1.5 this和$","slug":"_1-5-this和","link":"#_1-5-this和","children":[]},{"level":3,"title":"1.6 案例，vue展示品牌列表","slug":"_1-6-案例-vue展示品牌列表","link":"#_1-6-案例-vue展示品牌列表","children":[]},{"level":3,"title":"1.7 vue脚手架进行模块化开发","slug":"_1-7-vue脚手架进行模块化开发","link":"#_1-7-vue脚手架进行模块化开发","children":[]}]},{"level":2,"title":"2，Element","slug":"_2-element","link":"#_2-element","children":[{"level":3,"title":"2.1 快速入门，使用el-button组件","slug":"_2-1-快速入门-使用el-button组件","link":"#_2-1-快速入门-使用el-button组件","children":[]},{"level":3,"title":"2.2 Element 布局","slug":"_2-2-element-布局","link":"#_2-2-element-布局","children":[]},{"level":3,"title":"2.3 案例，element商品列表展示","slug":"_2-3-案例-element商品列表展示","link":"#_2-3-案例-element商品列表展示","children":[]}]},{"level":2,"title":"3，综合案例，element商品列表展示增删改查","slug":"_3-综合案例-element商品列表展示增删改查","link":"#_3-综合案例-element商品列表展示增删改查","children":[{"level":3,"title":"3.1 功能介绍","slug":"_3-1-功能介绍","link":"#_3-1-功能介绍","children":[]},{"level":3,"title":"3.1.5 坑点总结","slug":"_3-1-5-坑点总结","link":"#_3-1-5-坑点总结","children":[]},{"level":3,"title":"3.2 环境准备","slug":"_3-2-环境准备","link":"#_3-2-环境准备","children":[]},{"level":3,"title":"3.3 查询所有功能","slug":"_3-3-查询所有功能","link":"#_3-3-查询所有功能","children":[]}]},{"level":2,"title":"4，添加功能","slug":"_4-添加功能","link":"#_4-添加功能","children":[{"level":3,"title":"4.1 后端实现","slug":"_4-1-后端实现","link":"#_4-1-后端实现","children":[]},{"level":3,"title":"4.2 前端实现","slug":"_4-2-前端实现","link":"#_4-2-前端实现","children":[]}]},{"level":2,"title":"5，servlet优化","slug":"_5-servlet优化","link":"#_5-servlet优化","children":[{"level":3,"title":"5.1 优化方法，BaseServlet","slug":"_5-1-优化方法-baseservlet","link":"#_5-1-优化方法-baseservlet","children":[]},{"level":3,"title":"5.2 代码优化","slug":"_5-2-代码优化","link":"#_5-2-代码优化","children":[]}]},{"level":2,"title":"6，批量删除","slug":"_6-批量删除","link":"#_6-批量删除","children":[{"level":3,"title":"6.1 后端实现","slug":"_6-1-后端实现","link":"#_6-1-后端实现","children":[]},{"level":3,"title":"6.2 前端实现","slug":"_6-2-前端实现","link":"#_6-2-前端实现","children":[]}]},{"level":2,"title":"7，分页查询","slug":"_7-分页查询","link":"#_7-分页查询","children":[{"level":3,"title":"7.1 分析","slug":"_7-1-分析","link":"#_7-1-分析","children":[]},{"level":3,"title":"7.2 后端实现","slug":"_7-2-后端实现","link":"#_7-2-后端实现","children":[]},{"level":3,"title":"7.3 前端实现","slug":"_7-3-前端实现","link":"#_7-3-前端实现","children":[]}]},{"level":2,"title":"8，条件查询","slug":"_8-条件查询","link":"#_8-条件查询","children":[{"level":3,"title":"8.1 后端实现","slug":"_8-1-后端实现","link":"#_8-1-后端实现","children":[]},{"level":3,"title":"8.2 前端实现","slug":"_8-2-前端实现","link":"#_8-2-前端实现","children":[]}]},{"level":2,"title":"9，箭头函数，前端代码优化","slug":"_9-箭头函数-前端代码优化","link":"#_9-箭头函数-前端代码优化","children":[]}],"git":{"createdTime":1709618715000,"updatedTime":1709618715000,"contributors":[{"name":"zhaoshuo","email":"apzs@foxmaill.com","commits":1}]},"readingTime":{"minutes":68.74,"words":20622},"filePathRelative":"back-base/3.JavaWeb/9.VUE&Element整合Javaweb的商品管理系统.md","localizedDate":"2024年3月5日","excerpt":"<h1> JavaWeb基础9——VUE，Element&amp;整合Javaweb的商品管理系统</h1>\\n<h2> 1，VUE</h2>\\n<h3> 1.1 Vue概述，MVVM设计模式</h3>\\n<p><strong>Vue 是一套前端框架，免除原生JavaScript中的DOM操作，简化书写。</strong></p>\\n<blockquote>\\n<p>**回顾DOM：**Document Object Model 文档对象模型。也就是 JavaScript 将 HTML 文档的各个组成部分封装为对象。作用：使javascript有能力操作HTML文档（获取HTML标记元素，添加HTML标记元素，删除HTML标记元素等）</p>\\n</blockquote>","autoDesc":true}');export{e as data};
