const e=JSON.parse('{"key":"v-0433bf15","path":"/back-senior/14.Netty/Netty01-nio.html","title":"一. NIO 基础","lang":"zh-CN","frontmatter":{"description":"一. NIO 基础 Java NIO系统的核心在于：通道(Channel)和缓冲区(Buffer)。通道表示打开到 IO 设备(例如：文件、套接字)的连接。若需要使用 NIO 系统，需要获取用于连接 IO 设备的通道以及用于容纳数据的缓冲区。然后操作缓冲区，对数据进行处理 简而言之，通道负责传输，缓冲区负责存储 1. 三大组件 1.1 Channel &amp; Buffer","head":[["meta",{"property":"og:url","content":"https://apzs.github.io/back-senior/14.Netty/Netty01-nio.html"}],["meta",{"property":"og:site_name","content":"apzs"}],["meta",{"property":"og:title","content":"一. NIO 基础"}],["meta",{"property":"og:description","content":"一. NIO 基础 Java NIO系统的核心在于：通道(Channel)和缓冲区(Buffer)。通道表示打开到 IO 设备(例如：文件、套接字)的连接。若需要使用 NIO 系统，需要获取用于连接 IO 设备的通道以及用于容纳数据的缓冲区。然后操作缓冲区，对数据进行处理 简而言之，通道负责传输，缓冲区负责存储 1. 三大组件 1.1 Channel &amp; Buffer"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-05T06:05:15.000Z"}],["meta",{"property":"article:author","content":"apzs"}],["meta",{"property":"article:modified_time","content":"2024-03-05T06:05:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一. NIO 基础\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-05T06:05:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"apzs\\",\\"url\\":\\"https://apzs.eu.org\\"}]}"]]},"headers":[{"level":2,"title":"1. 三大组件","slug":"_1-三大组件","link":"#_1-三大组件","children":[{"level":3,"title":"1.1 Channel & Buffer","slug":"_1-1-channel-buffer","link":"#_1-1-channel-buffer","children":[]},{"level":3,"title":"1.2 Selector","slug":"_1-2-selector","link":"#_1-2-selector","children":[]}]},{"level":2,"title":"2. ByteBuffer","slug":"_2-bytebuffer","link":"#_2-bytebuffer","children":[{"level":3,"title":"2.1  ByteBuffer 正确使用姿势","slug":"_2-1-bytebuffer-正确使用姿势","link":"#_2-1-bytebuffer-正确使用姿势","children":[]},{"level":3,"title":"2.2 ByteBuffer 结构","slug":"_2-2-bytebuffer-结构","link":"#_2-2-bytebuffer-结构","children":[]},{"level":3,"title":"2.3 ByteBuffer 常见方法","slug":"_2-3-bytebuffer-常见方法","link":"#_2-3-bytebuffer-常见方法","children":[]},{"level":3,"title":"2.4 Scattering Reads 分散读取","slug":"_2-4-scattering-reads-分散读取","link":"#_2-4-scattering-reads-分散读取","children":[]},{"level":3,"title":"2.5 Gathering Writes 集中写入","slug":"_2-5-gathering-writes-集中写入","link":"#_2-5-gathering-writes-集中写入","children":[]},{"level":3,"title":"2.6 练习","slug":"_2-6-练习","link":"#_2-6-练习","children":[]}]},{"level":2,"title":"3. 文件编程","slug":"_3-文件编程","link":"#_3-文件编程","children":[{"level":3,"title":"3.1 FileChannel","slug":"_3-1-filechannel","link":"#_3-1-filechannel","children":[]},{"level":3,"title":"3.2 两个 Channel 传输数据","slug":"_3-2-两个-channel-传输数据","link":"#_3-2-两个-channel-传输数据","children":[]},{"level":3,"title":"3.3 Path","slug":"_3-3-path","link":"#_3-3-path","children":[]},{"level":3,"title":"3.4 Files","slug":"_3-4-files","link":"#_3-4-files","children":[]}]},{"level":2,"title":"4. 网络编程","slug":"_4-网络编程","link":"#_4-网络编程","children":[{"level":3,"title":"4.1 非阻塞 vs 阻塞","slug":"_4-1-非阻塞-vs-阻塞","link":"#_4-1-非阻塞-vs-阻塞","children":[]},{"level":3,"title":"4.2 Selector","slug":"_4-2-selector","link":"#_4-2-selector","children":[]},{"level":3,"title":"4.3 处理 accept 事件","slug":"_4-3-处理-accept-事件","link":"#_4-3-处理-accept-事件","children":[]},{"level":3,"title":"4.4 处理 read 事件","slug":"_4-4-处理-read-事件","link":"#_4-4-处理-read-事件","children":[]},{"level":3,"title":"4.5 处理 write 事件","slug":"_4-5-处理-write-事件","link":"#_4-5-处理-write-事件","children":[]},{"level":3,"title":"4.6 更进一步","slug":"_4-6-更进一步","link":"#_4-6-更进一步","children":[]},{"level":3,"title":"4.7 UDP","slug":"_4-7-udp","link":"#_4-7-udp","children":[]}]},{"level":2,"title":"5. NIO vs BIO","slug":"_5-nio-vs-bio","link":"#_5-nio-vs-bio","children":[{"level":3,"title":"5.1 stream vs channel","slug":"_5-1-stream-vs-channel","link":"#_5-1-stream-vs-channel","children":[]},{"level":3,"title":"5.2 IO 模型","slug":"_5-2-io-模型","link":"#_5-2-io-模型","children":[]},{"level":3,"title":"5.3 零拷贝","slug":"_5-3-零拷贝","link":"#_5-3-零拷贝","children":[]},{"level":3,"title":"5.3 AIO","slug":"_5-3-aio","link":"#_5-3-aio","children":[]}]}],"git":{"createdTime":1709618715000,"updatedTime":1709618715000,"contributors":[{"name":"zhaoshuo","email":"apzs@foxmaill.com","commits":1}]},"readingTime":{"minutes":56.18,"words":16853},"filePathRelative":"back-senior/14.Netty/Netty01-nio.md","localizedDate":"2024年3月5日","excerpt":"<h1> 一. NIO 基础</h1>\\n<p>Java NIO系统的<strong>核心</strong>在于：<strong>通道(Channel)和缓冲区(Buffer)</strong>。通道表示打开到 IO 设备(例如：文件、套接字)的连接。若需要使用 NIO 系统，需要获取用于<strong>连接 IO 设备的通道</strong>以及用于<strong>容纳数据的缓冲区</strong>。然后操作缓冲区，对数据进行处理</p>\\n<p>简而言之，<strong>通道负责传输，缓冲区负责存储</strong></p>\\n<h2> 1. 三大组件</h2>\\n<h3> 1.1 Channel &amp; Buffer</h3>","autoDesc":true}');export{e as data};
