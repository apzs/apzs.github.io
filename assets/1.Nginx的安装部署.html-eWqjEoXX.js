import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as r,c as p,a,b as e,d as s,e as i}from"./app-db_OQQsY.js";const c={},d={id:"虚拟机安装",tabindex:"-1"},o=a("a",{class:"header-anchor",href:"#虚拟机安装","aria-hidden":"true"},"#",-1),g={href:"https://so.csdn.net/so/search?q=%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"},m=i(`<ul><li>虚拟机：vmware</li><li>操作系统：CentOS-7.4</li></ul><h3 id="虚拟机安装centos7-4" tabindex="-1"><a class="header-anchor" href="#虚拟机安装centos7-4" aria-hidden="true">#</a> 虚拟机安装CentOS7.4</h3><h4 id="_1-新建虚拟机" tabindex="-1"><a class="header-anchor" href="#_1-新建虚拟机" aria-hidden="true">#</a> 1 新建虚拟机</h4><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/4caa53b160b9e36f432769caa378e9b0.png" alt="(img-0Y8cBNy9-1651289700668)" tabindex="0" loading="lazy"><figcaption>(img-0Y8cBNy9-1651289700668)</figcaption></figure><h4 id="_2-选择典型" tabindex="-1"><a class="header-anchor" href="#_2-选择典型" aria-hidden="true">#</a> 2 选择典型</h4><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/371b1f009937c3cb3f560b33c712fb74.png" alt="image-20220429103817610" tabindex="0" loading="lazy"><figcaption>image-20220429103817610</figcaption></figure><h4 id="_3-选择centos镜像" tabindex="-1"><a class="header-anchor" href="#_3-选择centos镜像" aria-hidden="true">#</a> 3 选择CentOS镜像</h4><p>我们在这次学习时使用mini版操作系统镜像，安装速度快，也去除了我们用不到的软件。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/93128c5f582847e4d149df8a05db0684.png" alt="image-20220429104028241" tabindex="0" loading="lazy"><figcaption>image-20220429104028241</figcaption></figure><h4 id="_4-存储位置" tabindex="-1"><a class="header-anchor" href="#_4-存储位置" aria-hidden="true">#</a> 4 存储位置</h4><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/e99b9bde57596656d821c3ff64aea156.png" alt="image-20220429104123522" tabindex="0" loading="lazy"><figcaption>image-20220429104123522</figcaption></figure><h4 id="_5-虚拟机磁盘配置" tabindex="-1"><a class="header-anchor" href="#_5-虚拟机磁盘配置" aria-hidden="true">#</a> 5 虚拟机磁盘配置</h4><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/b962cd7b261e6935972d7e627f6f1a13.png" alt="image-20220429104252587" tabindex="0" loading="lazy"><figcaption>image-20220429104252587</figcaption></figure><h4 id="_6-自定义其他配置" tabindex="-1"><a class="header-anchor" href="#_6-自定义其他配置" aria-hidden="true">#</a> 6 自定义其他配置</h4><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/4fdf557fe4e8975c762281bff42c4612.png" alt="(img-cv7EL99h-1651289700688)" tabindex="0" loading="lazy"><figcaption>(img-cv7EL99h-1651289700688)</figcaption></figure><p>在自定义硬件中，我们可以再次配置虚拟机的内存、cpu等硬件属性：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8b24a9c639a879bfec075d71864d3c0d.png" alt="image-20220429104532662" tabindex="0" loading="lazy"><figcaption>image-20220429104532662</figcaption></figure><h3 id="电脑配置" tabindex="-1"><a class="header-anchor" href="#电脑配置" aria-hidden="true">#</a> 电脑配置</h3><p>内存：建议8G以上</p><p>CPU：4核以上主流即可</p><h3 id="系统安装" tabindex="-1"><a class="header-anchor" href="#系统安装" aria-hidden="true">#</a> 系统安装</h3><h4 id="_1-虚拟机配置完成之后进入系统安装界面" tabindex="-1"><a class="header-anchor" href="#_1-虚拟机配置完成之后进入系统安装界面" aria-hidden="true">#</a> 1 虚拟机配置完成之后进入系统安装界面</h4><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/28dd5c7b5fd10f4d00adbc9d20685a78.png" alt="image-20220429104742575" tabindex="0" loading="lazy"><figcaption>image-20220429104742575</figcaption></figure><p>出现此界面后敲“回车”进入安装程序</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/4732df9529597566d3e7ef52463344ef.png" alt="image-20220429104809556" tabindex="0" loading="lazy"><figcaption>image-20220429104809556</figcaption></figure><h4 id="_2-选择安装语言" tabindex="-1"><a class="header-anchor" href="#_2-选择安装语言" aria-hidden="true">#</a> 2 选择安装语言</h4><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/a4bc82891b4003609c7330fb2215b9f5.png" alt="image-20220429105000623" tabindex="0" loading="lazy"><figcaption>image-20220429105000623</figcaption></figure><h4 id="_3-分区选择" tabindex="-1"><a class="header-anchor" href="#_3-分区选择" aria-hidden="true">#</a> 3 分区选择</h4><p>虽然默认会自动帮我们格式化磁盘，但也需要点击确认一下。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/2ba78872073d6503321333c746bcd0eb.png" alt="image-20220429105138184" tabindex="0" loading="lazy"><figcaption>image-20220429105138184</figcaption></figure><p>点击左上角完成即可</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/2eb74ea0eb16d22536d56ca32cdae005.png" alt="image-20220429105205236" tabindex="0" loading="lazy"><figcaption>image-20220429105205236</figcaption></figure><h4 id="_4-开始安装" tabindex="-1"><a class="header-anchor" href="#_4-开始安装" aria-hidden="true">#</a> 4 开始安装</h4><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/37b2d8afad5425d398b157e33cd2ad46.png" alt="image-20220429105238902" tabindex="0" loading="lazy"><figcaption>image-20220429105238902</figcaption></figure><p>安装过程中我们可以设置密码</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/1eec8b2cbf4b35b797f25d3d8adcd4ca.png" alt="image-20220429105355312" tabindex="0" loading="lazy"><figcaption>image-20220429105355312</figcaption></figure><h4 id="_5-安装完成" tabindex="-1"><a class="header-anchor" href="#_5-安装完成" aria-hidden="true">#</a> 5 安装完成</h4><p>当出现 重启 按钮时，说明系统已经安装完成</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/e2e327d4c34d9d8c7987c0b0e16f8781.png" alt="image-20220429105511251" tabindex="0" loading="lazy"><figcaption>image-20220429105511251</figcaption></figure><p>重启后的样子</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/eee9ce9007657e8914d4670e10f45a3a.png" alt="image-20220429105531308" tabindex="0" loading="lazy"><figcaption>image-20220429105531308</figcaption></figure><p>至此，我们在VMware中对CentOS的基本安装已经完成。</p><h3 id="linux配置" tabindex="-1"><a class="header-anchor" href="#linux配置" aria-hidden="true">#</a> Linux配置</h3><h4 id="配置上网" tabindex="-1"><a class="header-anchor" href="#配置上网" aria-hidden="true">#</a> 配置上网</h4><ul><li>修改配置网卡配置文件</li></ul><p>vi /etc/sysconfig/network-scripts/ifcfg-ens33</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/78585956ac1c970e798838f4fbb1df80.png" alt="image-20220429111029259" tabindex="0" loading="lazy"><figcaption>image-20220429111029259</figcaption></figure><ul><li><p>修改ONBOOT=yes</p></li><li><p>重启网络服务</p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl restart network
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>测试</p><p>ping qq.com</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/5548efad69adfaf6ec8ca866e754139c.png" alt="image-20220429111845497" tabindex="0" loading="lazy"><figcaption>image-20220429111845497</figcaption></figure><p>至此，我们的虚拟机就可以访问互联网了。</p></li></ul><h4 id="配置静态ip" tabindex="-1"><a class="header-anchor" href="#配置静态ip" aria-hidden="true">#</a> 配置静态ip</h4><p>查看本地ip:</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/f09334d2627d7322146af556bc2b2584.png" alt="image-20220429112527136" tabindex="0" loading="lazy"><figcaption>image-20220429112527136</figcaption></figure><p>之前的网络配置是使用dhcp方式分配ip地址，这种方式会在系统每次联网的时候分配一个ip给我们用，也就是说有可能系统下次启动的时候ip会变，这样非常不方便我们管理。</p><p>网段和网关可以通过以下方式查看：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/5498c702db14d449d4804947c7d3aeb7.png" alt="(img-TXTOdh17-1651289700735)" tabindex="0" loading="lazy"><figcaption>(img-TXTOdh17-1651289700735)</figcaption></figure><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/1b8eb56b66ef54df49d37482475352b8.png" alt="image-20220429115544902" tabindex="0" loading="lazy"><figcaption>image-20220429115544902</figcaption></figure><p>配置静态ip首先需要打开网卡配置文件</p><pre><code>vi /etc/sysconfig/network-scripts/ifcfg-ens33
</code></pre><ul><li><p>修改启动协议 BOOTPROTO=static</p></li><li><p>手动配置ip地址</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">TYPE</span><span class="token punctuation">=</span><span class="token value attr-value">Ethernet</span>
<span class="token key attr-name">PROXY_METHOD</span><span class="token punctuation">=</span><span class="token value attr-value">none</span>
<span class="token key attr-name">BROWSER_ONLY</span><span class="token punctuation">=</span><span class="token value attr-value">no</span>
<span class="token key attr-name">BOOTPROTO</span><span class="token punctuation">=</span><span class="token value attr-value">static</span>
<span class="token key attr-name">DEFROUTE</span><span class="token punctuation">=</span><span class="token value attr-value">yes</span>
<span class="token key attr-name">IPV4_FAILURE_FATAL</span><span class="token punctuation">=</span><span class="token value attr-value">no</span>
<span class="token key attr-name">IPV6INIT</span><span class="token punctuation">=</span><span class="token value attr-value">yes</span>
<span class="token key attr-name">IPV6_AUTOCONF</span><span class="token punctuation">=</span><span class="token value attr-value">yes</span>
<span class="token key attr-name">IPV6_DEFROUTE</span><span class="token punctuation">=</span><span class="token value attr-value">yes</span>
<span class="token key attr-name">IPV6_FAILURE_FATAL</span><span class="token punctuation">=</span><span class="token value attr-value">no</span>
<span class="token key attr-name">IPV6_ADDR_GEN_MODE</span><span class="token punctuation">=</span><span class="token value attr-value">stable-privacy</span>
<span class="token key attr-name">NAME</span><span class="token punctuation">=</span><span class="token value attr-value">ens33</span>
<span class="token key attr-name">UUID</span><span class="token punctuation">=</span><span class="token value attr-value">d768f819-cfc1-4a6d-8bf5-cd7359a86c75</span>
<span class="token key attr-name">DEVICE</span><span class="token punctuation">=</span><span class="token value attr-value">ens33</span>
<span class="token key attr-name">ONBOOT</span><span class="token punctuation">=</span><span class="token value attr-value">yes</span>
<span class="token comment"># IP地址 （根据自己的环境修改）</span>
<span class="token key attr-name">IPADDR</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.8.101</span>
<span class="token comment"># 子网掩码</span>
<span class="token key attr-name">NETMASK</span><span class="token punctuation">=</span><span class="token value attr-value">255.255.255.0</span>
<span class="token comment"># 网关（根据自己的环境修改）</span>
<span class="token key attr-name">GATEWAY</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.8.2</span>
<span class="token comment">#DNS</span>
<span class="token key attr-name">DNS1</span><span class="token punctuation">=</span><span class="token value attr-value">223.5.5.5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>完整配置截图如下：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/87ece5254bd850e3df759d5e1bd237d0.png" alt="image-20220429115226394" tabindex="0" loading="lazy"><figcaption>image-20220429115226394</figcaption></figure><p>环境不同，ip地址可能不同，所以需要安装自己的ip网段和网关地址进行配置。</p><ul><li>接下来重启网络服务</li></ul><p>systemctl restart network</p><p>查看ip地址，发现ip地址已经变成固定ip 192.168.8.101：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/3532e4c559d8d5e2d798f6f875c3708d.png" alt="image-20220429113917631" tabindex="0" loading="lazy"><figcaption>image-20220429113917631</figcaption></figure><h4 id="不能上网的错误排查" tabindex="-1"><a class="header-anchor" href="#不能上网的错误排查" aria-hidden="true">#</a> 不能上网的错误排查</h4><p>•vmware中网关是否正确</p><p>•直接ping ip是否能通（物理连接排查）</p><p>•卸载重装</p><h4 id="一些公网dns服务器" tabindex="-1"><a class="header-anchor" href="#一些公网dns服务器" aria-hidden="true">#</a> 一些公网DNS服务器</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#阿里</span>
<span class="token number">223.5</span>.5.5
<span class="token number">223.6</span>.6.6
<span class="token comment">#腾讯</span>
<span class="token number">119.29</span>.29.29
<span class="token number">182.254</span>.118.118
<span class="token comment">#百度</span>
<span class="token number">180.76</span>.76.76
<span class="token comment">#114 DNS</span>
<span class="token number">114.114</span>.114.114
<span class="token number">114.114</span>.115.115
<span class="token comment">#谷歌</span>
<span class="token number">8.8</span>.8.8
<span class="token number">8.8</span>.4.4
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="centos7-防火墙的关闭" tabindex="-1"><a class="header-anchor" href="#centos7-防火墙的关闭" aria-hidden="true">#</a> Centos7 防火墙的关闭</h3><p>CentOS 7.0默认使用的是firewall作为防火墙</p><p>查看防火墙状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--state</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>停止firewall</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl stop firewalld.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>禁止firewall开机启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl disable firewalld.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>放行端口</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--zone</span><span class="token operator">=</span>public --add-port<span class="token operator">=</span><span class="token number">80</span>/tcp <span class="token parameter variable">--permanent</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>重启防火墙</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>firewall-cmd <span class="token parameter variable">--reload</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="宝塔linux面板安装教程" tabindex="-1"><a class="header-anchor" href="#宝塔linux面板安装教程" aria-hidden="true">#</a> 宝塔Linux面板安装教程</h2>`,86),u={href:"https://www.bt.cn/bbs/thread-19376-1-1.html",target:"_blank",rel:"noopener noreferrer"},b=i(`<p>安装命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> <span class="token function">wget</span> <span class="token operator">&amp;&amp;</span> <span class="token function">wget</span> <span class="token parameter variable">-O</span> install.sh http://download.bt.cn/install/install_6.0.sh <span class="token operator">&amp;&amp;</span> <span class="token function">sh</span> install.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装成功的截图如下：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/9ac79b0e7b72205dd590fd2dc4432436.png" alt="image-20220429140421939" tabindex="0" loading="lazy"><figcaption>image-20220429140421939</figcaption></figure><p>一定要保管好链接和用户名、密码。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>外网面板地址: http://183.208.21.74:8888/f5ec0b77
内网面板地址: http://192.168.8.101:8888/f5ec0b77
username: 5ano3drc
password: cd9e6a03
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装好进行访问：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/ac13ac60545463123496a578de0a9cdb.png" alt="image-20220429140613371" tabindex="0" loading="lazy"><figcaption>image-20220429140613371</figcaption></figure><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/08a61587617eefbab0f3afd7b3c09229.png" alt="image-20220429140830710" tabindex="0" loading="lazy"><figcaption>image-20220429140830710</figcaption></figure><p>面板卸载：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/etc/init.d/bt stop <span class="token operator">&amp;&amp;</span> <span class="token function">chkconfig</span> <span class="token parameter variable">--del</span> bt <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-f</span> /etc/init.d/bt <span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> /www/server/panel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="nginx的安装" tabindex="-1"><a class="header-anchor" href="#nginx的安装" aria-hidden="true">#</a> Nginx的安装</h2><p>版本区别</p><p>常用版本分为四大阵营</p><ul><li>Nginx开源版</li></ul><p>http://nginx.org/</p><ul><li>Nginx plus 商业版</li></ul><p>https://www.nginx.com</p><ul><li>openresty</li></ul><p>http://openresty.org/cn/</p><ul><li>Tengine</li></ul><p>http://tengine.taobao.org</p><p>Nginx的安装可以选择源码编译的方式也可以使用宝塔面板安装，本文采用的是源码编译安装。</p><h3 id="使用源码编译安装" tabindex="-1"><a class="header-anchor" href="#使用源码编译安装" aria-hidden="true">#</a> 使用源码编译安装</h3><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/af85c29ff8b610e01dac079f429a25e0.png" alt="(img-EauVlNXu-1651289700752)" tabindex="0" loading="lazy"><figcaption>(img-EauVlNXu-1651289700752)</figcaption></figure><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/b0a62a314a10055ca90dfa825908ae73.png" alt="image-20220429185907815" tabindex="0" loading="lazy"><figcaption>image-20220429185907815</figcaption></figure><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> zxvf nginx-1.21.6.tar.gz
<span class="token builtin class-name">cd</span> nginx-1.21.6
./configure <span class="token parameter variable">--prefix</span><span class="token operator">=</span>/usr/local/nginx  <span class="token comment"># --prefix=/usr/local/nginx 指安装路径是/usr/local/nginx，如果前面安装了宝塔Linux面板，这一步应该不会出现环境问题。</span>

<span class="token function">make</span>
<span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="如果出现警告或报错" tabindex="-1"><a class="header-anchor" href="#如果出现警告或报错" aria-hidden="true">#</a> 如果出现警告或报错</h4><p>提示：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>checking <span class="token keyword">for</span> OS
+ Linux <span class="token number">3.10</span>.0-693.el7.x86_64 x86_64
checking <span class="token keyword">for</span> C compiler <span class="token punctuation">..</span>. not found
./configure: error: C compiler cc is not found
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装gcc</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> gcc
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>提示：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/configure: error: the HTTP rewrite module requires the PCRE library.
You can either disable the module by using --without-http_rewrite_module
option, or <span class="token function">install</span> the PCRE library into the system, or build the PCRE library
statically from the <span class="token builtin class-name">source</span> with nginx by using --with-pcre<span class="token operator">=</span><span class="token operator">&lt;</span>path<span class="token operator">&gt;</span> option.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装perl库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> pcre pcre-devel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>提示：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./configure: error: the HTTP <span class="token function">gzip</span> module requires the zlib library.
You can either disable the module by using --without-http_gzip_module
option, or <span class="token function">install</span> the zlib library into the system, or build the zlib library
statically from the <span class="token builtin class-name">source</span> with nginx by using --with-zlib<span class="token operator">=</span><span class="token operator">&lt;</span>path<span class="token operator">&gt;</span> option.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装zlib库:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> zlib zlib-devel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>接下来执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">make</span>
<span class="token function">make</span> <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>启动nginx</p><p>进入安装好的目录 /usr/local/nginx/sbin</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>./nginx					    <span class="token comment"># 启动</span>
./nginx <span class="token parameter variable">-s</span> stop			 	<span class="token comment">#快速停止</span>
./nginx <span class="token parameter variable">-s</span> quit 			<span class="token comment">#优雅关闭，在退出前完成已经接受的连接请求</span>
./nginx <span class="token parameter variable">-s</span> reload 			<span class="token comment">#重新加载配置</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装成功的截图如下：<br><img src="https://gitlab.com/apzs/image/-/raw/master/image/47eca2d15cbc4375887a9c426c0102a9.png" alt="在这里插入图片描述" loading="lazy"></p><h4 id="安装成系统服务" tabindex="-1"><a class="header-anchor" href="#安装成系统服务" aria-hidden="true">#</a> 安装成系统服务</h4><p>在如下位置创建服务脚本nginx.service</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /usr/lib/systemd/system/nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>服务脚本内容如下(注意路径要对应，这里的路径是/usr/local/nginx/sbin)：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>nginx - web server
<span class="token assign-left variable">After</span><span class="token operator">=</span>network.target remote-fs.target nss-lookup.target

<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>forking
<span class="token assign-left variable">PIDFile</span><span class="token operator">=</span>/usr/local/nginx/logs/nginx.pid
<span class="token assign-left variable">ExecStartPre</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-t</span> <span class="token parameter variable">-c</span> /usr/local/nginx/conf/nginx.conf
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-c</span> /usr/local/nginx/conf/nginx.conf
<span class="token assign-left variable">ExecReload</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> reload
<span class="token assign-left variable">ExecStop</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> stop
<span class="token assign-left variable">ExecQuit</span><span class="token operator">=</span>/usr/local/nginx/sbin/nginx <span class="token parameter variable">-s</span> quit
<span class="token assign-left variable">PrivateTmp</span><span class="token operator">=</span>true

<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新加载系统服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl daemon-reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>启动服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>开机启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> nginx.service
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>测试，访问http://192.168.8.101/：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/165ac018335f97bb960c8dfa26b9ff7d.png" alt="image-20220430113130276" tabindex="0" loading="lazy"><figcaption>image-20220430113130276</figcaption></figure><h3 id="使用宝塔面板安装" tabindex="-1"><a class="header-anchor" href="#使用宝塔面板安装" aria-hidden="true">#</a> 使用宝塔面板安装</h3><p>宝塔面板安装的版本不是nginx的开源版本，作为学习，建议使用源码编译安装，熟练了再使用宝塔版的nginx。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/3e47e2dd87922e4adea1f5fb000e4288.png" alt="image-20220429141216233" tabindex="0" loading="lazy"><figcaption>image-20220429141216233</figcaption></figure><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/9b1482167e1c0c489cac7c344eae2db1.png" alt="image-20220429141248750" tabindex="0" loading="lazy"><figcaption>image-20220429141248750</figcaption></figure><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2><p>Nginx参考文档：https://www.w3cschool.cn/nginx/nginx-d1aw28wa.html</p>`,65);function v(h,f){const n=l("ExternalLinkIcon");return r(),p("div",null,[a("h1",d,[o,e(),a("a",g,[e("虚拟机安装"),s(n)])]),m,a("p",null,[e("参考："),a("a",u,[e("https://www.bt.cn/bbs/thread-19376-1-1.html"),s(n)])]),b])}const y=t(c,[["render",v],["__file","1.Nginx的安装部署.html.vue"]]);export{y as default};
