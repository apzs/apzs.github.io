import{_ as c}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as l,o as p,c as d,a as n,b as s,d as e,w as o,e as t}from"./app-YilgCgZO.js";const r={},u=n("h1",{id:"八、k8s-集群部署",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#八、k8s-集群部署","aria-hidden":"true"},"#"),s(" 八、k8s 集群部署")],-1),m=n("p",null,"Kubernetes 简称 k8s。是用于自动部署，扩展和管理容器化应用程序的开源系统。",-1),b=n("p",null,"中文官网：https://kubernetes.io/zh/",-1),g=n("p",null,"中文社区：https://www.kubernetes.org.cn/",-1),k=n("p",null,"官方文档：https://kubernetes.io/zh/docs/home/",-1),v=n("p",null,"社区文档：http://docs.kubernetes.org.cn",-1),h=n("h2",{id:"_8-1、基础知识",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_8-1、基础知识","aria-hidden":"true"},"#"),s(" 8.1、基础知识")],-1),f={id:"_8-1-1、概述-kubernetes",tabindex:"-1"},y=n("a",{class:"header-anchor",href:"#_8-1-1、概述-kubernetes","aria-hidden":"true"},"#",-1),_={href:"https://kubernetes.io/zh-cn/docs/concepts/overview/",target:"_blank",rel:"noopener noreferrer"},x=n("p",null,"Kubernetes 是一个可移植、可扩展的开源平台，用于管理容器化的工作负载和服务，可促进声明式配置和自动化。 Kubernetes 拥有一个庞大且快速增长的生态，其服务、支持和工具的使用范围相当广泛。",-1),w=n("strong",null,"Kubernetes",-1),z={href:"https://research.google/pubs/pub43438",target:"_blank",rel:"noopener noreferrer"},S=t('<h4 id="_1、时光回溯" tabindex="-1"><a class="header-anchor" href="#_1、时光回溯" aria-hidden="true">#</a> 1、时光回溯</h4><p>让我们回顾一下为何 Kubernetes 能够裨益四方。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.1.1.svg" alt="部署演进" tabindex="0" loading="lazy"><figcaption>部署演进</figcaption></figure><h5 id="传统部署时代" tabindex="-1"><a class="header-anchor" href="#传统部署时代" aria-hidden="true">#</a> <strong>传统部署时代：</strong></h5><p>早期，各个组织是在物理服务器上运行应用程序。 由于无法限制在物理服务器中运行的应用程序资源使用，因此会导致资源分配问题。 例如，如果在同一台物理服务器上运行多个应用程序， 则可能会出现一个应用程序占用大部分资源的情况，而导致其他应用程序的性能下降。 一种解决方案是将每个应用程序都运行在不同的物理服务器上， 但是当某个应用程式资源利用率不高时，剩余资源无法被分配给其他应用程式， 而且维护许多物理服务器的成本很高。</p><h5 id="虚拟化部署时代" tabindex="-1"><a class="header-anchor" href="#虚拟化部署时代" aria-hidden="true">#</a> <strong>虚拟化部署时代：</strong></h5><p>因此，虚拟化技术被引入了。虚拟化技术允许你在单个物理服务器的 CPU 上运行多台虚拟机（VM）。 虚拟化能使应用程序在不同 VM 之间被彼此隔离，且能提供一定程度的安全性， 因为一个应用程序的信息不能被另一应用程序随意访问。</p><p>虚拟化技术能够更好地利用物理服务器的资源，并且因为可轻松地添加或更新应用程序， 而因此可以具有更高的可扩缩性，以及降低硬件成本等等的好处。 通过虚拟化，你可以将一组物理资源呈现为可丢弃的虚拟机集群。</p><p>每个 VM 是一台完整的计算机，在虚拟化硬件之上运行所有组件，包括其自己的操作系统。</p><h5 id="容器部署时代" tabindex="-1"><a class="header-anchor" href="#容器部署时代" aria-hidden="true">#</a> <strong>容器部署时代：</strong></h5><p>容器类似于 VM，但是更宽松的隔离特性，使容器之间可以共享操作系统（OS）。 因此，容器比起 VM 被认为是更轻量级的。且与 VM 类似，每个容器都具有自己的文件系统、CPU、内存、进程空间等。 由于它们与基础架构分离，因此可以跨云和 OS 发行版本进行移植。</p><p>容器因具有许多优势而变得流行起来，例如：</p><ul><li>敏捷应用程序的创建和部署：与使用 VM 镜像相比，提高了容器镜像创建的简便性和效率。</li><li>持续开发、集成和部署：通过快速简单的回滚（由于镜像不可变性）， 提供可靠且频繁的容器镜像构建和部署。</li><li>关注开发与运维的分离：在构建、发布时创建应用程序容器镜像，而不是在部署时， 从而将应用程序与基础架构分离。</li><li>可观察性：不仅可以显示 OS 级别的信息和指标，还可以显示应用程序的运行状况和其他指标信号。</li><li>跨开发、测试和生产的环境一致性：在笔记本计算机上也可以和在云中运行一样的应用程序。</li><li>跨云和操作系统发行版本的可移植性：可在 Ubuntu、RHEL、CoreOS、本地、 Google Kubernetes Engine 和其他任何地方运行。</li><li>以应用程序为中心的管理：提高抽象级别，从在虚拟硬件上运行 OS 到使用逻辑资源在 OS 上运行应用程序。</li><li>松散耦合、分布式、弹性、解放的微服务：应用程序被分解成较小的独立部分， 并且可以动态部署和管理 - 而不是在一台大型单机上整体运行。</li><li>资源隔离：可预测的应用程序性能。</li><li>资源利用：高效率和高密度。</li></ul><h4 id="_2、为什么需要-kubernetes-它能做什么" tabindex="-1"><a class="header-anchor" href="#_2、为什么需要-kubernetes-它能做什么" aria-hidden="true">#</a> 2、为什么需要 Kubernetes，它能做什么？</h4><p>容器是打包和运行应用程序的好方式。在生产环境中， 你需要管理运行着应用程序的容器，并确保服务不会下线。 例如，如果一个容器发生故障，则你需要启动另一个容器。 如果此行为交由给系统处理，是不是会更容易一些？</p><p>这就是 Kubernetes 要来做的事情！ Kubernetes 为你提供了一个可弹性运行分布式系统的框架。 Kubernetes 会满足你的扩展要求、故障转移你的应用、提供部署模式等。 例如，Kubernetes 可以轻松管理系统的 Canary 部署。</p><p>Kubernetes 为你提供：</p><ul><li><p><strong>服务发现和负载均衡</strong></p><p>Kubernetes 可以使用 DNS 名称或自己的 IP 地址来曝露容器。 如果进入容器的流量很大， Kubernetes 可以负载均衡并分配网络流量，从而使部署稳定。</p></li><li><p><strong>存储编排</strong></p><p>Kubernetes 允许你自动挂载你选择的存储系统，例如本地存储、公共云提供商等。</p></li><li><p><strong>自动部署和回滚</strong></p><p>你可以使用 Kubernetes 描述已部署容器的所需状态， 它可以以受控的速率将实际状态更改为期望状态。 例如，你可以自动化 Kubernetes 来为你的部署创建新容器， 删除现有容器并将它们的所有资源用于新容器。</p></li><li><p><strong>自动完成装箱计算</strong></p><p>你为 Kubernetes 提供许多节点组成的集群，在这个集群上运行容器化的任务。 你告诉 Kubernetes 每个容器需要多少 CPU 和内存 (RAM)。 Kubernetes 可以将这些容器按实际情况调度到你的节点上，以最佳方式利用你的资源。</p></li><li><p><strong>自我修复</strong></p><p>Kubernetes 将重新启动失败的容器、替换容器、杀死不响应用户定义的运行状况检查的容器， 并且在准备好服务之前不将其通告给客户端。</p></li><li><p><strong>密钥与配置管理</strong></p><p>Kubernetes 允许你存储和管理敏感信息，例如密码、OAuth 令牌和 ssh 密钥。 你可以在不重建容器镜像的情况下部署和更新密钥和应用程序配置，也无需在堆栈配置中暴露密钥。</p></li></ul><h4 id="_3、kubernetes-不是什么" tabindex="-1"><a class="header-anchor" href="#_3、kubernetes-不是什么" aria-hidden="true">#</a> 3、Kubernetes 不是什么</h4><p>Kubernetes 不是传统的、包罗万象的 PaaS（平台即服务）系统。 由于 Kubernetes 是在容器级别运行，而非在硬件级别，它提供了 PaaS 产品共有的一些普遍适用的功能， 例如部署、扩展、负载均衡，允许用户集成他们的日志记录、监控和警报方案。 但是，Kubernetes 不是单体式（monolithic）系统，那些默认解决方案都是可选、可插拔的。 Kubernetes 为构建开发人员平台提供了基础，但是在重要的地方保留了用户选择权，能有更高的灵活性。</p><p>Kubernetes：</p>',21),E=n("li",null,[n("p",null,"不限制支持的应用程序类型。 Kubernetes 旨在支持极其多种多样的工作负载，包括无状态、有状态和数据处理工作负载。 如果应用程序可以在容器中运行，那么它应该可以在 Kubernetes 上很好地运行。")],-1),A=n("li",null,[n("p",null,"不部署源代码，也不构建你的应用程序。 持续集成（CI）、交付和部署（CI/CD）工作流取决于组织的文化和偏好以及技术要求。")],-1),R={href:"https://openservicebrokerapi.org/",target:"_blank",rel:"noopener noreferrer"},P=n("li",null,[n("p",null,"不是日志记录、监视或警报的解决方案。 它集成了一些功能作为概念证明，并提供了收集和导出指标的机制。")],-1),T=n("li",null,[n("p",null,"不提供也不要求配置用的语言、系统（例如 jsonnet），它提供了声明性 API， 该声明性 API 可以由任意形式的声明性规范所构成。")],-1),I=n("li",null,[n("p",null,"不提供也不采用任何全面的机器配置、维护、管理或自我修复系统。")],-1),N=n("li",null,[n("p",null,"此外，Kubernetes 不仅仅是一个编排系统，实际上它消除了编排的需要。 编排的技术定义是执行已定义的工作流程：首先执行 A，然后执行 B，再执行 C。 而 Kubernetes 包含了一组独立可组合的控制过程，可以连续地将当前状态驱动到所提供的预期状态。 你不需要在乎如何从 A 移动到 C，也不需要集中控制，这使得系统更易于使用 且功能更强大、系统更健壮，更为弹性和可扩展。")],-1),C=t(`<p>docker原始方式</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.1.3.1.png" alt="image-20220903154614416" tabindex="0" loading="lazy"><figcaption>image-20220903154614416</figcaption></figure><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.1.3.2.png" alt="image-20220903162454242" tabindex="0" loading="lazy"><figcaption>image-20220903162454242</figcaption></figure><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.1.3.3.png" alt="image-20220903162514364" tabindex="0" loading="lazy"><figcaption>image-20220903162514364</figcaption></figure><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.1.3.4.png" alt="image-20220903162528981" tabindex="0" loading="lazy"><figcaption>image-20220903162528981</figcaption></figure><h3 id="_8-1-2、架构" tabindex="-1"><a class="header-anchor" href="#_8-1-2、架构" aria-hidden="true">#</a> 8.1.2、架构</h3><h4 id="_1、整体主从方式" tabindex="-1"><a class="header-anchor" href="#_1、整体主从方式" aria-hidden="true">#</a> 1、整体主从方式</h4><p>一台服务器成为Master节点，负责管理Node节点。其他服务器成为Node节点（Node节点有运行时环境，包含<code>kubelet</code>和<code>docker</code>）</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.2.1.1.png" alt="image-20220903155155189" tabindex="0" loading="lazy"><figcaption>image-20220903155155189</figcaption></figure><p>一个<code>Master</code>管理多个<code>Node</code>，每一个<code>Node</code>都是一台服务器。想要操作<code>Kubernetes</code>，可以使用<code>可视化界面</code>或<code>命令行</code>通过<code>Kubernetes</code>暴露的<code>API</code>给<code>Master</code>发送请求，<code>Master</code>收到请求后，调度节点进行操作</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.2.1.2.png" alt="image-20220903155644137" tabindex="0" loading="lazy"><figcaption>image-20220903155644137</figcaption></figure><h4 id="_2、master-节点架构" tabindex="-1"><a class="header-anchor" href="#_2、master-节点架构" aria-hidden="true">#</a> 2、Master 节点架构</h4><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.2.2.png" alt="image-20220903160929236" tabindex="0" loading="lazy"><figcaption>image-20220903160929236</figcaption></figure><ul><li><strong>kube-apiserver</strong><ul><li>对外暴露 K8S 的 api 接口，是外界进行资源操作的唯一入口</li><li>提供认证、授权、访问控制、API 注册和发现等机制</li></ul></li><li><strong>etcd</strong><ul><li>etcd 是兼具一致性和高可用性的键值数据库，可以作为保存 Kubernetes 所有集群数据的后台数据库。</li><li>Kubernetes 集群的 etcd 数据库通常需要有个备份计划</li></ul></li><li><strong>kube-scheduler</strong><ul><li>主节点上的组件，该组件监视那些新创建的未指定运行节点的<code>Pod</code>，并选择节点让<code>Pod</code>在上面运行。</li><li>所有对 k8s 的集群操作，都必须经过主节点进行调度</li></ul></li><li><strong>kube-controller-manager</strong><ul><li>在主节点上运行控制器的组件</li><li>这些控制器包括: <ul><li>节点控制器（Node Controller）: 负责在节点出现故障时进行通知和响应。</li><li>副本控制器（Replication Controller）: 负责为系统中的每个副本控制器对象维护正确数量的 Pod。</li><li>端点控制器（Endpoints Controller）: 填充端点(Endpoints)对象(即加入 Service 与 Pod) 。</li><li>服务帐户和令牌控制器（Service Account &amp; Token Controllers）: 为新的命名空间创建默认帐户和 API 访问令牌</li></ul></li></ul></li></ul><p>假设想要部署一个应用，给<code>Kubernetes</code>发送一个命令，指明我们想要部署一个应用。<code>API Server</code>收到以后，先把部署的信息存到<code>etcd</code>里，由<code>Scheduler</code>负责拿到存储在<code>etcd</code>的信息，然后进行调度。</p><h4 id="_3、node-节点架构" tabindex="-1"><a class="header-anchor" href="#_3、node-节点架构" aria-hidden="true">#</a> 3、Node 节点架构</h4><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.2.3.png" alt="image-20220903162558381" tabindex="0" loading="lazy"><figcaption>image-20220903162558381</figcaption></figure><ul><li><strong>kubelet</strong><ul><li>一个在集群中每个节点上运行的代理。它保证容器都运行在 Pod 中。(一个或多个有关联的容器可以成为一个Pod)</li><li>负责维护容器的生命周期，同时也负责 Volume卷（CSI）和网络（CNI）的管理；</li></ul></li><li><strong>kube-proxy</strong><ul><li>负责为 Service 提供 cluster 内部的服务发现和负载均衡；(所有和网络相关的都是由kube-proxy代理。比如想访问Pod，所有的访问请求就会交给<code>kube-proxy</code>，<code>kube-proxy</code>负责帮我们查看<code>Pod</code>在哪，相当于一个路由器)</li></ul></li><li><strong>容器运行环境(Container Runtime)</strong><ul><li>容器运行环境是负责运行容器的软件。</li><li>Kubernetes 支持多个容器运行环境: Docker、 containerd、cri-o、 rktlet 以及任何实现 Kubernetes CRI (容器运行环境接口)。</li></ul></li><li><strong>fluentd</strong><ul><li>是一个守护进程，它有助于提供集群层面日志 集群层面的日志</li></ul></li></ul><p><code>Kubelet</code>负责管理<code>Pod</code>，<code>Kube-proxy</code>负责<code>pod</code>的网络，<code>docker</code>提供运行环境，<code>Fluentd</code>负责<code>收集日志</code></p><h4 id="_4-相关概念" tabindex="-1"><a class="header-anchor" href="#_4-相关概念" aria-hidden="true">#</a> 4. 相关概念</h4><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.2.4.1.png" alt="image-20220903164645855" tabindex="0" loading="lazy"><figcaption>image-20220903164645855</figcaption></figure><p>k8s就是一个管理者，简单说就是把N多个服务器资源全部给K8s，k8s进行分配。管理单元是pod，运行单元是docker</p><ul><li><strong>Container</strong>：容器，可以是 docker 启动的一个容器</li><li><strong>Pod</strong>： <ul><li>k8s 使用 Pod 来组织一组容器</li><li>一个 Pod 中的所有容器共享同一网络。</li><li>Pod 是 k8s 中的最小部署单元</li></ul></li><li><strong>Volume</strong><ul><li>声明在 Pod 容器中可访问的文件目录</li><li>可以被挂载在 Pod 中一个或多个容器指定路径下</li><li>支持多种后端存储抽象(本地存储，分布式存储，云存 储…)</li></ul></li></ul><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.2.4.2.png" alt="image-20220903184017312" tabindex="0" loading="lazy"><figcaption>image-20220903184017312</figcaption></figure><ul><li><strong>Controllers</strong>：更高层次对象，部署和管理 Pod； <ul><li>ReplicaSet：确保预期的 Pod 副本数量</li><li>Deplotment：无状态应用部署 (比如一个订单服务崩了以后，关闭该应用，再创建一个订单服务就行了)</li><li>StatefulSet：有状态应用部署 (比如mysql会在本地磁盘里存储数据，如果这个mysql服务崩了，再拉取一个mysql也不能获取到这些数据)</li><li>DaemonSet：确保所有 Node 都运行一个指定 Pod</li><li>Job：一次性任务</li><li>Cronjob：定时任务</li></ul></li><li><strong>Deployment</strong>： <ul><li>定义一组 Pod 的副本数目、版本等</li><li>通过控制器（Controller）维持 Pod 数目(自动回复失败的 Pod)</li><li>通过控制器以指定的策略控制版本（滚动升级，回滚等）</li></ul></li></ul><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.2.4.3.png" alt="image-20220903184105873" tabindex="0" loading="lazy"><figcaption>image-20220903184105873</figcaption></figure><ul><li><strong>Service</strong><ul><li>定义一组 Pod 的访问策略</li><li>Pod 的负载均衡，提供一个或者多个 Pod 的稳定访问地址</li><li>支持多种方式（ClusterIP、NodePort、LoadBalance）</li></ul></li></ul><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.2.4.4.png" alt="image-20220903184202006" tabindex="0" loading="lazy"><figcaption>image-20220903184202006</figcaption></figure><ul><li><strong>Label</strong>：标签，用于对象资源的查询，筛选</li></ul><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.2.4.5.png" alt="image-20220903184224423" tabindex="0" loading="lazy"><figcaption>image-20220903184224423</figcaption></figure><ul><li><strong>Namespace</strong>：命名空间，逻辑隔离 <ul><li>一个集群内部的逻辑隔离机制（鉴权，资源）</li><li>每个资源都属于一个 namespace</li><li>同一个 namespace 所有资源名不能重复</li><li>不同 namespace 可以资源名重复</li></ul></li></ul><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.2.4.6.png" alt="image-20220903184237412" tabindex="0" loading="lazy"><figcaption>image-20220903184237412</figcaption></figure><p><strong>API</strong>：</p><p>我们通过 kubernetes 的 API 来操作整个集群。</p><p>可以通过 kubectl、ui、curl 最终发送 http+json/yaml 方式的请求给 API Server，然后控制 k8s 集群。<strong>k8s 里的所有的资源对象都可以采用 yaml 或 JSON 格式的文件定义或描述</strong></p><h3 id="_8-1-3、使用centos" tabindex="-1"><a class="header-anchor" href="#_8-1-3、使用centos" aria-hidden="true">#</a> 8.1.3、使用<code>Centos</code></h3><h4 id="_1、下载centos" tabindex="-1"><a class="header-anchor" href="#_1、下载centos" aria-hidden="true">#</a> 1、下载<code>Centos</code></h4><p>打开<code>Oracle VM VirtualBox</code>，点击<code>管理(F) -&gt; 主机网络管理器</code>，只保留一个<code>ip</code>地址为<code>192.168.56.1</code>的。（如果更新了<code>Oracle VM VirtualBox</code>，可以点击<code>管理(F) -&gt; 工具 -&gt; Network Manager</code>）</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.1.1.gif" alt="GIF 2022-9-3 21-37-08" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-3 21-37-08</figcaption></figure><p>对比基础篇创建<code>centos</code>的<code>Vagrantfile</code>和现在高级篇准备创建的<code>3</code>台<code>centos</code>的<code>Vagrantfile</code>文件，将下载<code>centos</code>的地址修改为中科大的镜像</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.1.2.png" alt="image-20220904144701450" tabindex="0" loading="lazy"><figcaption>image-20220904144701450</figcaption></figure><p>在<code>node.vm.hostname=&quot;k8s-node#{i}&quot;</code>下面添加<code>node.vm.box_url = &quot;https://mirrors.ustc.edu.cn/centos-cloud/centos/7/vagrant/x86_64/images/CentOS-7.box&quot;</code>，以使用中科大的镜像</p><div class="language-nginx line-numbers-mode" data-ext="nginx"><pre class="language-nginx"><code>Vagrant.configure(&quot;2&quot;) do |config|
   (1..3).each do |i|
        config.vm.define &quot;k8s-node#<span class="token punctuation">{</span>i<span class="token punctuation">}</span>&quot; do |node|
            <span class="token comment"># 设置虚拟机的Box</span>
            node.vm.box = &quot;centos/7&quot;

            <span class="token comment"># 设置虚拟机的主机名</span>
            node.vm.hostname=&quot;k8s-node#<span class="token punctuation">{</span>i<span class="token punctuation">}</span>&quot;

            node.vm.box_url = &quot;https://mirrors.ustc.edu.cn/centos-cloud/centos/7/vagrant/x86_64/images/CentOS-7.box&quot;

            <span class="token comment"># 设置虚拟机的IP</span>
            node.vm.network &quot;private_network&quot;, ip: &quot;192.168.56.#<span class="token punctuation">{</span>99+i<span class="token punctuation">}</span>&quot;, netmask: &quot;255.255.255.0&quot;

            <span class="token comment"># 设置主机与虚拟机的共享目录</span>
            <span class="token comment"># node.vm.synced_folder &quot;~/Documents/vagrant/share&quot;, &quot;/home/vagrant/share&quot;</span>

            <span class="token comment"># VirtaulBox相关配置</span>
            node.vm.provider &quot;virtualbox&quot; do |v|
                <span class="token comment"># 设置虚拟机的名称</span>
                v.name = &quot;k8s-node#<span class="token punctuation">{</span>i<span class="token punctuation">}</span>&quot;
                <span class="token comment"># 设置虚拟机的内存大小</span>
                v.memory = 4096
                <span class="token comment"># 设置虚拟机的CPU个数</span>
                v.cpus = 4
            end
        end
   end
end
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.1.3.png" alt="image-20220904144919027" tabindex="0" loading="lazy"><figcaption>image-20220904144919027</figcaption></figure><p>或用迅雷下载好<code>.box</code>文件，然后使用<code>vagrant box add centos/7 VirtualBox.box</code>命令，或者在<code>Oracle VM VirtualBox</code>里导入<code>.box</code>文件也行</p><p>然后使用<code>vagrant up</code>创建这<code>3</code>台<code>centos</code>虚拟主机</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>vagrant up
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.1.4.png" alt="image-20220904165612080" tabindex="0" loading="lazy"><figcaption>image-20220904165612080</figcaption></figure><h4 id="_2、使用密码连接虚拟主机" tabindex="-1"><a class="header-anchor" href="#_2、使用密码连接虚拟主机" aria-hidden="true">#</a> 2、使用密码连接虚拟主机</h4><h5 id="_1、开启密码连接-允许连接root用户" tabindex="-1"><a class="header-anchor" href="#_1、开启密码连接-允许连接root用户" aria-hidden="true">#</a> 1、开启密码连接~~&amp;允许连接root用户~~</h5><p><code>k8s-node1</code>应该使用<code>vi /etc/ssh/sshd_config</code>命令，而不是<code>vi /etc/ssh/ssh_config</code>，这里用错了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>D:<span class="token punctuation">\\</span>k8s<span class="token operator">&gt;</span>vagrant <span class="token function">ssh</span> k8s-node1
<span class="token punctuation">[</span>vagrant@k8s-node1 ~<span class="token punctuation">]</span>$ <span class="token function">su</span> root
Password: <span class="token comment">#密码为 vagrant</span>
<span class="token punctuation">[</span>root@k8s-node1 vagrant<span class="token punctuation">]</span><span class="token comment"># vi /etc/ssh/ssh_config  #这里写错了应该为\`vi /etc/ssh/sshd_config\`</span>
<span class="token punctuation">[</span>root@k8s-node1 vagrant<span class="token punctuation">]</span><span class="token comment"># service sshd restart</span>
Redirecting to /bin/systemctl restart sshd.service <span class="token comment">#重启sshd服务。然如果忘记重启sshd服务,重启一下虚拟机也可以</span>
<span class="token punctuation">[</span>root@k8s-node1 vagrant<span class="token punctuation">]</span><span class="token comment"># exit;</span>
<span class="token builtin class-name">exit</span>
<span class="token punctuation">[</span>vagrant@k8s-node1 ~<span class="token punctuation">]</span>$ <span class="token builtin class-name">exit</span><span class="token punctuation">;</span>
<span class="token builtin class-name">logout</span>
Connection to <span class="token number">127.0</span>.0.1 closed.

D:<span class="token punctuation">\\</span>k8s<span class="token operator">&gt;</span>vagrant <span class="token function">ssh</span> k8s-node2
<span class="token punctuation">[</span>vagrant@k8s-node2 ~<span class="token punctuation">]</span>$ <span class="token function">su</span> root
Password:
<span class="token punctuation">[</span>root@k8s-node2 vagrant<span class="token punctuation">]</span><span class="token comment"># vi /etc/ssh/sshd_config</span>
<span class="token punctuation">[</span>root@k8s-node2 vagrant<span class="token punctuation">]</span><span class="token comment"># [root@k8s-node2 vagrant]#</span>
<span class="token punctuation">[</span>root@k8s-node2 vagrant<span class="token punctuation">]</span><span class="token comment"># service sshd restart</span>
Redirecting to /bin/systemctl restart sshd.service
<span class="token punctuation">[</span>root@k8s-node2 vagrant<span class="token punctuation">]</span><span class="token comment"># exit;</span>
<span class="token builtin class-name">exit</span>
<span class="token punctuation">[</span>vagrant@k8s-node2 ~<span class="token punctuation">]</span>$ <span class="token builtin class-name">exit</span><span class="token punctuation">;</span>
<span class="token builtin class-name">logout</span>
Connection to <span class="token number">127.0</span>.0.1 closed.

D:<span class="token punctuation">\\</span>k8s<span class="token operator">&gt;</span>vagrant <span class="token function">ssh</span> k8s-node3
<span class="token punctuation">[</span>vagrant@k8s-node3 ~<span class="token punctuation">]</span>$ <span class="token function">su</span> root
Password:
<span class="token punctuation">[</span>root@k8s-node3 vagrant<span class="token punctuation">]</span><span class="token comment"># vi /etc/ssh/sshd_config</span>
<span class="token punctuation">[</span>root@k8s-node3 vagrant<span class="token punctuation">]</span><span class="token comment"># [root@k8s-node3 vagrant]#</span>
<span class="token punctuation">[</span>root@k8s-node3 vagrant<span class="token punctuation">]</span><span class="token comment"># service sshd restart</span>
Redirecting to /bin/systemctl restart sshd.service
<span class="token punctuation">[</span>root@k8s-node3 vagrant<span class="token punctuation">]</span><span class="token comment"># exit;</span>
<span class="token builtin class-name">exit</span>
<span class="token punctuation">[</span>vagrant@k8s-node3 ~<span class="token punctuation">]</span>$ <span class="token builtin class-name">exit</span><span class="token punctuation">;</span>
<span class="token builtin class-name">logout</span>
Connection to <span class="token number">127.0</span>.0.1 closed.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.2.1.1.png" alt="image-20220904171713858" tabindex="0" loading="lazy"><figcaption>image-20220904171713858</figcaption></figure><p>将<code>PasswordAuthentication no</code>改为<code>PasswordAuthentication yes</code>，允许通过密码访问<code>centos</code>主机</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.2.1.2.png" alt="image-20220904171020186" tabindex="0" loading="lazy"><figcaption>image-20220904171020186</figcaption></figure><h5 id="_2、连接虚拟主机" tabindex="-1"><a class="header-anchor" href="#_2、连接虚拟主机" aria-hidden="true">#</a> 2、连接虚拟主机</h5><p>然后使用<code>Xshell</code>工具连接虚拟主机</p><table><thead><tr><th>名称</th><th>协议</th><th>主机</th><th>端口号</th><th>用户名</th><th>密码</th></tr></thead><tbody><tr><td>k8s-node1</td><td>SSH</td><td>192.168.56.100</td><td>22</td><td>root</td><td>vagrant</td></tr><tr><td>k8s-node2</td><td>SSH</td><td>192.168.56.101</td><td>22</td><td>root</td><td>vagrant</td></tr><tr><td>k8s-node3</td><td>SSH</td><td>192.168.56.102</td><td>22</td><td>root</td><td>vagrant</td></tr></tbody></table><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.2.2.gif" alt="GIF 2022-9-4 17-12-44" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-4 17-12-44</figcaption></figure><h5 id="_3、常见错误一" tabindex="-1"><a class="header-anchor" href="#_3、常见错误一" aria-hidden="true">#</a> 3、常见错误一：</h5><p>使用了错误的<code>vi /etc/ssh/ssh_config</code>命令，修改了<code>/etc/ssh/ssh_config</code>文件，发现没有<code>PasswordAuthentication no</code>这一行，手动添加<code>PasswordAuthentication yes</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.2.3.1.png" alt="image-20220904170145185" tabindex="0" loading="lazy"><figcaption>image-20220904170145185</figcaption></figure><p>或错误的取消注释掉<code>Host *</code>里的<code>PasswordAuthentication yes</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.2.3.2.png" alt="image-20220904162830913" tabindex="0" loading="lazy"><figcaption>image-20220904162830913</figcaption></figure><p>如果配置错误则会出现下面的情况，即不能输入密码，只能输入<code>Public Key(U)</code></p><p>点击<code>新建会话</code>，在<code>名称</code>里输入<code>k8s-node1</code>，在<code>主机</code>里输入<code> 192.168.56.100</code>，然后点击<code>确定</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.2.3.3.png" alt="image-20220904170150726" tabindex="0" loading="lazy"><figcaption>image-20220904170150726</figcaption></figure><p>在弹出的<code>SSH安全警告</code>里点击<code>接收并保持</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.2.3.4.png" alt="image-20220904170247798" tabindex="0" loading="lazy"><figcaption>image-20220904170247798</figcaption></figure><p>在弹出的<code>SSH 用户名</code>里输入<code>root</code>，并点击<code>确定</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.2.3.5.png" alt="image-20220904170242975" tabindex="0" loading="lazy"><figcaption>image-20220904170242975</figcaption></figure><p>可以看到不能输入密码，只能输入<code>Public Key(U)</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.2.3.6.png" alt="image-20220904170322446" tabindex="0" loading="lazy"><figcaption>image-20220904170322446</figcaption></figure><h5 id="_4、常见错误2" tabindex="-1"><a class="header-anchor" href="#_4、常见错误2" aria-hidden="true">#</a> 4、常见错误2：</h5><p>错误的将前面的<code>#PasswordAuthentication yes</code>取消注释</p><p>正确做法应该把该语句下面的<code>PasswordAuthentication no</code>改为<code>PasswordAuthentication yes</code></p><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.2.4.1.png" alt="image-20220904180249070" style="zoom:67%;"><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.2.4.2.gif" alt="GIF 2022-9-4 17-52-00" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-4 17-52-00</figcaption></figure><h4 id="_3、使用密钥连接虚拟主机" tabindex="-1"><a class="header-anchor" href="#_3、使用密钥连接虚拟主机" aria-hidden="true">#</a> 3、使用密钥连接虚拟主机</h4><h5 id="_1、服务端生成秘钥" tabindex="-1"><a class="header-anchor" href="#_1、服务端生成秘钥" aria-hidden="true">#</a> 1、服务端生成秘钥</h5>`,80),q={href:"https://cloud.tencent.com/developer/article/1179264?from=article.detail.1090656",target:"_blank",rel:"noopener noreferrer"},D={href:"https://www.cnblogs.com/yjcs123/p/10876755.html",target:"_blank",rel:"noopener noreferrer"},G={href:"https://blog.csdn.net/u014721096/article/details/78559506",target:"_blank",rel:"noopener noreferrer"},L={href:"http://t.zoukankan.com/JeremyWYL-p-7268627.html",target:"_blank",rel:"noopener noreferrer"},M={href:"https://blog.csdn.net/joshua2011/article/details/90208741",target:"_blank",rel:"noopener noreferrer"},O=t(`<h6 id="_1、生成密钥" tabindex="-1"><a class="header-anchor" href="#_1、生成密钥" aria-hidden="true">#</a> 1、生成密钥</h6><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>ssh-keygen <span class="token parameter variable">-b</span> <span class="token number">1024</span> <span class="token parameter variable">-t</span> dsa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h6 id="_2、修改文件名和密码" tabindex="-1"><a class="header-anchor" href="#_2、修改文件名和密码" aria-hidden="true">#</a> 2、修改文件名和密码</h6><p>可以不修改，直接按<code>enter键</code></p><h6 id="_3、生成认证秘钥" tabindex="-1"><a class="header-anchor" href="#_3、生成认证秘钥" aria-hidden="true">#</a> 3、生成认证秘钥</h6><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /root/.ssh/
<span class="token function">cat</span> id_dsa.pub <span class="token operator">&gt;&gt;</span> authorized_keys
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,6),U=t(`<img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.3.1.3.png" alt="image-20220904192706690" style="zoom:67%;"><h6 id="_4、复制id-dsa文件" tabindex="-1"><a class="header-anchor" href="#_4、复制id-dsa文件" aria-hidden="true">#</a> 4、复制<code>id_dsa</code>文件</h6><p>复制<code>id_dsa</code>文件给客户端，客户端通过工具使用该密钥连接服务端</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.3.1.4.1.gif" alt="GIF 2022-9-5 16-02-18" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-5 16-02-18</figcaption></figure><p><strong>或则手动用命令连接：</strong></p><p>分别把<code>id_dsa</code>、<code>id_dsa.pub</code>拷贝到Client端,</p><p>(1)windows下copy到C:\\Users\\youruser.ssh (2)mac下copy到/home/youruser/.ssh 或者 ~/.ssh</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-i</span> privateKey2 <span class="token parameter variable">-p</span> <span class="token number">22</span> root@192.168.56.100
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后报了如下错误，说<code>“privateKey”权限太开放，要求您的私钥文件不能被其他人访问</code>，我们可以将<code>privateKey</code>文件设置成只允许我们现在使用的这个用户访问</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>D:<span class="token punctuation">\\</span>k8s<span class="token operator">&gt;</span>ssh <span class="token parameter variable">-i</span> privateKey <span class="token parameter variable">-p</span> <span class="token number">22</span> root@192.168.56.100
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@         WARNING: UNPROTECTED PRIVATE KEY FILE<span class="token operator">!</span>          @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
Permissions <span class="token keyword">for</span> <span class="token string">&#39;privateKey&#39;</span> are too open.
It is required that your private key files are NOT accessible by others.
This private key will be ignored.
Load key <span class="token string">&quot;privateKey&quot;</span><span class="token builtin class-name">:</span> bad permissions
root@192.168.56.100: Permission denied <span class="token punctuation">(</span>publickey,gssapi-keyex,gssapi-with-mic<span class="token punctuation">)</span>.

D:<span class="token punctuation">\\</span>k8s<span class="token operator">&gt;</span>whoami
desktop-uf6t5ih<span class="token punctuation">\\</span>无名氏
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.3.1.4.2.gif" alt="GIF 2022-9-4 21-16-38" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-4 21-16-38</figcaption></figure><p>然后再次使用<code>ssh -i privateKey -p 22 root@192.168.56.100</code>命令，可以看到又报了<code>sign_and_send_pubkey：不支持相互签名</code>的错误，这是因为新版本的<code>OpenSHH</code>弃用了<code>ssh-rsa 算法</code>，</p>`,12),K={href:"https://stackoverflow.com/questions/71937335/cannot-update-git-repository-sign-and-send-pubkey-no-mutual-signature-support",target:"_blank",rel:"noopener noreferrer"},F={href:"https://confluence.atlassian.com/bitbucketserverkb/ssh-rsa-key-rejected-with-message-no-mutual-signature-algorithm-1026057701.html",target:"_blank",rel:"noopener noreferrer"},j=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>D:<span class="token punctuation">\\</span>k8s<span class="token operator">&gt;</span>ssh <span class="token parameter variable">-i</span> privateKey <span class="token parameter variable">-p</span> <span class="token number">22</span> root@192.168.56.100
sign_and_send_pubkey: no mutual signature supported
root@192.168.56.100: Permission denied <span class="token punctuation">(</span>publickey,gssapi-keyex,gssapi-with-mic<span class="token punctuation">)</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在<code>‪C:\\Users\\[你的用户名]\\.ssh\\config</code>文件里添加如下配置就可以了（注意是修改的是本地文件，不是虚拟机里的文件）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Host *
<span class="token assign-left variable">PubkeyAcceptedKeyTypes</span><span class="token operator">=</span>+ssh-dss
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.3.1.4.3.gif" alt="GIF 2022-9-4 21-30-11" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-4 21-30-11</figcaption></figure>`,4),V=n("code",null,"k8s-node1",-1),B=t(`<img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.3.1.4.4.png" alt="image-20220904194540017" style="zoom:50%;"><h5 id="_2、客户端生成密钥" tabindex="-1"><a class="header-anchor" href="#_2、客户端生成密钥" aria-hidden="true">#</a> 2、客户端生成密钥</h5><h6 id="_1、添加公钥" tabindex="-1"><a class="header-anchor" href="#_1、添加公钥" aria-hidden="true">#</a> 1、添加公钥</h6><p>客户端生成密钥和服务端生成密钥一样，无非就是客户端获取私钥，服务端获取公钥（客户端生成密钥和服务器端生成密钥差不多，都是使用<code>ssh-keygen -b 1024 -t dsa</code>命令，然后公钥和私钥都放在<code>‪C:\\Users\\[你的用户名]\\.ssh</code>文件夹里。当然也可以使用下图演示的方法，使用<code>Xshell</code>工具生成公钥）</p><p>可以看到<code>k8s-node3</code>节点使用<code>ssh-rsa</code>命令报了<code>ssh-rsa: command not found</code>异常</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>D:<span class="token punctuation">\\</span>k8s<span class="token operator">&gt;</span>vagrant <span class="token function">ssh</span> k8s-node3
Last login: Sun Sep  <span class="token number">4</span> <span class="token number">10</span>:00:15 <span class="token number">2022</span> from <span class="token number">10.0</span>.2.2
<span class="token punctuation">[</span>vagrant@k8s-node3 ~<span class="token punctuation">]</span>$ <span class="token function">su</span> root
Password:
<span class="token punctuation">[</span>root@k8s-node3 vagrant<span class="token punctuation">]</span><span class="token comment"># ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAzf0u5yn7gzbX/1N/CojUFsAaxbeYt7fhksQAVbngx8mr5ufAeL0nzXsuW8BsJm0+guiH6rBlAQ6vJJ83TSMD/2SwzWjlrEE36mPmsFMo7UjA4lGGI+cuZAofMES7k+KYMms4tVjyAL1UU+m1h9HswYrWC5qDgv+mSnRXlvzdm1UYC6ckGw6/tiTb1K3l0RHvqhFcWKds0cZtRVy0er2xrHzGFdIKYDRbaiT7VERZuML3Mh5cYey5HabiM7VG8fhjB3t0wfxEz46VrhYpRspvjWFaLwTDG4TTD8M3ELBx+UNZ1iG6Jbj5Q+RtKnXh6FAgXVjTeFGeu5qhldSQ5RG8uw==</span>
bash: ssh-rsa: <span class="token builtin class-name">command</span> not found
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.3.2.1.1.gif" alt="GIF 2022-9-5 16-10-33" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-5 16-10-33</figcaption></figure><p>下载<code>openssh-clients</code>后再次添加，可以看到这次添加成功了</p>`,8),Y=n("code",null,"k8s-node3",-1),H=t(`<figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.3.2.1.2.png" alt="image-20220905163725422" tabindex="0" loading="lazy"><figcaption>image-20220905163725422</figcaption></figure><p>参考链接： https://www.reddit.com/r/netsecstudents/comments/7s2zgb/sshrsa_command_not_found/</p><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.3.2.1.3.png" alt="image-20220905175237912" style="zoom:33%;"><h6 id="_2、真实主机向虚拟机里上传文件" tabindex="-1"><a class="header-anchor" href="#_2、真实主机向虚拟机里上传文件" aria-hidden="true">#</a> 2、真实主机向虚拟机里上传文件</h6><p>可以使用如下命令向虚拟主机里传文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>无名氏<span class="token operator">&gt;</span>scp <span class="token parameter variable">-r</span> A:<span class="token punctuation">\\</span>桌面<span class="token punctuation">\\</span>id_dsa_1024.pub root@192.168.56.102:/root
root@192.168.56.102&#39;s password:
id_dsa_1024.pub                                                                       <span class="token number">100</span>%  <span class="token number">588</span>   <span class="token number">196</span>.1KB/s   00:00
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>解释：</p><p><code>scp</code>命令格式如下</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>scp  [可选参数]  file_source  file_target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>完整命令如下，本地可以不写<code> 本地用户名@IP地址:</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>scp 本地用户名@IP地址:文件名1  远程用户名@IP地址:文件名2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.3.2.2.1.png" alt="image-20220905165249450" tabindex="0" loading="lazy"><figcaption>image-20220905165249450</figcaption></figure><p>使用如下命令向虚拟主机里添加公钥</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node3 vagrant<span class="token punctuation">]</span><span class="token comment"># pwd</span>
/home/vagrant
<span class="token punctuation">[</span>root@k8s-node3 vagrant<span class="token punctuation">]</span><span class="token comment"># cd /root</span>
<span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># ls</span>
anaconda-ks.cfg  id_dsa_1024.pub  original-ks.cfg
<span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># clear</span>
<span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># ls</span>
anaconda-ks.cfg  id_dsa_1024.pub  original-ks.cfg
<span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># rm id_dsa_1024.pub</span>
rm: remove regular <span class="token function">file</span> ‘id_dsa_1024.pub’? <span class="token function">yes</span>
<span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># ll</span>
total <span class="token number">16</span>
-rw-------. <span class="token number">1</span> root root <span class="token number">5570</span> Apr <span class="token number">30</span>  <span class="token number">2020</span> anaconda-ks.cfg
-rw-------. <span class="token number">1</span> root root <span class="token number">5300</span> Apr <span class="token number">30</span>  <span class="token number">2020</span> original-ks.cfg
<span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># cd /home/vagrant/</span>
<span class="token punctuation">[</span>root@k8s-node3 vagrant<span class="token punctuation">]</span><span class="token comment"># clear</span>
<span class="token punctuation">[</span>root@k8s-node3 vagrant<span class="token punctuation">]</span><span class="token comment"># pwd</span>
/home/vagrant
<span class="token punctuation">[</span>root@k8s-node3 vagrant<span class="token punctuation">]</span><span class="token comment"># cd /root</span>
<span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># ll</span>
total <span class="token number">20</span>
-rw-------. <span class="token number">1</span> root root <span class="token number">5570</span> Apr <span class="token number">30</span>  <span class="token number">2020</span> anaconda-ks.cfg
-rw-r--r--. <span class="token number">1</span> root root  <span class="token number">588</span> Sep  <span class="token number">5</span> 08:47 id_dsa_1024.pub
-rw-------. <span class="token number">1</span> root root <span class="token number">5300</span> Apr <span class="token number">30</span>  <span class="token number">2020</span> original-ks.cfg
<span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># ssh -i id_dsa_1024.pub</span>
usage: <span class="token function">ssh</span> <span class="token punctuation">[</span>-1246AaCfGgKkMNnqsTtVvXxYy<span class="token punctuation">]</span> <span class="token punctuation">[</span>-b bind_address<span class="token punctuation">]</span> <span class="token punctuation">[</span>-c cipher_spec<span class="token punctuation">]</span>
           <span class="token punctuation">[</span>-D <span class="token punctuation">[</span>bind_address:<span class="token punctuation">]</span>port<span class="token punctuation">]</span> <span class="token punctuation">[</span>-E log_file<span class="token punctuation">]</span> <span class="token punctuation">[</span>-e escape_char<span class="token punctuation">]</span>
           <span class="token punctuation">[</span>-F configfile<span class="token punctuation">]</span> <span class="token punctuation">[</span>-I pkcs11<span class="token punctuation">]</span> <span class="token punctuation">[</span>-i identity_file<span class="token punctuation">]</span>
           <span class="token punctuation">[</span>-J <span class="token punctuation">[</span>user@<span class="token punctuation">]</span>host<span class="token punctuation">[</span>:port<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token punctuation">[</span>-L address<span class="token punctuation">]</span> <span class="token punctuation">[</span>-l login_name<span class="token punctuation">]</span> <span class="token punctuation">[</span>-m mac_spec<span class="token punctuation">]</span>
           <span class="token punctuation">[</span>-O ctl_cmd<span class="token punctuation">]</span> <span class="token punctuation">[</span>-o option<span class="token punctuation">]</span> <span class="token punctuation">[</span>-p port<span class="token punctuation">]</span> <span class="token punctuation">[</span>-Q query_option<span class="token punctuation">]</span> <span class="token punctuation">[</span>-R address<span class="token punctuation">]</span>
           <span class="token punctuation">[</span>-S ctl_path<span class="token punctuation">]</span> <span class="token punctuation">[</span>-W host:port<span class="token punctuation">]</span> <span class="token punctuation">[</span>-w local_tun<span class="token punctuation">[</span>:remote_tun<span class="token punctuation">]</span><span class="token punctuation">]</span>
           <span class="token punctuation">[</span>user@<span class="token punctuation">]</span>hostname <span class="token punctuation">[</span>command<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.3.2.2.2.png" alt="image-20220905165325271" tabindex="0" loading="lazy"><figcaption>image-20220905165325271</figcaption></figure><p>完整的添加公钥步骤如下图所示：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.3.2.2.3.gif" alt="GIF 2022-9-5 16-50-50" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-5 16-50-50</figcaption></figure><p>可以使用<code>scp -r A:\\桌面\\id_dsa_1024.pub root@192.168.56.102:/root</code>命令传输文件，使用<code>ssh -i A:\\桌面\\id_dsa_1024.pub root@192.168.56.102</code>命令连接虚拟主机</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>无名氏<span class="token operator">&gt;</span>scp <span class="token parameter variable">-r</span> A:<span class="token punctuation">\\</span>桌面<span class="token punctuation">\\</span>id_dsa_1024.pub root@192.168.56.102:/root
root@192.168.56.102<span class="token string">&#39;s password:
id_dsa_1024.pub                                                                       100%  588   196.1KB/s   00:00

C:\\Users\\无名氏&gt;ssh -i A:\\桌面\\id_dsa_1024.pub root@192.168.56.102
root@192.168.56.102&#39;</span>s password:
Last login: Mon Sep  <span class="token number">5</span> 08:07:05 <span class="token number">2022</span>
<span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment">#</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.3.2.2.4.png" alt="image-20220905175619210" tabindex="0" loading="lazy"><figcaption>image-20220905175619210</figcaption></figure><p>完整过程如下：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.3.3.2.2.5.gif" alt="GIF 2022-9-5 17-58-20" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-5 17-58-20</figcaption></figure><h3 id="_8-1-4、使用k8s的前置准备" tabindex="-1"><a class="header-anchor" href="#_8-1-4、使用k8s的前置准备" aria-hidden="true">#</a> 8.1.4、使用k8s的前置准备</h3><h4 id="_1、设置网络环境" tabindex="-1"><a class="header-anchor" href="#_1、设置网络环境" aria-hidden="true">#</a> 1、设置网络环境</h4><p>随便在一个会话标签里<code>右键</code>，选择<code>发送键输入到所有会话(K)</code>，对3个节点同样使用<code>ip route show</code>命令可以发现都是使用相同的<code>eth0</code>网卡，然后使用<code>ip addr</code>命令查看网卡和<code>ip</code>信息，可以看到这<code>3</code>个虚拟主机的<code>etho</code>网卡都是相同的<code>ip</code>地址</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.1.1.gif" alt="GIF 2022-9-5 18-07-08" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-5 18-07-08</figcaption></figure><p>这是因为我们在各节点的设置的<code>网络</code>里设置的连接方式是<code>网络地址转换</code>，用的端口转发的方式连接本地主机</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.1.2.gif" alt="GIF 2022-9-5 18-09-27" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-5 18-09-27</figcaption></figure><p>这种方式可以让所有的虚拟机都能连接上互联网，但是<code>Kubernetes</code>会把它们都当成一样的，容易产生问题</p><p>因此我们可以打开<code>Oracle VM VirtualBox</code>，点击<code>管理(F) -&gt; 全局设定</code>在网络里点击添加以添加一个虚拟网卡；然后将各节点<code>网络</code>里的第一个网卡的连接方式设置为<code>NAT网络</code>，然后在高级里刷新一下<code>Mac地址</code>，而第二个网卡还是默认设置为<code>仅主机(Host-only)网络</code>，即只有本地主机能访问。（第一个网络是<code>Kubernetes</code>真正要用到的，第二个网络仅仅是为了能够连接上虚拟机）</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.1.3.gif" alt="GIF 2022-9-5 18-20-31" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-5 18-20-31</figcaption></figure><p>可以发现<code>ping</code>相互的虚拟主机和百度都能<code>ping</code>得通</p>`,32),W=n("code",null,"ping",-1),$=t(`<figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.1.4.gif" alt="GIF 2022-9-5 18-27-39" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-5 18-27-39</figcaption></figure><h4 id="_2、添加各节点对应关系" tabindex="-1"><a class="header-anchor" href="#_2、添加各节点对应关系" aria-hidden="true">#</a> 2、添加各节点对应关系</h4><h5 id="下面使用的主要命令" tabindex="-1"><a class="header-anchor" href="#下面使用的主要命令" aria-hidden="true">#</a> 下面使用的主要命令</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#关闭防火墙</span>
<span class="token comment">#开发阶段可以把防火墙全部关掉，这样就不用配防火墙的各种进出规则了</span>
systemctl stop firewalld
systemctl disable firewalld

<span class="token comment">#关闭 selinux</span>
<span class="token comment">#禁用Linux默认的安全策略</span>
<span class="token function">cat</span> /etc/selinux/config
<span class="token function">sed</span> <span class="token parameter variable">-i</span> <span class="token string">&#39;s/enforcing/disabled/&#39;</span> /etc/selinux/config
<span class="token function">cat</span> /etc/selinux/config
<span class="token comment">#也禁用当前会话</span>
setenforce <span class="token number">0</span>

<span class="token comment">#关闭swap</span>
<span class="token comment">#关闭内存交换</span>
swapoff <span class="token parameter variable">-a</span>	<span class="token comment">#临时</span>
<span class="token function">cat</span> /etc/fstab
<span class="token function">sed</span> <span class="token parameter variable">-ri</span> <span class="token string">&#39;s/.*swap.*/#&amp;/&#39;</span> /etc/fstab	<span class="token comment">#永久</span>
<span class="token function">cat</span> /etc/fstab
<span class="token comment">#free -g 验证，swap 必须为 0；</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看主机名和各个节点的<code>ip</code>地址</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">hostname</span>
<span class="token comment">#指定新的hostname</span>
<span class="token comment">#hostnamectl set-hostname &lt;newhostname&gt;</span>
<span class="token function">ip</span> addr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改<code>hosts</code>文件</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>vi /etc/hosts
cat /etc/hosts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>设置为自己<code>hostname</code>对应的<code>eth0</code>的<code>ip</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>10.0.2.5    k8s-node1
10.0.2.4	k8s-node2
10.0.2.15	k8s-node3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#将桥接的IPv4 流量传递到iptables 的链：</span>
<span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/sysctl.d/k8s.conf <span class="token operator">&lt;&lt;</span> <span class="token string">EOF 
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1 
EOF</span>

<span class="token function">sysctl</span> <span class="token parameter variable">--system</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其他问题</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#疑难问题：</span>
<span class="token comment">#遇见提示是只读的文件系统，运行如下命令</span>
<span class="token function">mount</span> <span class="token parameter variable">-o</span> remount rw /

<span class="token function">date</span>	<span class="token comment">#查看时间 （可选） </span>
yum <span class="token function">install</span> <span class="token parameter variable">-y</span> ntpdate
ntpdate time.windows.com	<span class="token comment">#同步最新时间</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1、关闭防火墙" tabindex="-1"><a class="header-anchor" href="#_1、关闭防火墙" aria-hidden="true">#</a> 1、关闭防火墙</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># systemctl stop firewalld</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># systemctl disable firewalld</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.2.1.png" alt="image-20220905203406410" tabindex="0" loading="lazy"><figcaption>image-20220905203406410</figcaption></figure><h5 id="_2、关闭安全策略" tabindex="-1"><a class="header-anchor" href="#_2、关闭安全策略" aria-hidden="true">#</a> 2、关闭安全策略</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/selinux/config</span>

<span class="token comment"># This file controls the state of SELinux on the system.</span>
<span class="token comment"># SELINUX= can take one of these three values:</span>
<span class="token comment">#     enforcing - SELinux security policy is enforced.</span>
<span class="token comment">#     permissive - SELinux prints warnings instead of enforcing.</span>
<span class="token comment">#     disabled - No SELinux policy is loaded.</span>
<span class="token assign-left variable">SELINUX</span><span class="token operator">=</span>enforcing
<span class="token comment"># SELINUXTYPE= can take one of three values:</span>
<span class="token comment">#     targeted - Targeted processes are protected,</span>
<span class="token comment">#     minimum - Modification of targeted policy. Only selected processes are protected. </span>
<span class="token comment">#     mls - Multi Level Security protection.</span>
<span class="token assign-left variable">SELINUXTYPE</span><span class="token operator">=</span>targeted


<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># sed -i &#39;s/enforcing/disabled/&#39; /etc/selinux/config</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/selinux/config</span>

<span class="token comment"># This file controls the state of SELinux on the system.</span>
<span class="token comment"># SELINUX= can take one of these three values:</span>
<span class="token comment">#     disabled - SELinux security policy is enforced.</span>
<span class="token comment">#     permissive - SELinux prints warnings instead of disabled.</span>
<span class="token comment">#     disabled - No SELinux policy is loaded.</span>
<span class="token assign-left variable">SELINUX</span><span class="token operator">=</span>disabled
<span class="token comment"># SELINUXTYPE= can take one of three values:</span>
<span class="token comment">#     targeted - Targeted processes are protected,</span>
<span class="token comment">#     minimum - Modification of targeted policy. Only selected processes are protected. </span>
<span class="token comment">#     mls - Multi Level Security protection.</span>
<span class="token assign-left variable">SELINUXTYPE</span><span class="token operator">=</span>targeted


<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># setenforce 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.2.2.png" alt="image-20220905201935001" tabindex="0" loading="lazy"><figcaption>image-20220905201935001</figcaption></figure><h5 id="_3、关闭swap分区" tabindex="-1"><a class="header-anchor" href="#_3、关闭swap分区" aria-hidden="true">#</a> 3、关闭<code>swap</code>分区</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># swapoff -a</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/fstab</span>

<span class="token comment">#</span>
<span class="token comment"># /etc/fstab</span>
<span class="token comment"># Created by anaconda on Thu Apr 30 22:04:55 2020</span>
<span class="token comment">#</span>
<span class="token comment"># Accessible filesystems, by reference, are maintained under &#39;/dev/disk&#39;</span>
<span class="token comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span>
<span class="token comment">#</span>
<span class="token assign-left variable">UUID</span><span class="token operator">=</span>1c419d6c-5064-4a2b-953c-05b2c67edb15 /                       xfs     defaults        <span class="token number">0</span> <span class="token number">0</span>
/swapfile none swap defaults <span class="token number">0</span> <span class="token number">0</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># sed -ri &#39;s/.*swap.*/#&amp;/&#39; /etc/fstab</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/fstab</span>

<span class="token comment">#</span>
<span class="token comment"># /etc/fstab</span>
<span class="token comment"># Created by anaconda on Thu Apr 30 22:04:55 2020</span>
<span class="token comment">#</span>
<span class="token comment"># Accessible filesystems, by reference, are maintained under &#39;/dev/disk&#39;</span>
<span class="token comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span>
<span class="token comment">#</span>
<span class="token assign-left variable">UUID</span><span class="token operator">=</span>1c419d6c-5064-4a2b-953c-05b2c67edb15 /                       xfs     defaults        <span class="token number">0</span> <span class="token number">0</span>
<span class="token comment">#/swapfile none swap defaults 0 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.2.3.png" alt="image-20220905203045902" tabindex="0" loading="lazy"><figcaption>image-20220905203045902</figcaption></figure><h5 id="_4、添加主机名与ip-对应关系" tabindex="-1"><a class="header-anchor" href="#_4、添加主机名与ip-对应关系" aria-hidden="true">#</a> 4、添加主机名与IP 对应关系</h5><p>如果hostname不对可以使用<code>hostnamectl set-hostname &lt;newhostname&gt;</code>命令指定新的<code>hostname</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># hostname</span>
k8s-node1
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># ip addr</span>
<span class="token number">1</span>: lo: <span class="token operator">&lt;</span>LOOPBACK,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">65536</span> qdisc noqueue state UNKNOWN group default qlen <span class="token number">1000</span>
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet <span class="token number">127.0</span>.0.1/8 scope <span class="token function">host</span> lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope <span class="token function">host</span> 
       valid_lft forever preferred_lft forever
<span class="token number">2</span>: eth0: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">1500</span> qdisc pfifo_fast state UP group default qlen <span class="token number">1000</span>
    link/ether 08:00:27:6f:59:a6 brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">10.0</span>.2.5/24 brd <span class="token number">10.0</span>.2.255 scope global noprefixroute dynamic eth0
       valid_lft 1034sec preferred_lft 1034sec
    inet6 fe80::a00:27ff:fe6f:59a6/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever
<span class="token number">3</span>: eth1: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">1500</span> qdisc pfifo_fast state UP group default qlen <span class="token number">1000</span>
    link/ether 08:00:27:14:84:49 brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">192.168</span>.56.100/24 brd <span class="token number">192.168</span>.56.255 scope global noprefixroute eth1
       valid_lft forever preferred_lft forever
    inet6 fe80::a00:27ff:fe14:8449/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.2.4.1.png" alt="image-20220905203638362" tabindex="0" loading="lazy"><figcaption>image-20220905203638362</figcaption></figure><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node2 ~<span class="token punctuation">]</span><span class="token comment"># hostname</span>
k8s-node2
<span class="token punctuation">[</span>root@k8s-node2 ~<span class="token punctuation">]</span><span class="token comment"># ip addr</span>
<span class="token number">1</span>: lo: <span class="token operator">&lt;</span>LOOPBACK,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">65536</span> qdisc noqueue state UNKNOWN group default qlen <span class="token number">1000</span>
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet <span class="token number">127.0</span>.0.1/8 scope <span class="token function">host</span> lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope <span class="token function">host</span> 
       valid_lft forever preferred_lft forever
<span class="token number">2</span>: eth0: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">1500</span> qdisc pfifo_fast state UP group default qlen <span class="token number">1000</span>
    link/ether 08:00:27:c2:6d:7c brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">10.0</span>.2.4/24 brd <span class="token number">10.0</span>.2.255 scope global noprefixroute dynamic eth0
       valid_lft 840sec preferred_lft 840sec
    inet6 fe80::a00:27ff:fec2:6d7c/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever
<span class="token number">3</span>: eth1: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">1500</span> qdisc pfifo_fast state UP group default qlen <span class="token number">1000</span>
    link/ether 08:00:27:d1:ba:93 brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">192.168</span>.56.101/24 brd <span class="token number">192.168</span>.56.255 scope global noprefixroute eth1
       valid_lft forever preferred_lft forever
    inet6 fe80::a00:27ff:fed1:ba93/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.2.4.2.png" alt="image-20220905203634770" tabindex="0" loading="lazy"><figcaption>image-20220905203634770</figcaption></figure><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># hostname</span>
k8s-node3
<span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># ip addr</span>
<span class="token number">1</span>: lo: <span class="token operator">&lt;</span>LOOPBACK,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">65536</span> qdisc noqueue state UNKNOWN group default qlen <span class="token number">1000</span>
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet <span class="token number">127.0</span>.0.1/8 scope <span class="token function">host</span> lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope <span class="token function">host</span> 
       valid_lft forever preferred_lft forever
<span class="token number">2</span>: eth0: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">1500</span> qdisc pfifo_fast state UP group default qlen <span class="token number">1000</span>
    link/ether 08:00:27:13:ee:da brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">10.0</span>.2.15/24 brd <span class="token number">10.0</span>.2.255 scope global noprefixroute dynamic eth0
       valid_lft 753sec preferred_lft 753sec
    inet6 fe80::a00:27ff:fe13:eeda/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever
<span class="token number">3</span>: eth1: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">1500</span> qdisc pfifo_fast state UP group default qlen <span class="token number">1000</span>
    link/ether 08:00:27:0a:41:b8 brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">192.168</span>.56.102/24 brd <span class="token number">192.168</span>.56.255 scope global noprefixroute eth1
       valid_lft forever preferred_lft forever
    inet6 fe80::a00:27ff:fe0a:41b8/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.2.4.3.png" alt="image-20220905203707891" tabindex="0" loading="lazy"><figcaption>image-20220905203707891</figcaption></figure><h5 id="_5、修改hosts文件" tabindex="-1"><a class="header-anchor" href="#_5、修改hosts文件" aria-hidden="true">#</a> 5、修改<code>hosts</code>文件</h5><p>一定要使用自己<code>hostname</code>对应的<code>ip</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># vi /etc/hosts</span>
<span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># cat /etc/hosts</span>
<span class="token number">127.0</span>.0.1	k8s-node3	k8s-node3
<span class="token number">127.0</span>.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
<span class="token number">10.0</span>.2.5 k8s-node1
<span class="token number">10.0</span>.2.4	k8s-node2
<span class="token number">10.0</span>.2.15	k8s-node3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.2.5.1.png" alt="image-20220905204506638" tabindex="0" loading="lazy"><figcaption>image-20220905204506638</figcaption></figure><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">10.0.2.5</span> <span class="token value attr-value">k8s-node1</span>
10.0.2.4	k8s-node2
10.0.2.15	k8s-node3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.2.5.2.png" alt="image-20220905204456782" tabindex="0" loading="lazy"><figcaption>image-20220905204456782</figcaption></figure><h5 id="_6、防止流量指标统计消失" tabindex="-1"><a class="header-anchor" href="#_6、防止流量指标统计消失" aria-hidden="true">#</a> 6、防止流量指标统计消失</h5><p>如果不设置，可能会有流量指标统计的消失</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF </span>
<span class="token operator">&gt;</span> net.bridge.bridge-nf-call-ip6tables <span class="token operator">=</span> <span class="token number">1</span>
<span class="token operator">&gt;</span> net.bridge.bridge-nf-call-iptables <span class="token operator">=</span> <span class="token number">1</span> 
<span class="token operator">&gt;</span> EOF
<span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># sysctl --system</span>
* Applying /usr/lib/sysctl.d/00-system.conf <span class="token punctuation">..</span>.
* Applying /usr/lib/sysctl.d/10-default-yama-scope.conf <span class="token punctuation">..</span>.
kernel.yama.ptrace_scope <span class="token operator">=</span> <span class="token number">0</span>
* Applying /usr/lib/sysctl.d/50-default.conf <span class="token punctuation">..</span>.
kernel.sysrq <span class="token operator">=</span> <span class="token number">16</span>
kernel.core_uses_pid <span class="token operator">=</span> <span class="token number">1</span>
net.ipv4.conf.default.rp_filter <span class="token operator">=</span> <span class="token number">1</span>
net.ipv4.conf.all.rp_filter <span class="token operator">=</span> <span class="token number">1</span>
net.ipv4.conf.default.accept_source_route <span class="token operator">=</span> <span class="token number">0</span>
net.ipv4.conf.all.accept_source_route <span class="token operator">=</span> <span class="token number">0</span>
net.ipv4.conf.default.promote_secondaries <span class="token operator">=</span> <span class="token number">1</span>
net.ipv4.conf.all.promote_secondaries <span class="token operator">=</span> <span class="token number">1</span>
fs.protected_hardlinks <span class="token operator">=</span> <span class="token number">1</span>
fs.protected_symlinks <span class="token operator">=</span> <span class="token number">1</span>
* Applying /etc/sysctl.d/99-sysctl.conf <span class="token punctuation">..</span>.
* Applying /etc/sysctl.d/k8s.conf <span class="token punctuation">..</span>.
* Applying /etc/sysctl.conf <span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.2.6.png" alt="image-20220905205233002" tabindex="0" loading="lazy"><figcaption>image-20220905205233002</figcaption></figure><h4 id="_3、创建备份" tabindex="-1"><a class="header-anchor" href="#_3、创建备份" aria-hidden="true">#</a> 3、创建备份</h4><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.4.3.gif" alt="GIF 2022-9-5 21-00-48" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-5 21-00-48</figcaption></figure><h3 id="_8-1-5、安装k8s" tabindex="-1"><a class="header-anchor" href="#_8-1-5、安装k8s" aria-hidden="true">#</a> 8.1.5、安装k8s</h3><p>所有节点安装<code>docker</code>、<code>kubeadm</code>、<code>kubelet</code>、<code>kubectl</code></p><h4 id="_1、安装docker" tabindex="-1"><a class="header-anchor" href="#_1、安装docker" aria-hidden="true">#</a> 1、安装docker</h4><p>由于三个虚拟机下载不同步，因此必须确保都下载完成后再输入后面的命令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubeadm 方便创建master节点，方便其他节点加入
kubelet：每一个node的代理创建pod，管理网络
kubectl:命令行操作Kubernetes集群
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_1、卸载系统之前的-docker" tabindex="-1"><a class="header-anchor" href="#_1、卸载系统之前的-docker" aria-hidden="true">#</a> 1、卸载系统之前的 docker</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum remove <span class="token function">docker</span> <span class="token punctuation">\\</span>
    docker-client <span class="token punctuation">\\</span> docker-client-latest <span class="token punctuation">\\</span>
    docker-common <span class="token punctuation">\\</span>
    docker-latest <span class="token punctuation">\\</span>
    docker-latest-logrotate <span class="token punctuation">\\</span>
    docker-logrotate <span class="token punctuation">\\</span>
    docker-engine
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2、安装docker" tabindex="-1"><a class="header-anchor" href="#_2、安装docker" aria-hidden="true">#</a> 2、安装docker</h5><p>安装必须的依赖</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils <span class="token punctuation">\\</span>
    device-mapper-persistent-data <span class="token punctuation">\\</span>
    lvm2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置 docker repo 的 yum 位置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum-config-manager <span class="token punctuation">\\</span>
    --add-repo <span class="token punctuation">\\</span>
    https://download.docker.com/linux/centos/docker-ce.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装 docker，以及 docker-cli</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> docker-ce docker-ce-cli containerd.io
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h5 id="_3、配置-docker-镜像" tabindex="-1"><a class="header-anchor" href="#_3、配置-docker-镜像" aria-hidden="true">#</a> 3、配置 docker 镜像</h5><p>输入阿里云里面自己的镜像地址</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /etc/docker
<span class="token function">sudo</span> <span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;-</span><span class="token string">&#39;EOF&#39;
{
    &quot;registry-mirrors&quot;: [&quot;https://82m9ar63.mirror.aliyuncs.com&quot;]
}
EOF</span>
<span class="token function">sudo</span> systemctl daemon-reload
<span class="token function">sudo</span> systemctl restart <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_4、设置-docker-开机自启" tabindex="-1"><a class="header-anchor" href="#_4、设置-docker-开机自启" aria-hidden="true">#</a> 4、设置 docker 开机自启</h5><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,61),X=t(`<h4 id="_2、添加阿里云-yum-源" tabindex="-1"><a class="header-anchor" href="#_2、添加阿里云-yum-源" aria-hidden="true">#</a> 2、添加阿里云 yum 源</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> <span class="token operator">&gt;</span> /etc/yum.repos.d/kubernetes.repo <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
[kubernetes]
name=Kubernetes
baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=0
repo_gpgcheck=0
gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg
https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
EOF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3、安装kubeadm、kubelet、kubectl" tabindex="-1"><a class="header-anchor" href="#_3、安装kubeadm、kubelet、kubectl" aria-hidden="true">#</a> 3、安装<code>kubeadm</code>、<code>kubelet</code>、<code>kubectl</code></h4><p>使用如下命令检查是否有<code>kube</code>的安装源</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum list<span class="token operator">|</span><span class="token function">grep</span> kube
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>安装<code>kubeadm</code>、<code>kubelet</code>、<code>kubectl</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum install -y kubelet-1.17.3 kubeadm-1.17.3 kubectl-1.17.3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>设置开机自启动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> kubelet 
systemctl start kubelet
<span class="token comment">#这里查看kubelet的状态会启动不起来，这是正常的</span>
systemctl status kubelet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),Q=t(`<figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.3.1.png" alt="image-20220905213944360" tabindex="0" loading="lazy"><figcaption>image-20220905213944360</figcaption></figure><p>然后等待各节点下载完成</p><p>可以看到<code>k8s-node1</code>节点运行失败了，这是正常的。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.3.2.png" alt="image-20220905214101692" tabindex="0" loading="lazy"><figcaption>image-20220905214101692</figcaption></figure><p><code>k8s-node2</code>竟然运行起来了，运行起来了也没关系</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.3.3.png" alt="image-20220905214059076" tabindex="0" loading="lazy"><figcaption>image-20220905214059076</figcaption></figure><p><code>k8s-node3</code>运行失败了，这是正常的</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.3.4.png" alt="image-20220905214104542" tabindex="0" loading="lazy"><figcaption>image-20220905214104542</figcaption></figure><h4 id="_4、设置主节点" tabindex="-1"><a class="header-anchor" href="#_4、设置主节点" aria-hidden="true">#</a> 4、设置主节点</h4><h5 id="_1、方式一-不建议" tabindex="-1"><a class="header-anchor" href="#_1、方式一-不建议" aria-hidden="true">#</a> 1、方式一（不建议）</h5><p>只让<code>k8s-node1</code>执行以下操作（我们将<code>k8s-node1</code>当作主节点）</p><p>主要命令如下，但由于要下载很多东西，失败了都不知道，所以要等很久，因此不建议立即执行</p><p><strong>注意：<code>--apiserver-advertise-address</code>一定要用自己的节点对应的ip</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubeadm init <span class="token punctuation">\\</span>
--apiserver-advertise-address<span class="token operator">=</span>自己的master节点的ip <span class="token punctuation">\\</span>
--image-repository registry.cn-hangzhou.aliyuncs.com/google_containers <span class="token punctuation">\\</span>
--kubernetes-version v1.17.3 <span class="token punctuation">\\</span>
<span class="token comment">#service由多个pod组成，对外提供服务，对应用具有负载均衡能力</span>
--service-cidr<span class="token operator">=</span><span class="token number">10.96</span>.0.0/16 <span class="token punctuation">\\</span>
<span class="token comment">#pod之间通讯</span>
--pod-network-cidr<span class="token operator">=</span><span class="token number">10.244</span>.0.0/16
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="_2、方式二-建议" tabindex="-1"><a class="header-anchor" href="#_2、方式二-建议" aria-hidden="true">#</a> 2、方式二（建议）</h5><h6 id="_1、执行如下命令" tabindex="-1"><a class="header-anchor" href="#_1、执行如下命令" aria-hidden="true">#</a> 1、执行如下命令</h6><p>建议先执行如下语句</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># ls</span>
anaconda-ks.cfg  k8s  original-ks.cfg
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># cd k8s/</span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># ll</span>
total <span class="token number">64</span>
-rw-r--r--. <span class="token number">1</span> root root  <span class="token number">7149</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 get_helm.sh
-rw-r--r--. <span class="token number">1</span> root root  <span class="token number">6310</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 ingress-controller.yaml
-rw-r--r--. <span class="token number">1</span> root root   <span class="token number">209</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 ingress-demo.yml
-rw-r--r--. <span class="token number">1</span> root root <span class="token number">15016</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 kube-flannel.yml
-rw-r--r--. <span class="token number">1</span> root root  <span class="token number">4737</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 kubernetes-dashboard.yaml
-rw-r--r--. <span class="token number">1</span> root root  <span class="token number">3841</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 kubesphere-complete-setup.yaml
-rw-r--r--. <span class="token number">1</span> root root   <span class="token number">392</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 master_images.sh
-rw-r--r--. <span class="token number">1</span> root root   <span class="token number">283</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 node_images.sh
-rw-r--r--. <span class="token number">1</span> root root  <span class="token number">1053</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 product.yaml
-rw-r--r--. <span class="token number">1</span> root root   <span class="token number">931</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 Vagrantfile
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># chmod master_images.sh </span>
chmod: missing operand after ‘master_images.sh’
Try <span class="token string">&#39;chmod --help&#39;</span> <span class="token keyword">for</span> <span class="token function">more</span> information.
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># chmod 700 master_images.sh </span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># ./master_images.sh </span>
v1.17.3: Pulling from google_containers/kube-apiserver
597de8ba0c30: Pull complete 
694976bfeffd: Pull complete 
Digest: sha256:33400ea29255bd20714b6b8092b22ebb045ae134030d6bf476bddfed9d33e900
<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
67ddbfb20a22: Pull complete 
Digest: sha256:f78411e19d84a252e53bff71a4407a5686c46983a2c2eeed83929b888179acea
Status: Downloaded newer image <span class="token keyword">for</span> registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.1
registry.cn-hangzhou.aliyuncs.com/google_containers/pause:3.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.4.2.1.1.png" alt="image-20220905220146386" tabindex="0" loading="lazy"><figcaption>image-20220905220146386</figcaption></figure><p>完整过程：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.4.2.1.2.gif" alt="GIF 2022-9-5 21-54-36" tabindex="0" loading="lazy"><figcaption>GIF 2022-9-5 21-54-36</figcaption></figure><p>附件：<code>master_images.sh</code>文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>

<span class="token assign-left variable">images</span><span class="token operator">=</span><span class="token punctuation">(</span>
	kube-apiserver:v1.17.3
    kube-proxy:v1.17.3
	kube-controller-manager:v1.17.3
	kube-scheduler:v1.17.3
	coredns:1.6.5
	etcd:3.4.3-0
    pause:3.1
<span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token for-or-select variable">imageName</span> <span class="token keyword">in</span> <span class="token variable">\${images<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span> <span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token function">docker</span> pull registry.cn-hangzhou.aliyuncs.com/google_containers/<span class="token variable">$imageName</span>
<span class="token comment">#   docker tag registry.cn-hangzhou.aliyuncs.com/google_containers/$imageName  k8s.gcr.io/$imageName</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h6 id="_2、安装" tabindex="-1"><a class="header-anchor" href="#_2、安装" aria-hidden="true">#</a> 2、安装</h6><p>先查看主节点（<code>k8s-node1</code>节点）的<code>ip</code></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ip addr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后再执行如下命令：注意修改<code>--apiserver-advertise-address</code>为自己<code>mater</code>节点的ip</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubeadm init <span class="token punctuation">\\</span>
--apiserver-advertise-address<span class="token operator">=</span><span class="token number">10.0</span>.2.5 <span class="token punctuation">\\</span>
--image-repository registry.cn-hangzhou.aliyuncs.com/google_containers <span class="token punctuation">\\</span>
--kubernetes-version v1.17.3 <span class="token punctuation">\\</span>
--service-cidr<span class="token operator">=</span><span class="token number">10.96</span>.0.0/16 <span class="token punctuation">\\</span>
--pod-network-cidr<span class="token operator">=</span><span class="token number">10.244</span>.0.0/16
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于默认拉取镜像地址 k8s.gcr.io 国内无法访问，这里指定阿里云镜像仓库地址。可以手动按照我们的 images.sh 先拉取镜像，</p><p>地址变为<code>registry.aliyuncs.com/google_containers</code>也可以。</p><p>科普：无类别域间路由（Classless Inter-Domain Routing、CIDR）是一个用于给用户分配 IP 地址以及在互联网上有效地路由 IP 数据包的对 IP 地址进行归类的方法。</p><p>拉取可能失败，需要下载镜像。</p><p>运行完成提前复制：加入集群的令牌</p>`,33),J=t(`<figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.4.2.2.png" alt="8.1.5.4.2.2.1" tabindex="0" loading="lazy"><figcaption>8.1.5.4.2.2.1</figcaption></figure><p>根据执行安装<code>kubeadm</code>的提示，执行如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> <span class="token parameter variable">-p</span> <span class="token environment constant">$HOME</span>/.kube
<span class="token function">sudo</span> <span class="token function">cp</span> <span class="token parameter variable">-i</span> /etc/kubernetes/admin.conf <span class="token environment constant">$HOME</span>/.kube/config
<span class="token function">sudo</span> <span class="token function">chown</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">id</span> <span class="token parameter variable">-u</span><span class="token variable">)</span></span><span class="token builtin class-name">:</span><span class="token variable"><span class="token variable">$(</span><span class="token function">id</span> <span class="token parameter variable">-g</span><span class="token variable">)</span></span> <span class="token environment constant">$HOME</span>/.kube/config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个文档写了如何搭建网络： https://kubernetes.io/docs/concepts/cluster-administration/addons/</p><h6 id="_3、安装pod-网络插件-cni" tabindex="-1"><a class="header-anchor" href="#_3、安装pod-网络插件-cni" aria-hidden="true">#</a> 3、安装Pod 网络插件（CNI）</h6><p>本次使用的<code>联网和网络策略</code>是<code>Flannel</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.4.2.3.1.png" alt="image-20220906161136485" tabindex="0" loading="lazy"><figcaption>image-20220906161136485</figcaption></figure><p><strong>主要命令：</strong></p><p>这条命令为其他节点加入到该master节点的命令，在<code>k8s-node2</code>和<code>k8s-node3</code>会执行该命令，该命令2小时有效</p><p>注意：使用的是安装<code>kubeadm</code>时提示的命令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubeadm join 10.0.2.5:6443 --token ltl7rz.akblvi5kpzmeej8i \\
    --discovery-token-ca-cert-hash sha256:d3393d20305a60a6324836be8601a4be2e28c52c90a18aac9110b5504617de48
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>如果过期了可以执行如下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubeadm token create --print-join-command
kubeadm token create <span class="token parameter variable">--ttl</span> <span class="token number">0</span> --print-join-command <span class="token comment">#生成一个永久的tocken</span>

kubeadm	<span class="token function">join</span>	<span class="token parameter variable">--token</span>	y1eyw5.ylg568kvohfdsfco	--discovery-token-ca-cert-hash
sha256: 6c35e4f73f72afd89bf1c8c303ee55677d2cdb1342d67bb23c852aba2efc7c73
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>详细步骤：</strong></p><p>可以执行如下命令，指定创建多少个pod，多少个service，但是国内无法访问</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl apply <span class="token parameter variable">-f</span> <span class="token punctuation">\\</span>
https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>因此可以使用如下方式应用本地的<code>kube-flannel.yml</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># cd k8s</span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># ls</span>
get_helm.sh              ingress-demo.yml  kubernetes-dashboard.yaml       master_images.sh  product.yaml
ingress-controller.yaml  kube-flannel.yml  kubesphere-complete-setup.yaml  node_images.sh    Vagrantfile
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f kube-flannel.yml</span>
podsecuritypolicy.policy/psp.flannel.unprivileged created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
serviceaccount/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds-amd64 created
daemonset.apps/kube-flannel-ds-arm64 created
daemonset.apps/kube-flannel-ds-arm created
daemonset.apps/kube-flannel-ds-ppc64le created
daemonset.apps/kube-flannel-ds-s390x created
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>网络应用完了并不是立马就能用的，可以使用<code>kubectl get pods</code>(相当于docker ps)获取当前所有节点的<code>pod</code>，执行该命令需要指明名称空间，各名称空间是相互隔离的</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>kubectl get pods
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以看到如下信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl get pods</span>
No resources found <span class="token keyword">in</span> default namespace.
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl get ns</span>
NAME              STATUS   AGE
default           Active   27m
kube-node-lease   Active   27m
kube-public       Active   27m
kube-system       Active   27m
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl get pods --all-namespaces</span>
NAMESPACE     NAME                                READY   STATUS    RESTARTS   AGE
kube-system   coredns-7f9c544f75-klr4j            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          28m
kube-system   coredns-7f9c544f75-mckd4            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          28m
kube-system   etcd-k8s-node1                      <span class="token number">1</span>/1     Running   <span class="token number">0</span>          28m
kube-system   kube-apiserver-k8s-node1            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          28m
kube-system   kube-controller-manager-k8s-node1   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          28m
kube-system   kube-flannel-ds-amd64-wc8rd         <span class="token number">1</span>/1     Running   <span class="token number">0</span>          6m17s
kube-system   kube-proxy-p2b9m                    <span class="token number">1</span>/1     Running   <span class="token number">0</span>          28m
kube-system   kube-scheduler-k8s-node1            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          28m
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.4.2.3.2.png" alt="image-20220906162623618" tabindex="0" loading="lazy"><figcaption>image-20220906162623618</figcaption></figure><p>等待<code>kube-flannel-ds</code>是运行状态后，网络才配置好</p><p>配置好后，让其他节点加入到master节点</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes</span>
NAME        STATUS   ROLES    AGE   VERSION
k8s-node1   Ready    master   33m   v1.17.3
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes</span>
NAME        STATUS     ROLES    AGE   VERSION
k8s-node1   Ready      master   36m   v1.17.3
k8s-node2   NotReady   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>   81s   v1.17.3
k8s-node3   NotReady   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>   41s   v1.17.3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>状态为<code>none</code>的原因是都要下载<code>flannel</code>网络插件</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.4.2.3.3.png" alt="image-20220906165744360" tabindex="0" loading="lazy"><figcaption>image-20220906165744360</figcaption></figure><p>让<code>k8s-node2</code>节点加入进来</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node2 ~<span class="token punctuation">]</span><span class="token comment"># kubeadm join 10.0.2.5:6443 --token ltl7rz.akblvi5kpzmeej8i \\</span>
<span class="token operator">&gt;</span>     --discovery-token-ca-cert-hash sha256:d3393d20305a60a6324836be8601a4be2e28c52c90a18aac9110b5504617de48 
W0906 08:31:23.494805    <span class="token number">3457</span> join.go:346<span class="token punctuation">]</span> <span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> WARNING: JoinControlPane.controlPlane settings will be ignored when control-plane flag is not set.
<span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> Running pre-flight checks
	<span class="token punctuation">[</span>WARNING IsDockerSystemdCheck<span class="token punctuation">]</span>: detected <span class="token string">&quot;cgroupfs&quot;</span> as the Docker cgroup driver. The recommended driver is <span class="token string">&quot;systemd&quot;</span><span class="token builtin class-name">.</span> Please follow the guide at https://kubernetes.io/docs/setup/cri/
	<span class="token punctuation">[</span>WARNING SystemVerification<span class="token punctuation">]</span>: this Docker version is not on the list of validated versions: <span class="token number">20.10</span>.17. Latest validated version: <span class="token number">19.03</span>
<span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> Reading configuration from the cluster<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> FYI: You can <span class="token function">look</span> at this config <span class="token function">file</span> with <span class="token string">&#39;kubectl -n kube-system get cm kubeadm-config -oyaml&#39;</span>
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> Downloading configuration <span class="token keyword">for</span> the kubelet from the <span class="token string">&quot;kubelet-config-1.17&quot;</span> ConfigMap <span class="token keyword">in</span> the kube-system namespace
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> Writing kubelet configuration to <span class="token function">file</span> <span class="token string">&quot;/var/lib/kubelet/config.yaml&quot;</span>
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> Writing kubelet environment <span class="token function">file</span> with flags to <span class="token function">file</span> <span class="token string">&quot;/var/lib/kubelet/kubeadm-flags.env&quot;</span>
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> Starting the kubelet
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> Waiting <span class="token keyword">for</span> the kubelet to perform the TLS Bootstrap<span class="token punctuation">..</span>.

This <span class="token function">node</span> has joined the cluster:
* Certificate signing request was sent to apiserver and a response was received.
* The Kubelet was informed of the new secure connection details.

Run <span class="token string">&#39;kubectl get nodes&#39;</span> on the control-plane to see this <span class="token function">node</span> <span class="token function">join</span> the cluster.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.4.2.3.4.png" alt="image-20220906165746644" tabindex="0" loading="lazy"><figcaption>image-20220906165746644</figcaption></figure><p>让<code>k8s-node3</code>节点加入进来</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node3 ~<span class="token punctuation">]</span><span class="token comment"># kubeadm join 10.0.2.5:6443 --token ltl7rz.akblvi5kpzmeej8i \\</span>
<span class="token operator">&gt;</span>     --discovery-token-ca-cert-hash sha256:d3393d20305a60a6324836be8601a4be2e28c52c90a18aac9110b5504617de48 
W0906 08:32:03.994689    <span class="token number">3499</span> join.go:346<span class="token punctuation">]</span> <span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> WARNING: JoinControlPane.controlPlane settings will be ignored when control-plane flag is not set.
<span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> Running pre-flight checks
	<span class="token punctuation">[</span>WARNING IsDockerSystemdCheck<span class="token punctuation">]</span>: detected <span class="token string">&quot;cgroupfs&quot;</span> as the Docker cgroup driver. The recommended driver is <span class="token string">&quot;systemd&quot;</span><span class="token builtin class-name">.</span> Please follow the guide at https://kubernetes.io/docs/setup/cri/
	<span class="token punctuation">[</span>WARNING SystemVerification<span class="token punctuation">]</span>: this Docker version is not on the list of validated versions: <span class="token number">20.10</span>.17. Latest validated version: <span class="token number">19.03</span>
<span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> Reading configuration from the cluster<span class="token punctuation">..</span>.
<span class="token punctuation">[</span>preflight<span class="token punctuation">]</span> FYI: You can <span class="token function">look</span> at this config <span class="token function">file</span> with <span class="token string">&#39;kubectl -n kube-system get cm kubeadm-config -oyaml&#39;</span>
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> Downloading configuration <span class="token keyword">for</span> the kubelet from the <span class="token string">&quot;kubelet-config-1.17&quot;</span> ConfigMap <span class="token keyword">in</span> the kube-system namespace
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> Writing kubelet configuration to <span class="token function">file</span> <span class="token string">&quot;/var/lib/kubelet/config.yaml&quot;</span>
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> Writing kubelet environment <span class="token function">file</span> with flags to <span class="token function">file</span> <span class="token string">&quot;/var/lib/kubelet/kubeadm-flags.env&quot;</span>
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> Starting the kubelet
<span class="token punctuation">[</span>kubelet-start<span class="token punctuation">]</span> Waiting <span class="token keyword">for</span> the kubelet to perform the TLS Bootstrap<span class="token punctuation">..</span>.

This <span class="token function">node</span> has joined the cluster:
* Certificate signing request was sent to apiserver and a response was received.
* The Kubelet was informed of the new secure connection details.

Run <span class="token string">&#39;kubectl get nodes&#39;</span> on the control-plane to see this <span class="token function">node</span> <span class="token function">join</span> the cluster.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.4.2.3.5.png" alt="image-20220906165748695" tabindex="0" loading="lazy"><figcaption>image-20220906165748695</figcaption></figure><p>使用<code>watch</code>命令监控一下状态，<code>-o wide</code>以<code>更多信息</code>的方式输出详细信息，可以看到现在都运行好了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">watch</span> kubectl get pod <span class="token parameter variable">-n</span> kube-system <span class="token parameter variable">-o</span> wide
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.4.2.3.6.png" alt="image-20220906204106910" tabindex="0" loading="lazy"><figcaption>image-20220906204106910</figcaption></figure><p>使用<code>kubectl get nodes</code>命令查看节点状态</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># watch kubectl get pod -n kube-system -o wide</span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl get nodes</span>
NAME        STATUS   ROLES    AGE     VERSION
k8s-node1   Ready    master   4h45m   v1.17.3
k8s-node2   Ready    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>   4h9m    v1.17.3
k8s-node3   Ready    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>   4h8m    v1.17.3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.4.2.3.7.png" alt="image-20220906204303032" tabindex="0" loading="lazy"><figcaption>image-20220906204303032</figcaption></figure><h6 id="完整命令" tabindex="-1"><a class="header-anchor" href="#完整命令" aria-hidden="true">#</a> 完整命令</h6>`,41),Z=n("h5",{id:"下载失败问题",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#下载失败问题","aria-hidden":"true"},"#"),s(" 下载失败问题")],-1),nn=n("p",null,[s("如果执行"),n("code",null,"kubectl apply -f kube-flannel.yml"),s("失败，是因为"),n("code",null,"kube-flannel.yml"),s("文件里指定的"),n("code",null,"quay.io/coreos/flannel:v0.11.0-amd64"),s("镜像不能访问")],-1),sn=n("figure",null,[n("img",{src:"https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.4.3.1.png",alt:"image-20220906205155430",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20220906205155430")],-1),en={href:"https://hub.docker.com/",target:"_blank",rel:"noopener noreferrer"},an=n("code",null,"flannel",-1),tn=n("code",null,"from quay.io/coreos/flannel",-1),on=t(`<figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.4.3.2.png" alt="image-20220906205857894" tabindex="0" loading="lazy"><figcaption>image-20220906205857894</figcaption></figure><p>然后找到<code>v0.11.0-amd64</code>这个版本的，复制<code>jmgao1983/flannel:v0.11.0-amd64</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.5.4.3.3.png" alt="image-20220906210007187" tabindex="0" loading="lazy"><figcaption>image-20220906210007187</figcaption></figure><p>使用如下命令可以对指定文件的资源全部删除</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl delete <span class="token parameter variable">-f</span> kube-flannel.yml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>然后将<code>kube-flannel.yml</code>文件里的<code>quay.io/coreos/flannel:v0.11.0-amd64</code>镜像替换为刚刚复制的<code>jmgao1983/flannel:v0.11.0-amd64</code>即可，然后再次执行<code>kubectl apply -f kube-flannel.yml</code></p><h3 id="_8-1-6、部署tomcat" tabindex="-1"><a class="header-anchor" href="#_8-1-6、部署tomcat" aria-hidden="true">#</a> 8.1.6、部署<code>tomcat</code></h3><h4 id="_1、部署一个tomcat" tabindex="-1"><a class="header-anchor" href="#_1、部署一个tomcat" aria-hidden="true">#</a> 1、部署一个<code>tomcat</code></h4><p>使用如下命令即可创建一个部署</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl create deployment tomcat6 <span class="token parameter variable">--image</span><span class="token operator">=</span>tomcat:6.0.53-jre8
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>pod</code>是<code>tomcat6+唯一标识</code>，容器还没准备好</p><p><code>service</code>就是一个服务</p><p><code>deployment.apps/tomcat6</code>：做了一次部署，但还没成功</p><p><code>replicaset.apps</code>:要复制<code>1</code>份，但还没准备好</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl create deployment tomcat6 --image=tomcat:6.0.53-jre8</span>
deployment.apps/tomcat6 created
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl get all</span>
NAME                           READY   STATUS              RESTARTS   AGE
pod/tomcat6-5f7ccf4cb9-rr4ns   <span class="token number">0</span>/1     ContainerCreating   <span class="token number">0</span>          20s

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>   AGE
service/kubernetes   ClusterIP   <span class="token number">10.96</span>.0.1    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP   5h12m

NAME                      READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/tomcat6   <span class="token number">0</span>/1     <span class="token number">1</span>            <span class="token number">0</span>           20s

NAME                                 DESIRED   CURRENT   READY   AGE
replicaset.apps/tomcat6-5f7ccf4cb9   <span class="token number">1</span>         <span class="token number">1</span>         <span class="token number">0</span>       20s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.1.1.png" alt="image-20220906211138571" tabindex="0" loading="lazy"><figcaption>image-20220906211138571</figcaption></figure><p>如何知道部署到哪个节点呢？使用<code>kubectl get all -o wide</code>打印更宽泛的内容</p><p>可以看到在<code>node3</code>节点运行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl get all -o wide</span>
NAME                           READY   STATUS    RESTARTS   AGE     IP           NODE        NOMINATED NODE   READINESS GATES
pod/tomcat6-5f7ccf4cb9-rr4ns   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          3m36s   <span class="token number">10.244</span>.2.2   k8s-node3   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>   AGE     SELECTOR
service/kubernetes   ClusterIP   <span class="token number">10.96</span>.0.1    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP   5h15m   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>

NAME                      READY   UP-TO-DATE   AVAILABLE   AGE     CONTAINERS   IMAGES               SELECTOR
deployment.apps/tomcat6   <span class="token number">1</span>/1     <span class="token number">1</span>            <span class="token number">1</span>           3m36s   tomcat       tomcat:6.0.53-jre8   <span class="token assign-left variable">app</span><span class="token operator">=</span>tomcat6

NAME                                 DESIRED   CURRENT   READY   AGE     CONTAINERS   IMAGES               SELECTOR
replicaset.apps/tomcat6-5f7ccf4cb9   <span class="token number">1</span>         <span class="token number">1</span>         <span class="token number">1</span>       3m36s   tomcat       tomcat:6.0.53-jre8   <span class="token assign-left variable">app</span><span class="token operator">=</span>tomcat6,pod-template-hash<span class="token operator">=</span>5f7ccf4cb9
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.1.2.png" alt="image-20220906211441091" tabindex="0" loading="lazy"><figcaption>image-20220906211441091</figcaption></figure><p>在<code>node3</code>节点查看<code>docker</code>镜像和运行的容器，可以看到已经成功运行了</p>`,21),ln=t(`<figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.1.3.png" alt="image-20220906211604278" tabindex="0" loading="lazy"><figcaption>image-20220906211604278</figcaption></figure><p>我们部署的应用默认都在<code>default</code>名称空间里，而其他系统的<code>pod</code>服务都在<code>kube-system</code>名称空间里</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl get pods</span>
NAME                       READY   STATUS    RESTARTS   AGE
tomcat6-5f7ccf4cb9-rr4ns   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          8m22s
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl get pods --all-namespaces</span>
NAMESPACE     NAME                                READY   STATUS    RESTARTS   AGE
default       tomcat6-5f7ccf4cb9-rr4ns            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          8m47s
kube-system   coredns-7f9c544f75-klr4j            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          5h20m
kube-system   coredns-7f9c544f75-mckd4            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          5h20m
kube-system   etcd-k8s-node1                      <span class="token number">1</span>/1     Running   <span class="token number">0</span>          5h20m
kube-system   kube-apiserver-k8s-node1            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          5h20m
kube-system   kube-controller-manager-k8s-node1   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          5h20m
kube-system   kube-flannel-ds-amd64-mb9dw         <span class="token number">1</span>/1     Running   <span class="token number">0</span>          4h45m
kube-system   kube-flannel-ds-amd64-wc8rd         <span class="token number">1</span>/1     Running   <span class="token number">0</span>          4h58m
kube-system   kube-flannel-ds-amd64-xccgq         <span class="token number">1</span>/1     Running   <span class="token number">0</span>          4h44m
kube-system   kube-proxy-52tnk                    <span class="token number">1</span>/1     Running   <span class="token number">0</span>          4h45m
kube-system   kube-proxy-7nwdt                    <span class="token number">1</span>/1     Running   <span class="token number">0</span>          4h44m
kube-system   kube-proxy-p2b9m                    <span class="token number">1</span>/1     Running   <span class="token number">0</span>          5h20m
kube-system   kube-scheduler-k8s-node1            <span class="token number">1</span>/1     Running   <span class="token number">0</span>          5h20m
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.1.4.png" alt="image-20220906211822557" tabindex="0" loading="lazy"><figcaption>image-20220906211822557</figcaption></figure><p>可以使用<code>kubectl get pods -o wide</code>命令查看更为详细的<code>pod</code>信息，使用<code>kubectl get all</code>命令可以查看<code>pod</code>、<code>service</code>、<code>deployment</code>等信息。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -o wide</span>
NAME                       READY   STATUS    RESTARTS   AGE   IP           NODE        NOMINATED NODE   READINESS GATES
tomcat6-5f7ccf4cb9-rr4ns   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          12m   <span class="token number">10.244</span>.2.2   k8s-node3   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl get all</span>
NAME                           READY   STATUS    RESTARTS   AGE
pod/tomcat6-5f7ccf4cb9-rr4ns   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          12m

NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>   AGE
service/kubernetes   ClusterIP   <span class="token number">10.96</span>.0.1    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP   5h24m

NAME                      READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/tomcat6   <span class="token number">1</span>/1     <span class="token number">1</span>            <span class="token number">1</span>           12m

NAME                                 DESIRED   CURRENT   READY   AGE
replicaset.apps/tomcat6-5f7ccf4cb9   <span class="token number">1</span>         <span class="token number">1</span>         <span class="token number">1</span>       12m
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.1.5.png" alt="image-20220906212627477" tabindex="0" loading="lazy"><figcaption>image-20220906212627477</figcaption></figure><p>如果我们将<code>node3</code>的<code>tomcat</code>停掉，就会自动删除不能运行的再重新拉取一个并运行</p>`,8),cn=n("figure",null,[n("img",{src:"https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.1.6.png",alt:"image-20220906213103763",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20220906213103763")],-1),pn=n("p",null,[s("将"),n("code",null,"node3"),s("虚拟机关机，模拟"),n("code",null,"node3"),s("节点宕机，此时可以看到重新在"),n("code",null,"node2"),s("又拉起了一个来启动"),n("code",null,"tomcat")],-1),dn=n("figure",null,[n("img",{src:"https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.1.7.png",alt:"image-20220906215631690",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20220906215631690")],-1),rn=n("p",null,[s("在在"),n("code",null,"node2"),s("节点使用"),n("code",null,"docker ps"),s("命令即可看到此时已经在运行了")],-1),un=t(`<figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.1.8.png" alt="image-20220906215635942" tabindex="0" loading="lazy"><figcaption>image-20220906215635942</figcaption></figure><h4 id="_2、暴露-tomcat-访问" tabindex="-1"><a class="header-anchor" href="#_2、暴露-tomcat-访问" aria-hidden="true">#</a> 2、暴露 tomcat 访问</h4><p>可以使用如下命令暴露<code>tomcat6</code>的端口</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl expose deployment tomcat6 <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">80</span> --target-port<span class="token operator">=</span><span class="token number">8080</span> <span class="token parameter variable">--type</span><span class="token operator">=</span>NodePort
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>tomcat</code>的默认端口是<code>8080</code>，如果以前我们使用<code>docker</code>容器时，会把<code>8080</code>映射为一个端口</p><p>现在<code>docker</code>用<code>Pod</code>封装，<code>--target-port=8080</code>指的是<code>Pod</code>里面的这个容器暴露的端口是<code>8080</code>，但是访问<code>Pod</code>使用<code>80</code>端口（<code>--port=80</code>），然后把整个<code>Pod</code>作为一个<code>Service</code>暴露出去，使用<code>--type=NodePort</code>（节点端口模式）随机生成一个端口暴露<code>Service</code>。</p><p>Pod 的<code>80</code>端口映射容器的<code>8080</code>端口；<code>service</code>会代理<code>Pod</code>的<code>80</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.2.1.png" alt="image-20221114095015908" tabindex="0" loading="lazy"><figcaption>image-20221114095015908</figcaption></figure><p>使用<code>kubectl get svc -o wide</code>命令可以查看暴露在哪个端口，可以看到这次暴露在<code>31224</code>端口</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl get svc <span class="token parameter variable">-o</span> wide
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.2.2.png" alt="image-20221114095215628" tabindex="0" loading="lazy"><figcaption>image-20221114095215628</figcaption></figure><p>也可以使用<code>kubectl get all</code>命令查看详细信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get all</span>
NAME                           READY   STATUS    RESTARTS   AGE
pod/tomcat6-5f7ccf4cb9-gjmkw   <span class="token number">1</span>/1     Running   <span class="token number">2</span>          68d

NAME                 TYPE        CLUSTER-IP    EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>        AGE
service/kubernetes   ClusterIP   <span class="token number">10.96</span>.0.1     <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP        68d
<span class="token comment">#封装为service，对外暴露31244</span>
service/tomcat6      NodePort    <span class="token number">10.96</span>.9.217   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">80</span>:31224/TCP   7m20s 

NAME                      READY   UP-TO-DATE   AVAILABLE   AGE
<span class="token comment">#这个pod的产生是由于这次部署</span>
deployment.apps/tomcat6   <span class="token number">1</span>/1     <span class="token number">1</span>            <span class="token number">1</span>           68d

NAME                                 DESIRED   CURRENT   READY   AGE
<span class="token comment">#副本信息</span>
replicaset.apps/tomcat6-5f7ccf4cb9   <span class="token number">1</span>         <span class="token number">1</span>         <span class="token number">1</span>       68d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.2.3.png" alt="image-20221114095640094" tabindex="0" loading="lazy"><figcaption>image-20221114095640094</figcaption></figure><p>访问 http://192.168.56.101:31224/ 可以看到toncat已经访问成功了</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.2.4.png" alt="image-20221114095459654" tabindex="0" loading="lazy"><figcaption>image-20221114095459654</figcaption></figure><h4 id="_3、扩容-缩容-删除" tabindex="-1"><a class="header-anchor" href="#_3、扩容-缩容-删除" aria-hidden="true">#</a> 3、扩容&amp;缩容&amp;删除</h4><p>使用<code>kubectl scale --replicas=3 deployment tomcat6</code>命令可以进行扩容（<code>--replicas=3</code>指部署<code>3</code>台，<code>kubectl get svc -o wide</code>里的<code>svc</code>是<code>service</code>的缩写）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl scale --replicas=3 deployment tomcat6</span>
deployment.apps/tomcat6 scaled
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -o wide</span>
NAME                       READY   STATUS    RESTARTS   AGE   IP           NODE        NOMINATED NODE   READINESS GATES
tomcat6-5f7ccf4cb9-fvtp7   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          62s   <span class="token number">10.244</span>.2.3   k8s-node3   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
tomcat6-5f7ccf4cb9-gjmkw   <span class="token number">1</span>/1     Running   <span class="token number">2</span>          68d   <span class="token number">10.244</span>.1.4   k8s-node2   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
tomcat6-5f7ccf4cb9-hj6cz   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          62s   <span class="token number">10.244</span>.2.4   k8s-node3   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get svc -o wide</span>
NAME         TYPE        CLUSTER-IP    EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>        AGE   SELECTOR
kubernetes   ClusterIP   <span class="token number">10.96</span>.0.1     <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP        68d   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
tomcat6      NodePort    <span class="token number">10.96</span>.9.217   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">80</span>:31224/TCP   14m   <span class="token assign-left variable">app</span><span class="token operator">=</span>tomcat6
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.3.1.png" alt="image-20221114100426024" tabindex="0" loading="lazy"><figcaption>image-20221114100426024</figcaption></figure><p>同理，使用<code>kubectl scale --replicas=1 deployment tomcat6</code>命令只部署一台，即可达到缩容的目的</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl scale --replicas=1 deployment tomcat6</span>
deployment.apps/tomcat6 scaled
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods -o wide</span>
NAME                       READY   STATUS    RESTARTS   AGE   IP           NODE        NOMINATED NODE   READINESS GATES
tomcat6-5f7ccf4cb9-gjmkw   <span class="token number">1</span>/1     Running   <span class="token number">2</span>          68d   <span class="token number">10.244</span>.1.4   k8s-node2   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>           <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.3.2.png" alt="image-20221114100923800" tabindex="0" loading="lazy"><figcaption>image-20221114100923800</figcaption></figure><p>使用<code>kubectl delete xxx</code>可以删除<code>service</code>、<code>deployment</code></p><p>使用<code>kubectl delete deployment.apps/tomcat6</code>命令把这次部署删掉</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get all</span>
NAME                           READY   STATUS    RESTARTS   AGE
pod/tomcat6-5f7ccf4cb9-gjmkw   <span class="token number">1</span>/1     Running   <span class="token number">2</span>          68d

NAME                 TYPE        CLUSTER-IP    EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>        AGE
service/kubernetes   ClusterIP   <span class="token number">10.96</span>.0.1     <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP        68d
service/tomcat6      NodePort    <span class="token number">10.96</span>.9.217   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">80</span>:31224/TCP   23m

NAME                      READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/tomcat6   <span class="token number">1</span>/1     <span class="token number">1</span>            <span class="token number">1</span>           68d

NAME                                 DESIRED   CURRENT   READY   AGE
replicaset.apps/tomcat6-5f7ccf4cb9   <span class="token number">1</span>         <span class="token number">1</span>         <span class="token number">1</span>       68d
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl delete deployment.apps/tomcat6</span>
deployment.apps <span class="token string">&quot;tomcat6&quot;</span> deleted
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get all</span>
NAME                 TYPE        CLUSTER-IP    EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>        AGE
service/kubernetes   ClusterIP   <span class="token number">10.96</span>.0.1     <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP        68d
service/tomcat6      NodePort    <span class="token number">10.96</span>.9.217   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">80</span>:31224/TCP   24m
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods</span>
No resources found <span class="token keyword">in</span> default namespace.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.3.3.png" alt="image-20221114101439209" tabindex="0" loading="lazy"><figcaption>image-20221114101439209</figcaption></figure><p>如果你有强迫症，可以使用<code>kubectl delete service/tomcat6</code>把这个<code>service/tomcat6</code>记录也删掉</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get all</span>
NAME                 TYPE        CLUSTER-IP    EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>        AGE
service/kubernetes   ClusterIP   <span class="token number">10.96</span>.0.1     <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP        68d
service/tomcat6      NodePort    <span class="token number">10.96</span>.9.217   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">80</span>:31224/TCP   24m
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods</span>
No resources found <span class="token keyword">in</span> default namespace.
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl delete service/tomcat6</span>
<span class="token function">service</span> <span class="token string">&quot;tomcat6&quot;</span> deleted
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get all</span>
NAME                 TYPE        CLUSTER-IP   EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>   AGE
service/kubernetes   ClusterIP   <span class="token number">10.96</span>.0.1    <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP   68d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.3.4.png" alt="image-20221114102718643" tabindex="0" loading="lazy"><figcaption>image-20221114102718643</figcaption></figure><h4 id="_4、文档" tabindex="-1"><a class="header-anchor" href="#_4、文档" aria-hidden="true">#</a> 4、文档</h4>`,31),mn={href:"https://kubernetes.io/zh/docs/reference/kubectl/overview/",target:"_blank",rel:"noopener noreferrer"},bn={href:"https://kubernetes.io/zh/docs/reference/kubectl/overview/#%E8%B5%84%E6%BA%90%E7%B1%BB%E5%9E%8B",target:"_blank",rel:"noopener noreferrer"},gn={href:"https://kubernetes.io/zh/docs/reference/kubectl/overview/#%E6%A0%BC%E5%BC%8F%E5%8C%96%E8%BE%93%E5%87%BA",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://kubernetes.io/zh/docs/reference/kubectl/overview/#%E7%A4%BA%E4%BE%8B-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C",target:"_blank",rel:"noopener noreferrer"},vn={href:"https://kubernetes.io/docs/reference/generated/kubectl/kubectl-commands",target:"_blank",rel:"noopener noreferrer"},hn=t(`<h4 id="_5、查看对应的yaml文件" tabindex="-1"><a class="header-anchor" href="#_5、查看对应的yaml文件" aria-hidden="true">#</a> 5、查看对应的<code>yaml</code>文件</h4><h5 id="_1、创建部署" tabindex="-1"><a class="header-anchor" href="#_1、创建部署" aria-hidden="true">#</a> 1、创建部署</h5><p>在输入的命令后面添加<code> --help</code>可以看到帮助信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl create deployment tomcat6 <span class="token parameter variable">--image</span><span class="token operator">=</span>tomcat:6.0.53-jre8 <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.5.1.1.png" alt="image-20221114104747761" tabindex="0" loading="lazy"><figcaption>image-20221114104747761</figcaption></figure><p>在帮助信息中可以看到可以添加<code>--dry-run</code>测试这个命令（不真正执行）</p><p>我们使用<code>kubectl create deployment tomcat6 --image=tomcat:6.0.53-jre8 --dry-run -o yaml</code>命令让创建<code>tomcat:6.0.53-jre8</code>的命令输出为<code>yaml</code>格式</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl create deployment tomcat6 --image=tomcat:6.0.53-jre8 --dry-run -o yaml</span>
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: tomcat6
  name: tomcat6
spec:
  replicas: <span class="token number">1</span>
  selector:
    matchLabels:
      app: tomcat6
  strategy: <span class="token punctuation">{</span><span class="token punctuation">}</span>
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: tomcat6
    spec:
      containers:
      - image: tomcat:6.0.53-jre8
        name: tomcat
        resources: <span class="token punctuation">{</span><span class="token punctuation">}</span>
status: <span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.5.1.2.png" alt="image-20221114105345073" tabindex="0" loading="lazy"><figcaption>image-20221114105345073</figcaption></figure><p>可以使用<code>&gt;</code>符号，把输出重定向到<code>tomcat6.yaml</code>文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl create deployment tomcat6 --image=tomcat:6.0.53-jre8 --dry-run -o yaml &gt; tomcat6.yaml</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># ls</span>
anaconda-ks.cfg  k8s  original-ks.cfg  tomcat6.yaml
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># vi tomcat6.yaml </span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f tomcat6.yaml </span>
deployment.apps/tomcat6 created
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods</span>
NAME                       READY   STATUS    RESTARTS   AGE
tomcat6-5f7ccf4cb9-7md7d   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          18s
tomcat6-5f7ccf4cb9-m7zxs   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          18s
tomcat6-5f7ccf4cb9-wbtpl   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          18s
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.5.1.3.png" alt="image-20221114110249902" tabindex="0" loading="lazy"><figcaption>image-20221114110249902</figcaption></figure><p>修改<code>tomcat6.yaml</code>文件，把空的信息删掉，然后<code>spec:replicas</code>的值修改为<code>3</code>，表示部署<code>3</code>个节点</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> tomcat6
  <span class="token key atrule">name</span><span class="token punctuation">:</span> tomcat6
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> tomcat6
  <span class="token key atrule">name</span><span class="token punctuation">:</span> tomcat6
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">3</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
      <span class="token key atrule">app</span><span class="token punctuation">:</span> tomcat6
  <span class="token key atrule">template</span><span class="token punctuation">:</span>
    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">labels</span><span class="token punctuation">:</span>
        <span class="token key atrule">app</span><span class="token punctuation">:</span> tomcat6
    <span class="token key atrule">spec</span><span class="token punctuation">:</span>
      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> tomcat<span class="token punctuation">:</span>6.0.53<span class="token punctuation">-</span>jre8
        <span class="token key atrule">name</span><span class="token punctuation">:</span> tomcat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.5.1.4.png" alt="image-20221114110014198" loading="lazy">、</p><h5 id="_2、暴露端口" tabindex="-1"><a class="header-anchor" href="#_2、暴露端口" aria-hidden="true">#</a> 2、暴露端口</h5><p>如果查看暴露端口的<code>yaml</code>可以看到<code>kind</code>为<code>Service</code>，而部署一个<code>tomcat</code>的<code>kind</code>为<code>Deployment</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl expose deployment tomcat6 <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">80</span> --target-port<span class="token operator">=</span><span class="token number">8080</span> <span class="token parameter variable">--type</span><span class="token operator">=</span>NodePort --dry-run <span class="token parameter variable">-o</span> yaml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.5.2.png" alt="image-20221114110716611" tabindex="0" loading="lazy"><figcaption>image-20221114110716611</figcaption></figure><h5 id="_3、创建pod" tabindex="-1"><a class="header-anchor" href="#_3、创建pod" aria-hidden="true">#</a> 3、创建<code>pod</code></h5><p>也可以复制一个<code>pod</code>，可以看到此时的<code>kind:</code>为<code>Pod</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods</span>
NAME                       READY   STATUS    RESTARTS   AGE
tomcat6-5f7ccf4cb9-7md7d   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          9m46s
tomcat6-5f7ccf4cb9-m7zxs   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          9m46s
tomcat6-5f7ccf4cb9-wbtpl   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          9m46s
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pod tomcat6-5f7ccf4cb9-7md7d</span>
NAME                       READY   STATUS    RESTARTS   AGE
tomcat6-5f7ccf4cb9-7md7d   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          10m
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pod tomcat6-5f7ccf4cb9-7md7d -o yaml</span>
apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: <span class="token string">&quot;2022-11-14T03:01:24Z&quot;</span>
  generateName: tomcat6-5f7ccf4cb9-
  labels:
    app: tomcat6
    pod-template-hash: 5f7ccf4cb9
    <span class="token punctuation">..</span>.
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pod tomcat6-5f7ccf4cb9-7md7d -o yaml &gt; mypod.yaml</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># ls</span>
anaconda-ks.cfg  k8s  mypod.yaml  original-ks.cfg  tomcat6.yaml
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># vi mypod.yaml </span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f mypod.yaml </span>
pod/tomcat6-new created
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods</span>
NAME                       READY   STATUS              RESTARTS   AGE
tomcat6-5f7ccf4cb9-7md7d   <span class="token number">1</span>/1     Running             <span class="token number">0</span>          22m
tomcat6-5f7ccf4cb9-m7zxs   <span class="token number">1</span>/1     Running             <span class="token number">0</span>          22m
tomcat6-5f7ccf4cb9-wbtpl   <span class="token number">1</span>/1     Running             <span class="token number">0</span>          22m
tomcat6-new                <span class="token number">0</span>/2     ContainerCreating   <span class="token number">0</span>          7s

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.5.3.1.png" alt="image-20221114112638897" tabindex="0" loading="lazy"><figcaption>image-20221114112638897</figcaption></figure><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.5.3.2.png" alt="image-20221114112514891" tabindex="0" loading="lazy"><figcaption>image-20221114112514891</figcaption></figure><p>将<code>mypod.yaml</code>修改为如下内容，部署<code>tomcat:6.0.53-jre8</code>的同时再部署一个<code>nginx</code></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Pod
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> tomcat6<span class="token punctuation">-</span>new
  <span class="token key atrule">name</span><span class="token punctuation">:</span> tomcat6<span class="token punctuation">-</span>new
  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> default
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">containers</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> tomcat<span class="token punctuation">:</span>6.0.53<span class="token punctuation">-</span>jre8
    <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent
    <span class="token key atrule">name</span><span class="token punctuation">:</span> tomcat6<span class="token punctuation">-</span>new
  <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> nginx
    <span class="token key atrule">imagePullPolicy</span><span class="token punctuation">:</span> IfNotPresent
    <span class="token key atrule">name</span><span class="token punctuation">:</span> nginx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.5.3.3.png" alt="image-20221114112256881" tabindex="0" loading="lazy"><figcaption>image-20221114112256881</figcaption></figure><h5 id="完整命令-1" tabindex="-1"><a class="header-anchor" href="#完整命令-1" aria-hidden="true">#</a> <strong>完整命令</strong></h5>`,28),fn={id:"_6、相关术语",tabindex:"-1"},yn=n("a",{class:"header-anchor",href:"#_6、相关术语","aria-hidden":"true"},"#",-1),_n={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/",target:"_blank",rel:"noopener noreferrer"},xn={id:"pod",tabindex:"-1"},wn=n("a",{class:"header-anchor",href:"#pod","aria-hidden":"true"},"#",-1),zn={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/",target:"_blank",rel:"noopener noreferrer"},Sn=n("p",null,[n("strong",null,"Pod"),s(" 是可以在 Kubernetes 中创建和管理的、最小的可部署的计算单元。")],-1),En=n("strong",null,"Pod",-1),An={href:"https://kubernetes.io/zh-cn/docs/concepts/overview/what-is-kubernetes/#why-containers",target:"_blank",rel:"noopener noreferrer"},Rn={id:"replicaset",tabindex:"-1"},Pn=n("a",{class:"header-anchor",href:"#replicaset","aria-hidden":"true"},"#",-1),Tn={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/replicaset/",target:"_blank",rel:"noopener noreferrer"},In=n("p",null,"ReplicaSet 的目的是维护一组在任何时候都处于运行状态的 Pod 副本的稳定集合。 因此，它通常用来保证给定数量的、完全相同的 Pod 的可用性。",-1),Nn=n("h5",{id:"何时使用-replicaset",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#何时使用-replicaset","aria-hidden":"true"},"#"),s(" 何时使用 ReplicaSet")],-1),Cn=n("p",null,"ReplicaSet 确保任何时间都有指定数量的 Pod 副本在运行。 然而，Deployment 是一个更高级的概念，它管理 ReplicaSet，并向 Pod 提供声明式的更新以及许多其他有用的功能。 因此，我们建议使用 Deployment 而不是直接使用 ReplicaSet， 除非你需要自定义更新业务流程或根本不需要更新。",-1),qn={id:"deployments",tabindex:"-1"},Dn=n("a",{class:"header-anchor",href:"#deployments","aria-hidden":"true"},"#",-1),Gn={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/deployment/",target:"_blank",rel:"noopener noreferrer"},Ln={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/replicaset/",target:"_blank",rel:"noopener noreferrer"},On=n("strong",null,"目标状态",-1),Un={href:"https://kubernetes.io/zh-cn/docs/concepts/architecture/controller/",target:"_blank",rel:"noopener noreferrer"},Kn=n("p",null,"以下是 Deployments 的典型用例：",-1),Fn={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/deployment/#creating-a-deployment",target:"_blank",rel:"noopener noreferrer"},jn={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/deployment/#updating-a-deployment",target:"_blank",rel:"noopener noreferrer"},Vn={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/deployment/#rolling-back-a-deployment",target:"_blank",rel:"noopener noreferrer"},Bn={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/deployment/#scaling-a-deployment",target:"_blank",rel:"noopener noreferrer"},Yn={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/deployment/#pausing-and-resuming-a-deployment",target:"_blank",rel:"noopener noreferrer"},Hn={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/deployment/#deployment-status",target:"_blank",rel:"noopener noreferrer"},Wn={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/deployment/#clean-up-policy",target:"_blank",rel:"noopener noreferrer"},$n={id:"statefulset",tabindex:"-1"},Xn=n("a",{class:"header-anchor",href:"#statefulset","aria-hidden":"true"},"#",-1),Qn={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/statefulset/",target:"_blank",rel:"noopener noreferrer"},Jn=n("p",null,[s("StatefulSet 是用来管理有状态应用的工作负载 API 对象。(比如"),n("code",null,"mysql"),s("，如果一个节点宕机的话，再拉起一个节点，如果数据没有同步过来，在新的节点上就查不到老节点的数据了)")],-1),Zn={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/pods/",target:"_blank",rel:"noopener noreferrer"},ns={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/deployment/",target:"_blank",rel:"noopener noreferrer"},ss=n("p",null,"如果希望使用存储卷为工作负载提供持久存储，可以使用 StatefulSet 作为解决方案的一部分。 尽管 StatefulSet 中的单个 Pod 仍可能出现故障， 但持久的 Pod 标识符使得将现有卷与替换已失败 Pod 的新 Pod 相匹配变得更加容易。",-1),es=n("p",null,"StatefulSet 对于需要满足以下一个或多个需求的应用程序很有价值：",-1),as=n("ul",null,[n("li",null,"稳定的、唯一的网络标识符。"),n("li",null,"稳定的、持久的存储。"),n("li",null,"有序的、优雅的部署和扩缩。"),n("li",null,"有序的、自动的滚动更新。")],-1),ts={id:"daemonset",tabindex:"-1"},is=n("a",{class:"header-anchor",href:"#daemonset","aria-hidden":"true"},"#",-1),os={href:"https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/daemonset/",target:"_blank",rel:"noopener noreferrer"},ls=n("p",null,"确保全部（或者某些）节点上运行一个 Pod 的副本。 当有节点加入集群时， 也会为他们新增一个 Pod 。 当有节点从集群移除时，这些 Pod 也会被回收。删除 DaemonSet 将会删除它创建的所有 Pod。",-1),cs=n("p",null,"DaemonSet 的一些典型用法：",-1),ps=n("ul",null,[n("li",null,"在每个节点上运行集群守护进程"),n("li",null,"在每个节点上运行日志收集守护进程"),n("li",null,"在每个节点上运行监控守护进程")],-1),ds=n("p",null,"一种简单的用法是为每种类型的守护进程在所有的节点上都启动一个 DaemonSet。 一个稍微复杂的用法是为同一种守护进程部署多个 DaemonSet；每个具有不同的标志， 并且对不同硬件类型具有不同的内存、CPU 要求。",-1),rs=t(`<h5 id="_1、pod-是什么-controller-是什么" tabindex="-1"><a class="header-anchor" href="#_1、pod-是什么-controller-是什么" aria-hidden="true">#</a> 1、Pod 是什么，Controller 是什么</h5><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.6.1.png" alt="image-20221114140535845" tabindex="0" loading="lazy"><figcaption>image-20221114140535845</figcaption></figure><p><code>pod</code>是<code>kubernetes</code>的最小单元，一个<code>pod</code>里面可以有多个容器，在同一个<code>Node</code>的<code>pod</code>网络是互通的，彼此之间可以互相访问</p><p>控制器（<code>controller</code>）可以创建和管理多个 Pod，管理副本和上线，并在集群范围内提供自修复能力。 例如，如果一个节点失败，控制器可以在不同的节点上调度一样的替身来自动替换 Pod</p><h5 id="_2、deployment-service-是什么" tabindex="-1"><a class="header-anchor" href="#_2、deployment-service-是什么" aria-hidden="true">#</a> 2、Deployment&amp;Service 是什么</h5><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.6.2.png" alt="image-20221114140557160" tabindex="0" loading="lazy"><figcaption>image-20221114140557160</figcaption></figure><p><code>Deployment</code>是<code>master</code>节点保存的部署状态信息，<code>Service</code>用于组合多个<code>Pod</code>，节点内的<code>Pod</code>是可以<code>ping</code>通的，但是节点之间是<code>ping</code>不同的，想让<code>Pod</code>整体可以访问，可以把他们暴露成一个<code>Service</code>，这样只要访问<code>Service</code>的端口，会自动转到相应的<code>Pod</code>，<code>Service</code>相当于是对<code>Pod</code>的负载均衡</p><h5 id="_3、service-的意义" tabindex="-1"><a class="header-anchor" href="#_3、service-的意义" aria-hidden="true">#</a> 3、Service 的意义</h5><p>1、部署一个 nginx</p><p>kubectl create deployment nginx --image=nginx</p><p>2、暴露 nginx 访问</p><p>kubectl expose deployment nginx --port=80 --type=NodePort</p><p>统一应用访问入口； Service 管理一组 Pod。</p><p>防止 Pod 失联（服务发现）、定义一组 Pod 的访问策略</p><p>现在 Service 我们使用 NodePort 的方式暴露，这样访问每个节点的端口，都可以访问到这个 Pod，如果节点宕机，就会出现问题。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.6.3.png" alt="image-20221114142032540" tabindex="0" loading="lazy"><figcaption>image-20221114142032540</figcaption></figure><h5 id="_4、labels-and-selectors" tabindex="-1"><a class="header-anchor" href="#_4、labels-and-selectors" aria-hidden="true">#</a> 4、labels and selectors</h5><p>可以给相同的<code>Pod</code>打上不同的标签，然后可以通过<code>Label Selector</code>来选择不同的标签（类似于<code>css</code>选择器）</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.6.4.png" alt="image-20221114142447034" tabindex="0" loading="lazy"><figcaption>image-20221114142447034</figcaption></figure><h4 id="_7、再次部署" tabindex="-1"><a class="header-anchor" href="#_7、再次部署" aria-hidden="true">#</a> 7、再次部署</h4><h5 id="_1、通过ip访问" tabindex="-1"><a class="header-anchor" href="#_1、通过ip访问" aria-hidden="true">#</a> 1、通过<code>ip</code>访问</h5><p>先把这些都删了，然后再进行测试</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>kubectl get all
kubectl delete deployment.apps/tomcat6
kubectl get all
kubectl delete pod/tomcat6-new
kubectl get all
<span class="token function">ls</span>
<span class="token function">rm</span> <span class="token parameter variable">-f</span> tomcat6.yaml
<span class="token function">ls</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.7.1.1.png" alt="image-20221114155610020" tabindex="0" loading="lazy"><figcaption>image-20221114155610020</figcaption></figure><p>使用如下命令部署<code>tomcat6</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl create deployment tomcat6 --image=tomcat:6.0.53-jre8 --dry-run -o yaml &gt; tomcat6-deployment.yaml</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># vi tomcat6-deployment.yaml </span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f tomcat6-deployment.yaml </span>
deployment.apps/tomcat6 created
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.7.1.2.png" alt="image-20221114160842164" tabindex="0" loading="lazy"><figcaption>image-20221114160842164</figcaption></figure><p><code>tomcat6-deployment.yaml</code>文件：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> tomcat6
  <span class="token key atrule">name</span><span class="token punctuation">:</span> tomcat6
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">3</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
      <span class="token key atrule">app</span><span class="token punctuation">:</span> tomcat6
  <span class="token key atrule">template</span><span class="token punctuation">:</span>
    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">labels</span><span class="token punctuation">:</span>
        <span class="token key atrule">app</span><span class="token punctuation">:</span> tomcat6
    <span class="token key atrule">spec</span><span class="token punctuation">:</span>
      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> tomcat<span class="token punctuation">:</span>6.0.53<span class="token punctuation">-</span>jre8
        <span class="token key atrule">name</span><span class="token punctuation">:</span> tomcat
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.7.1.3.png" alt="image-20221114152917146" tabindex="0" loading="lazy"><figcaption>image-20221114152917146</figcaption></figure><p>也可以同时部署和暴露，只需要都写进<code>yaml</code>文件里，使用<code>---</code>分割即可</p>`,31),us=t(`<figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.7.1.4.png" alt="image-20221114163249935" tabindex="0" loading="lazy"><figcaption>image-20221114163249935</figcaption></figure><p>yml允许多个文档片段，中间使用三个短横杠(<code>---</code>)分割</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> apps/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Deployment
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> tomcat6
  <span class="token key atrule">name</span><span class="token punctuation">:</span> tomcat6
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">replicas</span><span class="token punctuation">:</span> <span class="token number">3</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">matchLabels</span><span class="token punctuation">:</span>
      <span class="token key atrule">app</span><span class="token punctuation">:</span> tomcat6
  <span class="token key atrule">template</span><span class="token punctuation">:</span>
    <span class="token key atrule">metadata</span><span class="token punctuation">:</span>
      <span class="token key atrule">labels</span><span class="token punctuation">:</span>
        <span class="token key atrule">app</span><span class="token punctuation">:</span> tomcat6
    <span class="token key atrule">spec</span><span class="token punctuation">:</span>
      <span class="token key atrule">containers</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">image</span><span class="token punctuation">:</span> tomcat<span class="token punctuation">:</span>6.0.53<span class="token punctuation">-</span>jre8
        <span class="token key atrule">name</span><span class="token punctuation">:</span> tomcat
<span class="token punctuation">---</span>
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Service
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">labels</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> tomcat6
  <span class="token key atrule">name</span><span class="token punctuation">:</span> tomcat6
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">ports</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">80</span>
    <span class="token key atrule">protocol</span><span class="token punctuation">:</span> TCP
    <span class="token key atrule">targetPort</span><span class="token punctuation">:</span> <span class="token number">8080</span>
  <span class="token key atrule">selector</span><span class="token punctuation">:</span>
    <span class="token key atrule">app</span><span class="token punctuation">:</span> tomcat6
  <span class="token key atrule">type</span><span class="token punctuation">:</span> NodePort
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.7.1.5.png" alt="image-20221114161419652" tabindex="0" loading="lazy"><figcaption>image-20221114161419652</figcaption></figure><p>访问该暴露的端口即可访问到<code>tomcat</code>： http://192.168.56.101:31992/</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.7.1.6.png" alt="image-20221114163418797" tabindex="0" loading="lazy"><figcaption>image-20221114163418797</figcaption></figure><h5 id="_2、通过域名访问" tabindex="-1"><a class="header-anchor" href="#_2、通过域名访问" aria-hidden="true">#</a> 2、通过域名访问</h5><p>这种用ip访问的方式有很大的缺陷，因此可以使用<code>Ingress</code>（底层使用的是<code>nginx</code>）来通过域名访问</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ls</span>
<span class="token builtin class-name">cd</span> k8s/
<span class="token function">ls</span>
<span class="token function">vi</span> ingress-controller.yaml       
kubectl apply <span class="token parameter variable">-f</span> ingress-controller.yaml 
kubectl get pods
kubectl get pods --all-namespaces
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.7.2.1.png" alt="image-20221114195534833" tabindex="0" loading="lazy"><figcaption>image-20221114195534833</figcaption></figure><p>应用<code>ingress-tomcat6.yaml</code>配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># ls</span>
get_helm.sh              ingress-demo.yml  kubernetes-dashboard.yaml       master_images.sh  product.yaml
ingress-controller.yaml  kube-flannel.yml  kubesphere-complete-setup.yaml  node_images.sh    Vagrantfile
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># rm -rf ingress-demo.yml</span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># vi ingress-tomcat6.yaml</span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f ingress-tomcat6.yaml</span>
ingress.extensions/web created
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl get all</span>
NAME                           READY   STATUS    RESTARTS   AGE
pod/tomcat6-5f7ccf4cb9-4hfzv   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          3h52m
pod/tomcat6-5f7ccf4cb9-8nthk   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          3h52m
pod/tomcat6-5f7ccf4cb9-tzwml   <span class="token number">1</span>/1     Running   <span class="token number">0</span>          3h52m

NAME                 TYPE        CLUSTER-IP    EXTERNAL-IP   PORT<span class="token punctuation">(</span>S<span class="token punctuation">)</span>        AGE
service/kubernetes   ClusterIP   <span class="token number">10.96</span>.0.1     <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">443</span>/TCP        69d
service/tomcat6      NodePort    <span class="token number">10.96</span>.1.153   <span class="token operator">&lt;</span>none<span class="token operator">&gt;</span>        <span class="token number">80</span>:31992/TCP   3h52m

NAME                      READY   UP-TO-DATE   AVAILABLE   AGE
deployment.apps/tomcat6   <span class="token number">3</span>/3     <span class="token number">3</span>            <span class="token number">3</span>           3h52m

NAME                                 DESIRED   CURRENT   READY   AGE
replicaset.apps/tomcat6-5f7ccf4cb9   <span class="token number">3</span>         <span class="token number">3</span>         <span class="token number">3</span>       3h52m
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.7.2.2.png" alt="image-20221114201122015" tabindex="0" loading="lazy"><figcaption>image-20221114201122015</figcaption></figure><p>我们前面把<code>tomcat</code>的<code>8080</code>暴露到<code>pod</code>的<code>80</code>端口，所以我们<code>servicePort</code>这里只用写<code>80</code>端口</p><p>注意：<code>backend</code>和<code>serviceName</code>、<code>servicePort</code>不是对齐的</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> extensions/v1beta1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> Ingress
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> web
<span class="token key atrule">spec</span><span class="token punctuation">:</span>
  <span class="token key atrule">rules</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">host</span><span class="token punctuation">:</span> tomcat6.atguigu.com
    <span class="token key atrule">http</span><span class="token punctuation">:</span>
      <span class="token key atrule">paths</span><span class="token punctuation">:</span>
        <span class="token punctuation">-</span> <span class="token key atrule">backend</span><span class="token punctuation">:</span>
           <span class="token key atrule">serviceName</span><span class="token punctuation">:</span> tomcat6
           <span class="token key atrule">servicePort</span><span class="token punctuation">:</span> <span class="token number">80</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.7.2.3.png" alt="image-20221114201516887" tabindex="0" loading="lazy"><figcaption>image-20221114201516887</figcaption></figure><p>使用<code>SwitchHosts</code>软件，在<code>hosts</code>文件里将<code>tomcat6.atguigu.com</code>域名映射到<code>192.168.56.101</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">192.168</span>.56.101 tomcat6.atguigu.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.7.2.4.png" alt="image-20221114201832095" tabindex="0" loading="lazy"><figcaption>image-20221114201832095</figcaption></figure><p>此时，通过 http://tomcat6.atguigu.com/ 也可以访问成功了</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.6.7.2.5.png" alt="image-20221114202011960" tabindex="0" loading="lazy"><figcaption>image-20221114202011960</figcaption></figure><h5 id="完整命令-2" tabindex="-1"><a class="header-anchor" href="#完整命令-2" aria-hidden="true">#</a> 完整命令</h5>`,23),ms={id:"_8-1-7、安装helm",tabindex:"-1"},bs=n("a",{class:"header-anchor",href:"#_8-1-7、安装helm","aria-hidden":"true"},"#",-1),gs={href:"https://helm.sh/zh/docs/intro/install/",target:"_blank",rel:"noopener noreferrer"},ks=n("p",null,"Helm 是 Kubernetes 的包管理器。包管理器类似于我们在 Ubuntu 中使用的 apt、Centos 中使用的 yum 或者 Python 中的 pip 一样，能快速查找、下载和安装软件包。Helm 由客 户端组件 helm 和服务端组件 Tiller 组成, 能够将一组 K8S 资源打包统一管理, 是查找、共 享和使用为 Kubernetes 构建的软件的最佳方式。",-1),vs=t('<h1 id="安装helm" tabindex="-1"><a class="header-anchor" href="#安装helm" aria-hidden="true">#</a> 安装Helm</h1><p>该指南展示了如何安装Helm CLI。Helm可以用源码或构建的二进制版本安装。</p><h2 id="用helm项目安装" tabindex="-1"><a class="header-anchor" href="#用helm项目安装" aria-hidden="true">#</a> 用Helm项目安装</h2><p>Helm项目提供了两种获取和安装Helm的方式。这是官方提供的获取Helm发布版本的方法。另外， Helm社区提供了通过不同包管理器安装Helm的方法。这些方法可以在下面的官方方法之后看到。</p><h3 id="用二进制版本安装" tabindex="-1"><a class="header-anchor" href="#用二进制版本安装" aria-hidden="true">#</a> 用二进制版本安装</h3>',5),hs={href:"https://github.com/helm/helm/releases",target:"_blank",rel:"noopener noreferrer"},fs={href:"https://github.com/helm/helm/releases",target:"_blank",rel:"noopener noreferrer"},ys=n("li",null,[s("解压("),n("code",null,"tar -zxvf helm-v3.0.0-linux-amd64.tar.gz"),s(")")],-1),_s=n("li",null,[s("在解压目中找到"),n("code",null,"helm"),s("程序，移动到需要的目录中("),n("code",null,"mv linux-amd64/helm /usr/local/bin/helm"),s(")")],-1),xs={href:"https://helm.sh/zh/docs/intro/quickstart/#%E5%88%9D%E5%A7%8B%E5%8C%96",target:"_blank",rel:"noopener noreferrer"},ws=n("code",null,"helm help",-1),zs=n("p",null,[n("strong",null,"注意"),s(" 针对Linux AMD64，Helm的自动测试只有在CircleCi构建和发布时才会执行。测试其他操作系统是社区针对系统问题请求Helm的责任。")],-1),Ss=n("h3",{id:"使用脚本安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用脚本安装","aria-hidden":"true"},"#"),s(" 使用脚本安装")],-1),Es={href:"https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3",target:"_blank",rel:"noopener noreferrer"},As=t(`<p>您可以获取这个脚本并在本地执行。它良好的文档会让您在执行之前知道脚本都做了什么。</p><div class="language-console line-numbers-mode" data-ext="console"><pre class="language-console"><code>$ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
$ chmod 700 get_helm.sh
$ ./get_helm.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果想直接执行安装，运行<code>curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash</code>。</p>`,3),Rs=t(`<p>Helm 是 Kubernetes 的包管理器。包管理器类似于我们在 Ubuntu 中使用的 apt、Centos 中使用的 yum 或者 Python 中的 pip 一样，能快速查找、下载和安装软件包。Helm 由客 户端组件 helm 和服务端组件 Tiller 组成, 能够将一组 K8S 资源打包统一管理, 是查找、共 享和使用为 Kubernetes 构建的软件的最佳方式。</p><p>完整命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 在mster节点随便找一个文件加解压这个文件</span>
<span class="token function">tar</span> <span class="token parameter variable">-zxvf</span> helm-v2.16.3-linux-amd64.tar.gz
<span class="token comment">## 把helm 文件移动到/usr/local/bin/helm 目录下</span>
<span class="token function">mv</span> linux-amd64/helm /usr/local/bin/helm
<span class="token comment">## 把tiller 文件移动到/usr/local/bin/tiller 目录下</span>
<span class="token function">mv</span> linux-amd64/tiller /usr/local/bin/tiller
kubectl get pods --all-namespaces
<span class="token comment">## 创建权限（master 执行）新建一个文件，helm-rbac.yaml 文件的内容在下方</span>
<span class="token function">vi</span> helm-rbac.yaml
<span class="token comment">## 执行这个文件 新建tiller</span>
kubectl apply <span class="token parameter variable">-f</span> helm-rbac.yaml
<span class="token comment">## 初始化装好 –tiller-image 指定镜像，否则会被墙，等待节点上部署的tiller完成即可。这个过程可能需要4-5分钟，请耐心等待</span>
helm init --service-account<span class="token operator">=</span>tiller --tiller-image<span class="token operator">=</span>sapcc/tiller:v2.17.0 --history-max <span class="token number">300</span> 
<span class="token comment">## 查看版本，会发现有两个版本，一个服务端的，一个客户端的。</span>
helm version
<span class="token comment">## 查看安装情况(等待STATUS都变为Runing)</span>
kubectl get pods --all-namespaces
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>helm-rbac.yaml 文件内容如下</strong></p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> tiller
  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system
<span class="token punctuation">---</span>
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> tiller
<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>
  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io
  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole
  <span class="token key atrule">name</span><span class="token punctuation">:</span> cluster<span class="token punctuation">-</span>admin
<span class="token key atrule">subjects</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount
    <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard
    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),Ps={href:"https://blog.csdn.net/qq_38826019/article/details/115455878",target:"_blank",rel:"noopener noreferrer"},Ts={href:"https://blog.csdn.net/fen_dou_shao_nian/article/details/119314716",target:"_blank",rel:"noopener noreferrer"},Is=n("code",null,"helm",-1),Ns={href:"https://github.com/helm/helm/releases/tag/v2.16.3",target:"_blank",rel:"noopener noreferrer"},Cs={href:"https://get.helm.sh/helm-v2.16.3-linux-amd64.tar.gz",target:"_blank",rel:"noopener noreferrer"},qs=t(`<p>（使用浏览器下载超级慢，可以使用<code>IDM</code>下载，或者使用迅雷。一般下载国外网站里的文件使用迅雷下载都很快）</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.7.1.png" alt="image-20221114224705701" tabindex="0" loading="lazy"><figcaption>image-20221114224705701</figcaption></figure><p>将下载的<code>helm-v2.16.3-linux-amd64.tar.gz</code>移动到<code>/root/k8s</code>里</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.7.2.png" alt="image-20221114230007262" tabindex="0" loading="lazy"><figcaption>image-20221114230007262</figcaption></figure><p>然后执行如下命令安装<code>helm</code>，可以看到<code>Client</code>安装成功了，但是<code>Server</code>安装失败了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># ll</span>
total <span class="token number">24736</span>
-rwx------  <span class="token number">1</span> root root     <span class="token number">7153</span> Nov <span class="token number">14</span> <span class="token number">14</span>:19 get_helm.sh
-rw-r--r--  <span class="token number">1</span> root root <span class="token number">25263741</span> Nov <span class="token number">14</span> <span class="token number">14</span>:59 helm-v2.16.3-linux-amd64.tar.gz
-rw-r--r--. <span class="token number">1</span> root root     <span class="token number">6310</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 ingress-controller.yaml
-rw-r--r--  <span class="token number">1</span> root root      <span class="token number">215</span> Nov <span class="token number">14</span> <span class="token number">12</span>:10 ingress-tomcat6.yaml
-rw-r--r--. <span class="token number">1</span> root root    <span class="token number">15016</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 kube-flannel.yml
-rw-r--r--. <span class="token number">1</span> root root     <span class="token number">4737</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 kubernetes-dashboard.yaml
-rw-r--r--. <span class="token number">1</span> root root     <span class="token number">3841</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 kubesphere-complete-setup.yaml
-rwx------. <span class="token number">1</span> root root      <span class="token number">392</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 master_images.sh
-rw-r--r--. <span class="token number">1</span> root root      <span class="token number">283</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 node_images.sh
-rw-r--r--. <span class="token number">1</span> root root     <span class="token number">1053</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 product.yaml
-rw-r--r--. <span class="token number">1</span> root root      <span class="token number">931</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 Vagrantfile
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># tar -zxvf helm-v2.16.3-linux-amd64.tar.gz </span>
linux-amd64/
linux-amd64/helm
linux-amd64/tiller
linux-amd64/LICENSE
linux-amd64/README.md
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># mv linux-amd64/helm /usr/local/bin/helm</span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># helm version</span>
Client: <span class="token operator">&amp;</span>version.Version<span class="token punctuation">{</span>SemVer:<span class="token string">&quot;v2.16.3&quot;</span>, GitCommit:<span class="token string">&quot;1ee0254c86d4ed6887327dabed7aa7da29d7eb0d&quot;</span>, GitTreeState:<span class="token string">&quot;clean&quot;</span><span class="token punctuation">}</span>
Error: could not <span class="token function">find</span> tiller
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.7.3.png" alt="image-20221114230634640" tabindex="0" loading="lazy"><figcaption>image-20221114230634640</figcaption></figure><p>可以使用如下命令安装<code>helm</code>，可以看到这次<code>Client</code>和<code>Server</code>都成功了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># helm version</span>
Client: <span class="token operator">&amp;</span>version.Version<span class="token punctuation">{</span>SemVer:<span class="token string">&quot;v2.16.3&quot;</span>, GitCommit:<span class="token string">&quot;1ee0254c86d4ed6887327dabed7aa7da29d7eb0d&quot;</span>, GitTreeState:<span class="token string">&quot;clean&quot;</span><span class="token punctuation">}</span>
Error: could not <span class="token function">find</span> tiller
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># ls</span>
anaconda-ks.cfg  k8s  mypod.yaml  original-ks.cfg  tomcat6-deployment.yaml
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># cd k8s</span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># ls</span>
get_helm.sh                      ingress-controller.yaml  kube-flannel.yml           kubesphere-complete-setup.yaml  master_images.sh  product.yaml
helm-v2.16.3-linux-amd64.tar.gz  ingress-tomcat6.yaml     kubernetes-dashboard.yaml  linux-amd64                     node_images.sh    Vagrantfile
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># mv linux-amd64/tiller /usr/local/bin/tiller</span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># vi helm_rbac.yaml</span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># ls</span>
get_helm.sh     helm-v2.16.3-linux-amd64.tar.gz  ingress-tomcat6.yaml  kubernetes-dashboard.yaml       linux-amd64       node_images.sh  Vagrantfile
helm_rbac.yaml  ingress-controller.yaml          kube-flannel.yml      kubesphere-complete-setup.yaml  master_images.sh  product.yaml
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f helm_rbac.yaml</span>
serviceaccount/tiller created
clusterrolebinding.rbac.authorization.k8s.io/tiller created
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># helm init --service-account=tiller --tiller-image=jessestuart/tiller:v2.16.3 --history-max 300</span>
<span class="token variable">$HELM_HOME</span> has been configured at /root/.helm.

Tiller <span class="token punctuation">(</span>the Helm server-side component<span class="token punctuation">)</span> has been installed into your Kubernetes Cluster.

Please note: by default, Tiller is deployed with an insecure <span class="token string">&#39;allow unauthenticated users&#39;</span> policy.
To prevent this, run <span class="token variable"><span class="token variable">\`</span>helm init<span class="token variable">\`</span></span> with the --tiller-tls-verify flag.
For <span class="token function">more</span> information on securing your installation see: https://docs.helm.sh/using_helm/<span class="token comment">#securing-your-helm-installation</span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># helm version</span>
Client: <span class="token operator">&amp;</span>version.Version<span class="token punctuation">{</span>SemVer:<span class="token string">&quot;v2.16.3&quot;</span>, GitCommit:<span class="token string">&quot;1ee0254c86d4ed6887327dabed7aa7da29d7eb0d&quot;</span>, GitTreeState:<span class="token string">&quot;clean&quot;</span><span class="token punctuation">}</span>
Server: <span class="token operator">&amp;</span>version.Version<span class="token punctuation">{</span>SemVer:<span class="token string">&quot;v2.16.3&quot;</span>, GitCommit:<span class="token string">&quot;1ee0254c86d4ed6887327dabed7aa7da29d7eb0d&quot;</span>, GitTreeState:<span class="token string">&quot;dirty&quot;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.7.4.png" alt="image-20221115103013633" tabindex="0" loading="lazy"><figcaption>image-20221115103013633</figcaption></figure><p><code>helm_rbac.yaml</code>文件内容</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> tiller
  <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system
<span class="token punctuation">---</span>
<span class="token key atrule">apiVersion</span><span class="token punctuation">:</span> rbac.authorization.k8s.io/v1
<span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRoleBinding
<span class="token key atrule">metadata</span><span class="token punctuation">:</span>
  <span class="token key atrule">name</span><span class="token punctuation">:</span> tiller
<span class="token key atrule">roleRef</span><span class="token punctuation">:</span>
  <span class="token key atrule">apiGroup</span><span class="token punctuation">:</span> rbac.authorization.k8s.io
  <span class="token key atrule">kind</span><span class="token punctuation">:</span> ClusterRole
  <span class="token key atrule">name</span><span class="token punctuation">:</span> cluster<span class="token punctuation">-</span>admin
<span class="token key atrule">subjects</span><span class="token punctuation">:</span>
  <span class="token punctuation">-</span> <span class="token key atrule">kind</span><span class="token punctuation">:</span> ServiceAccount
    <span class="token key atrule">name</span><span class="token punctuation">:</span> kubernetes<span class="token punctuation">-</span>dashboard
    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> kube<span class="token punctuation">-</span>system
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.7.5.png" alt="image-20221115093516679" tabindex="0" loading="lazy"><figcaption>image-20221115093516679</figcaption></figure><p>ps:</p><blockquote><p>使用老师的命令：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl -L https://git.io/get_helm.sh | bash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>墙原因，上传我们给定的 get_helm.sh，chmod 700 然后./get_helm.sh 可能有文件格式兼容性问题，用 vi 打开该 sh 文件，输入： <code>:set ff</code>回车，显示 fileformat=dos，重新设置下文件格式<code>:set ff=unix</code> 保存退出 <code>:wq</code></p></blockquote><p>按照老师的步骤会出错：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># helm version</span>
-bash: helm: <span class="token builtin class-name">command</span> not found
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># curl -L https://git.io/get_helm.sh | bash</span>
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  <span class="token number">0</span>     <span class="token number">0</span>    <span class="token number">0</span>     <span class="token number">0</span>    <span class="token number">0</span>     <span class="token number">0</span>      <span class="token number">0</span>      <span class="token number">0</span> --:--:--  <span class="token number">0</span>:02:06 --:--:--     0curl: <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> Failed to connect to <span class="token number">2001</span>::6ca0:adcf: Network is unreachable
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># ls</span>
get_helm.sh              ingress-tomcat6.yaml  kubernetes-dashboard.yaml       master_images.sh  product.yaml
ingress-controller.yaml  kube-flannel.yml      kubesphere-complete-setup.yaml  node_images.sh    Vagrantfile
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># chmod 700 get_helm.sh </span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># ll</span>
total <span class="token number">64</span>
-rwx------. <span class="token number">1</span> root root  <span class="token number">7149</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 get_helm.sh
-rw-r--r--. <span class="token number">1</span> root root  <span class="token number">6310</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 ingress-controller.yaml
-rw-r--r--  <span class="token number">1</span> root root   <span class="token number">215</span> Nov <span class="token number">14</span> <span class="token number">12</span>:10 ingress-tomcat6.yaml
-rw-r--r--. <span class="token number">1</span> root root <span class="token number">15016</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 kube-flannel.yml
-rw-r--r--. <span class="token number">1</span> root root  <span class="token number">4737</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 kubernetes-dashboard.yaml
-rw-r--r--. <span class="token number">1</span> root root  <span class="token number">3841</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 kubesphere-complete-setup.yaml
-rwx------. <span class="token number">1</span> root root   <span class="token number">392</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 master_images.sh
-rw-r--r--. <span class="token number">1</span> root root   <span class="token number">283</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 node_images.sh
-rw-r--r--. <span class="token number">1</span> root root  <span class="token number">1053</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 product.yaml
-rw-r--r--. <span class="token number">1</span> root root   <span class="token number">931</span> Sep  <span class="token number">5</span> <span class="token number">13</span>:53 Vagrantfile
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># vi get_helm.sh </span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># ./get_helm.sh </span>
Downloading https://get.helm.sh/helm--linux-amd64.tar.gz
SHA <span class="token function">sum</span> of /tmp/helm-installer-9SplrP/helm--linux-amd64.tar.gz does not match. Aborting.
Failed to <span class="token function">install</span> helm
	For support, go to https://github.com/helm/helm.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.7.6.png" alt="image-20221114221038530" tabindex="0" loading="lazy"><figcaption>image-20221114221038530</figcaption></figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.7.7.png" alt="GIF 2022-11-14 21-39-05" style="zoom:67%;"><blockquote><p>给的文件无法使用: 获取不到版本信息: 建议直接修改第 114 行yaml配置为: <code>HELM_DIST=&quot;helm-v2.16.3-$OS-$ARCH.tar.gz&quot;</code>（命令模式下输入<code>:set number</code>可以显示行号）</p><p>老师演示的kubespher版本已经不被推荐使用了，新版本的不需要安装helm和tiller,也就是说，这段直接去官网下载即可。</p></blockquote><p>查看输出的控制台信息可以看到：<code>Downloading https://get.helm.sh/helm--linux-amd64.tar.gz</code> 丢失了版本，因此可以直接修改第 114 行yaml配置为: <code>HELM_DIST=&quot;helm-v2.16.3-$OS-$ARCH.tar.gz&quot;</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.7.8.png" alt="image-20221114222214601" tabindex="0" loading="lazy"><figcaption>image-20221114222214601</figcaption></figure><p>此时获取到了版本信息，但是连接超时了（这个下载超级慢）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># vi get_helm.sh</span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># ./get_helm.sh </span>
Downloading https://get.helm.sh/helm--linux-amd64.tar.gz
SHA <span class="token function">sum</span> of /tmp/helm-installer-9SplrP/helm--linux-amd64.tar.gz does not match. Aborting.
Failed to <span class="token function">install</span> helm
	For support, go to https://github.com/helm/helm.
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># vi get_helm.sh </span>
<span class="token punctuation">[</span>root@k8s-node1 k8s<span class="token punctuation">]</span><span class="token comment"># ./get_helm.sh </span>
Downloading https://get.helm.sh/helm-v2.16.3-linux-amd64.tar.gz
curl: <span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">)</span> Operation timed out after <span class="token number">300140</span> milliseconds with <span class="token number">0</span> out of <span class="token number">0</span> bytes received
Failed to <span class="token function">install</span> helm
	For support, go to https://github.com/helm/helm.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.7.9.png" alt="image-20221114223035023" tabindex="0" loading="lazy"><figcaption>image-20221114223035023</figcaption></figure><h3 id="_8-1-8、安装taint" tabindex="-1"><a class="header-anchor" href="#_8-1-8、安装taint" aria-hidden="true">#</a> 8.1.8、安装<code>Taint</code></h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">## 查看所有节点，找到主节点名称</span>
kubectl get <span class="token function">node</span> <span class="token parameter variable">-o</span> wide
<span class="token comment">## 在主节点上查看有没有污点有污点，表示被人占用</span>
kubectl describe <span class="token function">node</span> k8s-node1 <span class="token operator">|</span> <span class="token function">grep</span> Taint
<span class="token comment">## 去除污点</span>
kubectl taint nodes k8s-node1 node-role.kubernetes.io/master:NoSchedule-
<span class="token comment">## 创建 openebs 为存储器</span>
kubectl apply <span class="token parameter variable">-f</span> https://openebs.github.io/charts/openebs-operator-1.5.0.yaml
<span class="token comment">## 查看安装情况(等待STATUS都变为Runing)</span>
kubectl get pods --all-namespaces
<span class="token comment">## 安装 OpenEBS 后将自动创建 4 个 StorageClass</span>
kubectl get sc --all-namespaces
<span class="token comment">##如下将 openebs-hostpath设置为 默认的 StorageClass</span>
kubectl patch storageclass openebs-hostpath <span class="token parameter variable">-p</span> <span class="token string">&#39;{&quot;metadata&quot;: {&quot;annotations&quot;:{&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;true&quot;}}}&#39;</span>
<span class="token comment">## 将污点重新设置回来</span>
kubectl taint nodes k8s-node1 node-role.kubernetes.io/master<span class="token operator">=</span>:NoSchedule
<span class="token comment">## 测试存储类型是否安装成功demo-openebs-hostpath.yaml</span>
<span class="token comment"># kubectl apply -f demo-openebs-hostpath.yaml -n openebs</span>
<span class="token comment">## 如果 PVC 的状态为 Bound并且 Pod 状态为 running，则说明已经成功挂载，证明了默认的 StorageClass（openebs-hostpath）是正常工作的</span>
<span class="token comment"># kubectl get pvc -n openebs</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,27),Ds=n("code",null,"demo-openebs-hostpath.yaml",-1),Gs=t(`<h3 id="_8-1-9、最小化安装" tabindex="-1"><a class="header-anchor" href="#_8-1-9、最小化安装" aria-hidden="true">#</a> 8.1.9、最小化安装</h3><h4 id="_1、最小化安装" tabindex="-1"><a class="header-anchor" href="#_1、最小化安装" aria-hidden="true">#</a> 1、最小化安装</h4><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># clear</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># vi kubesphere-minimal.yaml</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># ll</span>
total <span class="token number">32</span>
-rw-------. <span class="token number">1</span> root root <span class="token number">5570</span> Apr <span class="token number">30</span>  <span class="token number">2020</span> anaconda-ks.cfg
drwxr-xr-x. <span class="token number">3</span> root root <span class="token number">4096</span> Nov <span class="token number">15</span> 01:36 k8s
-rw-r--r--  <span class="token number">1</span> root root <span class="token number">3625</span> Nov <span class="token number">15</span> <span class="token number">12</span>:47 kubesphere-minimal.yaml
-rw-r--r--  <span class="token number">1</span> root root  <span class="token number">280</span> Nov <span class="token number">14</span> 03:23 mypod.yaml
-rw-------. <span class="token number">1</span> root root <span class="token number">5300</span> Apr <span class="token number">30</span>  <span class="token number">2020</span> original-ks.cfg
-rw-r--r--  <span class="token number">1</span> root root  <span class="token number">502</span> Nov <span class="token number">14</span> 08:15 tomcat6-deployment.yaml
<span class="token comment">#最小化安装，创建大概等了5分钟</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl apply -f kubesphere-minimal.yaml </span>
namespace/kubesphere-system created
configmap/ks-installer created
serviceaccount/ks-installer created
clusterrole.rbac.authorization.k8s.io/ks-installer created
clusterrolebinding.rbac.authorization.k8s.io/ks-installer created
deployment.apps/ks-installer created
<span class="token comment">#查看安装过程发现失败了</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl logs -n kubesphere-system $(kubectl get pod -n kubesphere-system -l app=ks-install -o jsonpath=&#39;{.items[0].metadata.name}&#39;) -f</span>
Error from server <span class="token punctuation">(</span>BadRequest<span class="token punctuation">)</span>: container <span class="token string">&quot;installer&quot;</span> <span class="token keyword">in</span> pod <span class="token string">&quot;ks-installer-75b8d89dff-rldjq&quot;</span> is waiting to start: ContainerCreating
<span class="token comment">#等全部状态为Running，再查看安装过程（安装过程大概十几分钟）</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods --all-namespaces</span>
NAMESPACE           NAME                                          READY   STATUS              RESTARTS   AGE
default             tomcat6-5f7ccf4cb9-4hfzv                      <span class="token number">1</span>/1     Running             <span class="token number">4</span>          28h
default             tomcat6-5f7ccf4cb9-8nthk                      <span class="token number">1</span>/1     Running             <span class="token number">4</span>          28h
default             tomcat6-5f7ccf4cb9-tzwml                      <span class="token number">1</span>/1     Running             <span class="token number">4</span>          28h
ingress-nginx       nginx-ingress-controller-fzkxq                <span class="token number">1</span>/1     Running             <span class="token number">4</span>          10h
ingress-nginx       nginx-ingress-controller-l5bsm                <span class="token number">1</span>/1     Running             <span class="token number">8</span>          25h
ingress-nginx       nginx-ingress-controller-tnpsh                <span class="token number">1</span>/1     Running             <span class="token number">7</span>          25h
kube-system         coredns-7f9c544f75-klr4j                      <span class="token number">1</span>/1     Running             <span class="token number">6</span>          70d
kube-system         coredns-7f9c544f75-mckd4                      <span class="token number">1</span>/1     Running             <span class="token number">6</span>          70d
kube-system         etcd-k8s-node1                                <span class="token number">1</span>/1     Running             <span class="token number">6</span>          70d
kube-system         kube-apiserver-k8s-node1                      <span class="token number">1</span>/1     Running             <span class="token number">6</span>          70d
kube-system         kube-controller-manager-k8s-node1             <span class="token number">1</span>/1     Running             <span class="token number">6</span>          70d
kube-system         kube-flannel-ds-amd64-mb9dw                   <span class="token number">1</span>/1     Running             <span class="token number">8</span>          70d
kube-system         kube-flannel-ds-amd64-wc8rd                   <span class="token number">1</span>/1     Running             <span class="token number">9</span>          70d
kube-system         kube-flannel-ds-amd64-xccgq                   <span class="token number">1</span>/1     Running             <span class="token number">8</span>          70d
kube-system         kube-proxy-52tnk                              <span class="token number">1</span>/1     Running             <span class="token number">7</span>          70d
kube-system         kube-proxy-7nwdt                              <span class="token number">1</span>/1     Running             <span class="token number">7</span>          70d
kube-system         kube-proxy-p2b9m                              <span class="token number">1</span>/1     Running             <span class="token number">6</span>          70d
kube-system         kube-scheduler-k8s-node1                      <span class="token number">1</span>/1     Running             <span class="token number">6</span>          70d
kube-system         tiller-deploy-6ffcfbc8df-7mhg5                <span class="token number">1</span>/1     Running             <span class="token number">2</span>          11h
kubesphere-system   ks-installer-75b8d89dff-rldjq                 <span class="token number">0</span>/1     ContainerCreating   <span class="token number">0</span>          79s
openebs             openebs-admission-server-5cf6864fbf-dlvqh     <span class="token number">1</span>/1     Running             <span class="token number">2</span>          9h
<span class="token comment">#如果\`ks-account\`状态为Init:1/2 或则 ks-apigateway状态为ContainerCreating、Error可以使用如下命令重启一下</span>
kubectl <span class="token parameter variable">-n</span> kubesphere-system rollout restart deployment/ks-account
<span class="token comment">#使用如下命令可以查看日志</span>
kubectl <span class="token parameter variable">-n</span> kubesphere-system logs pod ks-apigateway-xxxxx
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.1.1.png" alt="image-20221115212352614" tabindex="0" loading="lazy"><figcaption>image-20221115212352614</figcaption></figure><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.1.2.png" alt="image-20221115212803782" tabindex="0" loading="lazy"><figcaption>image-20221115212803782</figcaption></figure><p>打开浏览器，访问 http://10.0.2.5:30880 输入<code>node1</code>节点控制台的用户名和密码即可进入仪表盘</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.1.3.png" alt="image-20221115221948001" tabindex="0" loading="lazy"><figcaption>image-20221115221948001</figcaption></figure><p>进入仪表盘后会显示如下界面</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.1.4.png" alt="image-20221115221958312" tabindex="0" loading="lazy"><figcaption>image-20221115221958312</figcaption></figure>`,9),Ls={href:"https://raw.githubusercontent.com/kubesphere/ks-installer/v2.1.1/kubesphere-minimal.yaml",target:"_blank",rel:"noopener noreferrer"},Ms=n("p",null,[n("a",{href:"code%5Ckubesphere-minimal.yaml"},"kubesphere-minimal.yaml离线文件")],-1),Os=n("h4",{id:"_2、开启其他功能",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2、开启其他功能","aria-hidden":"true"},"#"),s(" 2、开启其他功能")],-1),Us=n("p",null,[n("code",null,"devops"),s("、"),n("code",null,"devops/sonarqube"),s("代码检查，"),n("code",null,"notification"),s("、"),n("code",null,"alerting")],-1),Ks={href:"https://v2-1.docs.kubesphere.io/docs/zh-CN/installation/install-metrics-server/",target:"_blank",rel:"noopener noreferrer"},Fs=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#编辑ks-installer文件</span>
kubectl edit cm <span class="token parameter variable">-n</span> kubesphere-system ks-installer
<span class="token comment">#查看安装guo&#39;c（大概需要20多分钟）</span>
kubectl logs <span class="token parameter variable">-n</span> kubesphere-system <span class="token variable"><span class="token variable">$(</span>kubectl get pod <span class="token parameter variable">-n</span> kubesphere-system <span class="token parameter variable">-l</span> <span class="token assign-left variable">app</span><span class="token operator">=</span>ks-install <span class="token parameter variable">-o</span> <span class="token assign-left variable">jsonpath</span><span class="token operator">=</span><span class="token string">&#39;{.items[0].metadata.name}&#39;</span><span class="token variable">)</span></span> <span class="token parameter variable">-f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.2.1.png" alt="image-20221116195239645" tabindex="0" loading="lazy"><figcaption>image-20221116195239645</figcaption></figure><p>再次输入<code>node1</code>节点控制台的用户邮箱和密码</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.2.2.png" alt="image-20221116201531819" tabindex="0" loading="lazy"><figcaption>image-20221116201531819</figcaption></figure><p>进入仪表盘后会显示如下界面</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.2.3.png" alt="image-20221116205533929" tabindex="0" loading="lazy"><figcaption>image-20221116205533929</figcaption></figure><p>企业空间：一个独立的团队，比如说<code>尚硅谷</code>；一个企业空间下可以有多个项目，比如说<code>谷粒商城</code>、<code>谷粒学苑</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.2.4.png" alt="image-20221116203423493" tabindex="0" loading="lazy"><figcaption>image-20221116203423493</figcaption></figure><p>项目管理：每一个项目都属于某一个企业空间</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.2.5.png" alt="image-20221116203355170" tabindex="0" loading="lazy"><figcaption>image-20221116203355170</figcaption></figure><p>账户管理：就是管理账户，可以对帐户授予各种权限</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.2.6.png" alt="image-20221116203646929" tabindex="0" loading="lazy"><figcaption>image-20221116203646929</figcaption></figure><p>基础设施：可以看到企业当前的所有资源信息</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.2.7.png" alt="image-20221116203835141" tabindex="0" loading="lazy"><figcaption>image-20221116203835141</figcaption></figure><p>点进去还可以查看<code>节点状态</code>，<code>容器组</code>等详细信息</p><p><code>运行状态</code>：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.2.8.png" alt="image-20221116203943490" tabindex="0" loading="lazy"><figcaption>image-20221116203943490</figcaption></figure><p><code>容器组</code>：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.2.9.png" alt="image-20221116204155509" tabindex="0" loading="lazy"><figcaption>image-20221116204155509</figcaption></figure><p>点击容器组下的某个容器组，还可以查看该容器组里某个容器的日志</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.2.10.png" alt="image-20221116204218402" tabindex="0" loading="lazy"><figcaption>image-20221116204218402</figcaption></figure><p>点击仪表盘的<code>kubernetes</code> -&gt; <code>DevOps</code>即可查看自动化部署信息</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.1.9.2.11.png" alt="image-20221116205447934" tabindex="0" loading="lazy"><figcaption>image-20221116205447934</figcaption></figure>`,23),js=n("code",null,"ks-installer",-1),Vs=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>task monitoring status is successful
task alerting status is successful
total: <span class="token number">4</span>     completed:3
**************************************************
task notification status is successful
task monitoring status is successful
task alerting status is successful
total: <span class="token number">4</span>     completed:3
**************************************************
task notification status is successful
task monitoring status is successful
task alerting status is successful
total: <span class="token number">4</span>     completed:3
**************************************************
task notification status is successful
task monitoring status is successful
task devops status is successful
task alerting status is successful
total: <span class="token number">4</span>     completed:4
**************************************************
<span class="token comment">#####################################################</span>
<span class="token comment">###              Welcome to KubeSphere!           ###</span>
<span class="token comment">#####################################################</span>

Console: http://10.0.2.5:30880
Account: admin
Password: P@88w0rd

NOTES：
  <span class="token number">1</span>. After logging into the console, please check the
     monitoring status of <span class="token function">service</span> components <span class="token keyword">in</span>
     the <span class="token string">&quot;Cluster Status&quot;</span><span class="token builtin class-name">.</span> If the <span class="token function">service</span> is not
     ready, please <span class="token function">wait</span> patiently. You can start
     to use when all components are ready.
  <span class="token number">2</span>. Please modify the default password after login.

<span class="token comment">#####################################################</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-2、使用k8s" tabindex="-1"><a class="header-anchor" href="#_8-2、使用k8s" aria-hidden="true">#</a> 8.2、使用K8s</h2><h3 id="_8-2-1、多租户管理快速入门" tabindex="-1"><a class="header-anchor" href="#_8-2-1、多租户管理快速入门" aria-hidden="true">#</a> 8.2.1、多租户管理快速入门</h3>`,3),Bs={href:"https://v2-1.docs.kubesphere.io/docs/zh-CN/quick-start/admin-quick-start/",target:"_blank",rel:"noopener noreferrer"},Ys=t('<figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.1.0.png" alt="kubesphere用户系统" tabindex="0" loading="lazy"><figcaption>kubesphere用户系统</figcaption></figure><table><thead><tr><th>操作人账号</th><th>操作</th><th>添加的账号</th><th></th><th></th><th>密码</th></tr></thead><tbody><tr><td>admin</td><td>创建平台角色</td><td>user-manager</td><td>CRUD用户、角色</td><td></td><td></td></tr><tr><td>admin</td><td>创建账户</td><td>atguigu-hr</td><td>atguigu-hr@atguigu.com</td><td>user-manager(用户、角色管理)</td><td>atguigu-hr-A123456</td></tr><tr><td>atguigu-hr</td><td>创建账户</td><td>ws-manager</td><td>ws-manager@atguigu.com</td><td>workspaces-manager(工作空间管理员，可以创建工作空间、邀请成员，查看所有企业空间成员)</td><td>ws-manager-A123456</td></tr><tr><td>atguigu-hr</td><td>创建账户</td><td>ws-admin</td><td>ws-admin@atguigu.com</td><td>cluster-regular(先设置为普通用户)</td><td>ws-admin-A123456</td></tr><tr><td>atguigu-hr</td><td>创建账户</td><td>project-admin</td><td>project-admin@atguigu.com</td><td>cluster-regular(先设置为普通用户)</td><td>project-admin-A123456</td></tr><tr><td>atguigu-hr</td><td>创建账户</td><td>project-regular</td><td>project-regular@atguigu.com</td><td>cluster-regular(先设置为普通用户)</td><td>project-regular-A123456</td></tr><tr><td>ws-manager</td><td>创建企业空间</td><td>gulimall-workspace</td><td>ws-manager</td><td>谷粒商城企业空间</td><td></td></tr><tr><td>ws-manager</td><td>创建企业空间</td><td>guliedu-workspace</td><td>ws-manager</td><td></td><td></td></tr><tr><td>ws-manager</td><td>添加ws-admin为管理员(管理员可以管理项目，邀请成员，查看成员)</td><td></td><td></td><td></td><td></td></tr><tr><td>ws-admin</td><td>邀请project-admin进入企业空间，并授予workspace-regular权限(regular可以创建项目，邀请项目成员。不能查看企业空间成员)</td><td></td><td></td><td></td><td></td></tr><tr><td>ws-admin</td><td>邀请project-regular进入企业空间，并授予workspace-viewer权限(viewer可以查看项目、企业空间成员)</td><td></td><td></td><td></td><td></td></tr><tr><td>project-admin</td><td>创建gulimall项目，并邀请project-regular作为项目的operator开发人员(可以部署应用)</td><td>gulimall</td><td>谷粒商城</td><td></td><td></td></tr><tr><td>project-admin</td><td>创建gulimall-devops项目，并邀请project-regular作为项目的maintainer维护者(可以设置github账号密码等)</td><td>gulimall-devops</td><td>谷粒商城的自动化部署</td><td></td><td></td></tr></tbody></table><h4 id="_1、新建角色" tabindex="-1"><a class="header-anchor" href="#_1、新建角色" aria-hidden="true">#</a> 1、新建角色</h4><p>首先，新建<code>user-manager</code>角色：</p><p>使用控制台显示的用户名和密码进入系统后，点击<code>平台管理</code> -&gt; <code>平台角色</code> -&gt; <code>创建</code> ，在名称里输入<code>user-manager</code>，描述信息输入<code>CRUD用户、角色</code>，点击下一步，在权限设置中选择<code>账户管理</code>和<code>角色管理</code>，然后点击创建。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.1.1.gif" alt="GIF 2022-11-16 21-16-52" tabindex="0" loading="lazy"><figcaption>GIF 2022-11-16 21-16-52</figcaption></figure><h4 id="_2、新建账号" tabindex="-1"><a class="header-anchor" href="#_2、新建账号" aria-hidden="true">#</a> 2、新建账号</h4><p>新建账号：<code>atguigu-hr</code></p><p>在<code>平台管理</code> -&gt; <code>账户管理</code> 里，点击<code>创建</code>，用户名输入<code>atguigu-hr</code>，邮箱输入<code>atguigu-hr@atguigu.com</code>，角色选择<code> user-manager</code>，密码输入<code>atguigu-hr-A123456</code>，然后点击<code>确定</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.1.2.1.gif" alt="GIF 2022-11-16 21-28-01" tabindex="0" loading="lazy"><figcaption>GIF 2022-11-16 21-28-01</figcaption></figure><p>新建账户：<code>ws-manager</code></p><p>在<code>平台管理</code> -&gt; <code>账户管理</code> 里，点击<code>创建</code>，用户名输入<code>ws-manager</code>，邮箱输入<code>ws-manager@atguigu.com</code>，角色选择<code> workspaces-manager</code>，密码输入<code>ws-manager-A123456</code>，然后点击<code>确定</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.1.2.2.gif" alt="GIF 2022-11-17 21-27-03" tabindex="0" loading="lazy"><figcaption>GIF 2022-11-17 21-27-03</figcaption></figure><p>创建账户：<code>ws-admin</code></p><p>在<code>平台管理</code> -&gt; <code>账户管理</code> 里，点击<code>创建</code>，用户名输入<code>ws-admin</code>，邮箱输入<code>ws-admin@atguigu.com</code>，角色选择<code> cluster-regular</code>，密码输入<code>ws-admin-A123456</code>，然后点击<code>确定</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.1.2.3.gif" alt="GIF 2022-11-17 21-31-21" tabindex="0" loading="lazy"><figcaption>GIF 2022-11-17 21-31-21</figcaption></figure><p>新建账户：<code>project-admin</code></p><p>在<code>平台管理</code> -&gt; <code>账户管理</code> 里，点击<code>创建</code>，用户名输入<code> project-admin</code>，邮箱输入<code>project-admin@atguigu.com</code>，角色选择<code> cluster-regular</code>，密码输入<code>project-admin-A123456</code>，然后点击<code>确定</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.1.2.4.gif" alt="GIF 2022-11-17 21-33-18" tabindex="0" loading="lazy"><figcaption>GIF 2022-11-17 21-33-18</figcaption></figure><p>新建账户：<code>project-regular</code></p><p>在<code>平台管理</code> -&gt; <code>账户管理</code> 里，点击<code>创建</code>，用户名输入<code>project-regular</code>，邮箱输入<code>project-regular@atguigu.com</code>，角色选择<code>cluster-regular</code>，密码输入<code>project-regular-A123456</code>，然后点击<code>确定</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.1.2.5.gif" alt="GIF 2022-11-17 21-34-59" tabindex="0" loading="lazy"><figcaption>GIF 2022-11-17 21-34-59</figcaption></figure><h4 id="_3、新建企业空间" tabindex="-1"><a class="header-anchor" href="#_3、新建企业空间" aria-hidden="true">#</a> 3、新建企业空间</h4><p>新建企业空间：<code>gulimall-workspace</code></p><p>使用使用<code>ws-manager</code>账户，<code>ws-manager-A123456</code>密码登录，在企业空间里点击<code>创建</code>，在企业空间名称里输入<code>gulimall-workspace</code>，企业空间管理员保持默认为<code>ws-manager</code>，描述信息里<code>谷粒商城企业空间</code>，然后点击<code>确定</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.1.3.1.gif" alt="GIF 2022-11-17 21-37-16" tabindex="0" loading="lazy"><figcaption>GIF 2022-11-17 21-37-16</figcaption></figure><p>新建企业空间：<code>guliedu-workspace</code></p><p>在企业空间里点击<code>创建</code>，在企业空间名称里输入<code>guliedu-workspace</code>，企业空间管理员保持默认为<code>ws-manager</code>，然后点击<code>确定</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.1.3.2.gif" alt="GIF 2022-11-17 21-42-42" tabindex="0" loading="lazy"><figcaption>GIF 2022-11-17 21-42-42</figcaption></figure><h4 id="_4、添加管理员" tabindex="-1"><a class="header-anchor" href="#_4、添加管理员" aria-hidden="true">#</a> 4、添加管理员</h4><p>添加<code>ws-admin</code>为管理员</p><p>在企业空间里点击<code>gulimall-workspace</code>，点击<code>企业空间设置</code> -&gt; <code>企业成员</code> -&gt; <code>邀请成员</code> -&gt; 点击<code>ws-admin</code> 右侧的<code>+</code>，点击<code>workspace-admin</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.1.4.gif" alt="GIF 2022-11-17 21-52-25" tabindex="0" loading="lazy"><figcaption>GIF 2022-11-17 21-52-25</figcaption></figure><h4 id="_5、邀请进入企业空间并添加权限" tabindex="-1"><a class="header-anchor" href="#_5、邀请进入企业空间并添加权限" aria-hidden="true">#</a> 5、邀请进入企业空间并添加权限</h4><p>使用<code> ws-admin</code>账号，<code>ws-admin-A123456</code>密码登录系统，点击<code>企业空间 gulimall-workspace</code>下方的<code>进入企业空间</code>，点击<code>企业空间设置</code> -&gt; <code>企业成员</code> -&gt; <code>邀请成员</code> ，邀请<code>project-admin</code>进入企业空间，并授予<code>workspace-regular</code>权限(regular可以创建项目，查看成员)，邀请<code>project-regular</code>进入企业空间，并授予<code>workspace-viewer</code>权限(viewer可以查看项目、成员)，然后点击<code>关闭</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.1.5.gif" alt="GIF 2022-11-17 22-14-12" tabindex="0" loading="lazy"><figcaption>GIF 2022-11-17 22-14-12</figcaption></figure><h4 id="_6、创建项目" tabindex="-1"><a class="header-anchor" href="#_6、创建项目" aria-hidden="true">#</a> 6、创建项目</h4><p>使用<code>project-admin</code>账号，<code>project-admin-A123456</code>密码登录系统，然后点击<code>创建</code>，选择<code>创建资源型项目</code>，在基本信息里名称输入<code>gulimall</code>，别名输入<code>谷粒商城</code>，然后点击<code>下一步</code>，在高级设置里保持默认配置，然后点击<code>创建</code>。在<code>gulimall</code>项目里的<code>项目设置</code> -&gt; <code>项目成员</code>里点击<code>邀请成员</code>，邀请<code>project-regular</code>作为<code>operator</code>项目的开发人员(可以部署应用)</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.1.6.1.gif" alt="GIF 2022-11-17 22-28-51" tabindex="0" loading="lazy"><figcaption>GIF 2022-11-17 22-28-51</figcaption></figure><p>在工作台里点击<code>创建</code>，选择<code>创建一个DevOps 工程</code>；在基本信息里，名称输入<code>gulimall-devops</code>，描述信息输入<code>谷粒商城的自动化部署</code>，然后点击<code>创建</code>，然后点进<code>gulimall-devops</code>里，在<code>工程管理</code>的<code>工程成员</code>里点击<code>邀请成员</code>，邀请<code>project-regular</code>作为<code>maintainer</code>项目的维护者(可以设置github账号密码等)</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.1.6.2.gif" alt="GIF 2022-11-17 22-36-11" tabindex="0" loading="lazy"><figcaption>GIF 2022-11-17 22-36-11</figcaption></figure><h3 id="_8-2-2、创建-wordpress并发布至-k8s" tabindex="-1"><a class="header-anchor" href="#_8-2-2、创建-wordpress并发布至-k8s" aria-hidden="true">#</a> 8.2.2、创建 Wordpress并发布至 K8s</h3>',42),Hs={href:"https://v2-1.docs.kubesphere.io/docs/zh-CN/quick-start/wordpress-deployment/",target:"_blank",rel:"noopener noreferrer"},Ws=t('<p>[创建 Wordpress 应用并发布至 Kubernetes | 离线版](code\\创建 Wordpress 应用并发布至 Kubernetes.md)</p><h4 id="_1、创建密钥" tabindex="-1"><a class="header-anchor" href="#_1、创建密钥" aria-hidden="true">#</a> 1、创建密钥</h4><h5 id="_1、创建-mysql-密钥" tabindex="-1"><a class="header-anchor" href="#_1、创建-mysql-密钥" aria-hidden="true">#</a> 1、创建 MySQL 密钥</h5><p>可以在配置中心设置密钥，以隐藏敏感信息。密钥密钥的<code>key</code>即为以前创建<code>docker</code>容器的参数，可以设置哪些属性可以再<code>docker hub</code>中查看。</p><p>使用<code>project-regular</code>账号，<code>project-regular-A123456</code>密码登录系统，在项目里点击<code>gulimall(谷粒商城)</code>项目，在<code>配置中心</code> -&gt; <code>密钥</code>里点击<code>创建</code>，在基本信息里名称输入<code>mysql-secret</code>，别名输入<code>MYSQL 密钥</code>，然后点击<code>下一步</code>；在密钥设置里，点击<code>添加数据</code>，然后<code>键</code>输入<code>MYSQL_ROOT_PASSWORD</code>，值里输入<code>123456</code>，点击对钩，然后再点击<code>创建</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.2.1.1.1.gif" alt="GIF 2022-11-17 22-51-20" tabindex="0" loading="lazy"><figcaption>GIF 2022-11-17 22-51-20</figcaption></figure><p>点进<code>mysql-secret(MYSQL 密钥)</code>里，可以看到此时键为<code>MYSQL_ROOT_PASSWORD</code>的值已经被加密了</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.2.1.1.2.png" alt="image-20221117225604081" tabindex="0" loading="lazy"><figcaption>image-20221117225604081</figcaption></figure>',8),$s={href:"https://hub.docker.com/_/mysql",target:"_blank",rel:"noopener noreferrer"},Xs=t(`<figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.2.1.1.3.png" alt="image-20221201201518931" tabindex="0" loading="lazy"><figcaption>image-20221201201518931</figcaption></figure><h5 id="_2、创建-wordpress-密钥" tabindex="-1"><a class="header-anchor" href="#_2、创建-wordpress-密钥" aria-hidden="true">#</a> 2、创建 WordPress 密钥</h5><p>在项目里点击<code>gulimall(谷粒商城)</code>项目，在<code>配置中心</code> -&gt; <code>密钥</code>里点击<code>创建</code>，在基本信息里名称输入<code>wordpress-secret</code>，然后点击<code>下一步</code>；在密钥设置里，点击<code>添加数据</code>，然后<code>键</code>输入<code>WORDPRESS_DB_PASSWORD</code>，值里输入<code>123456</code>，点击对钩，然后再点击<code>创建</code>。创建好后，点击<code>wordpress-secret</code>右边的三个点，选择<code>编辑配置文件</code>，然后即可看到这次操作生成的<code>yaml</code>配置文件</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.2.1.2.gif" alt="GIF 2022-12-1 20-32-24" tabindex="0" loading="lazy"><figcaption>GIF 2022-12-1 20-32-24</figcaption></figure><h4 id="_2、创建存储卷" tabindex="-1"><a class="header-anchor" href="#_2、创建存储卷" aria-hidden="true">#</a> 2、创建存储卷</h4><p>在<code>gulimall</code>项目里，点击存储卷里的<code>创建</code>按钮，在基本信息的名称里输入<code>mysql-pvc</code>，然后点击下一步，在存储卷设置里保持默认设置，然后点击<code>下一步</code>，在高级设置里保持默认设置，然后点击<code>创建</code>，即可创建一个存储卷。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.2.2.gif" alt="GIF 2022-12-1 20-39-24" tabindex="0" loading="lazy"><figcaption>GIF 2022-12-1 20-39-24</figcaption></figure><h4 id="_3、创建应用" tabindex="-1"><a class="header-anchor" href="#_3、创建应用" aria-hidden="true">#</a> 3、创建应用</h4><h5 id="添加-mysql-组件" tabindex="-1"><a class="header-anchor" href="#添加-mysql-组件" aria-hidden="true">#</a> 添加 MySQL 组件</h5><p>在 <code>video/QQ录屏20221201212746.mp4</code>文件里查看</p><h5 id="添加-wordpress-组件" tabindex="-1"><a class="header-anchor" href="#添加-wordpress-组件" aria-hidden="true">#</a> 添加 WordPress 组件</h5><p>在<code>video/QQ录屏20221201213610.mp4</code>文件里查看</p><h3 id="_8-2-3、更新windows后报错" tabindex="-1"><a class="header-anchor" href="#_8-2-3、更新windows后报错" aria-hidden="true">#</a> 8.2.3、更新<code>Windows</code>后报错</h3><p>电脑升级windows11后，访问 http://192.168.56.100:30880/ 就一直打不开，然后执行<code>kubectl get pods --all-namespaces</code>发现报了个不能连接的错，我以为是kubernetes的问题，然后搜了一下找到了个解决方式</p><blockquote><p>具体输出如下：</p><p>场景：高可用集群 master 节点，当我执行：kubectl get nodes，出现如下错误：</p><pre><code>kubectl Unable to connect to the server: dial tcp 10.12.2.199:6443: i/o timeout
</code></pre><p>原因是 Master 节点初始化集群的时候，没有执行：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>$ mkdir -p $HOME/.kube
$ sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
$ sudo chown $(id -u):$(id -g) $HOME/.kube/config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行完毕即可。</p><p>https://blog.csdn.net/qq_19734597/article/details/106574376</p></blockquote><p>但我使用后亲测不行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods --all-namespaces</span>
Unable to connect to the server: dial tcp <span class="token number">10.0</span>.2.5:6443: connect: network is unreachable
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># mkdir -p $HOME/.kube</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span>
cp: overwrite ‘/root/.kube/config’? <span class="token function">yes</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># chown $(id -u):$(id -g) $HOME/.kube/config</span>
<span class="token punctuation">[</span>root@k8s-node1 ~<span class="token punctuation">]</span><span class="token comment"># kubectl get pods --all-namespaces</span>
Unable to connect to the server: dial tcp <span class="token number">10.0</span>.2.5:6443: connect: network is unreachable
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.3.1.png" alt="image-20221230203737247" tabindex="0" loading="lazy"><figcaption>image-20221230203737247</figcaption></figure><p>使用<code>ip addr</code>查看ip信息，可以发现<code>eth0</code>没有对应的ip</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.3.2.png" alt="image-20221230210543936" tabindex="0" loading="lazy"><figcaption>image-20221230210543936</figcaption></figure><p>遇到这种问题首先不要想着修改网卡设置；遇到虚拟机网络突然不能用的这种情况首先应该想到的是<code>VirtualBox</code>虚拟机或<code>WMware</code>虚拟机的虚拟网卡配置问题 选中<code> VirtualBox</code>里的<code>k8s-node1</code>，然后点击<code>设置</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.3.3.png" alt="image-20221230211729509" tabindex="0" loading="lazy"><figcaption>image-20221230211729509</figcaption></figure><p>在<code>k8s-node1 - 设置</code>里点击<code>网路</code>，可以看到在网卡1里提示了<code>发现无效配置</code>（<code>网络:网卡1页:未指定NAT网络名称。</code>）</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.3.4.png" alt="image-20221230211701074" tabindex="0" loading="lazy"><figcaption>image-20221230211701074</figcaption></figure><p>关闭三个虚拟机，点击<code>管理(F) -&gt; 全局设定</code>在网络里点击添加以添加一个虚拟网卡；然后将各节点<code>网络</code>里的第一个网卡的高级里刷新一下<code>Mac地址</code>，然后点击<code>OK</code>即可。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/8.2.3.5.gif" alt="GIF 2022-12-30 21-28-00" tabindex="0" loading="lazy"><figcaption>GIF 2022-12-30 21-28-00</figcaption></figure><p>再次执行<code>kubectl get pods --all-namespaces</code>命令</p>`,27),Qs=n("figure",null,[n("img",{src:"https://gitlab.com/apzs/image/-/raw/master/image/8.2.3.6.png",alt:"image-20221230214110606",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20221230214110606")],-1),Js=n("p",null,"访问 http://192.168.56.100:30880/login 页面，可以看到已经访问成功了",-1),Zs=n("figure",null,[n("img",{src:"https://gitlab.com/apzs/image/-/raw/master/image/8.2.3.7.png",alt:"image-20221230214303055",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20221230214303055")],-1);function ne(se,ee){const a=l("ExternalLinkIcon"),i=l("RouterLink");return p(),d("div",null,[u,m,b,g,k,v,h,n("h3",f,[y,s(" 8.1.1、"),n("a",_,[s("概述 | Kubernetes"),e(a)])]),x,n("p",null,[w,s(" 这个名字源于希腊语，意为“舵手”或“飞行员”。k8s 这个缩写是因为 k 和 s 之间有八个字符的关系。 Google 在 2014 年开源了 Kubernetes 项目。 Kubernetes 建立在 "),n("a",z,[s("Google 大规模运行生产工作负载十几年经验"),e(a)]),s("的基础上， 结合了社区中最优秀的想法和实践。")]),S,n("ul",null,[E,A,n("li",null,[n("p",null,[s("不提供应用程序级别的服务作为内置服务，例如中间件（例如消息中间件）、 数据处理框架（例如 Spark）、数据库（例如 MySQL）、缓存、集群存储系统 （例如 Ceph）。这样的组件可以在 Kubernetes 上运行，并且/或者可以由运行在 Kubernetes 上的应用程序通过可移植机制 （例如"),n("a",R,[s("开放服务代理"),e(a)]),s("）来访问。")])]),P,T,I,N]),C,n("p",null,[n("a",q,[s("SSH-publickey - 腾讯云开发者社区-腾讯云 (tencent.com)"),e(a)])]),n("p",null,[n("a",D,[s("linux ssh publickey登录 - 一江春水…… - 博客园 (cnblogs.com)"),e(a)])]),n("p",null,[n("a",G,[s("sshd_config配置文件详解_独孤柯灵的博客-CSDN博客_sshd_config"),e(a)])]),n("p",null,[n("a",L,[s("Linux使用Public Key方式远程登录 - 走看看 (zoukankan.com)"),e(a)])]),n("p",null,[n("a",M,[s("真正解决 windows OpenSSH WARNING: UNPROTECTED PRIVATE KEY FILE!_coder_jo的博客-CSDN博客"),e(a)])]),O,n("p",null,[e(i,{to:"/gulimall/code/8.1.3.3.1.html"},{default:o(()=>[s("点击查看完整代码")]),_:1})]),U,n("p",null,[s("参考链接："),n("a",K,[s("stackoverflow"),e(a)]),s("，"),n("a",F,[s("atlassian"),e(a)])]),j,n("p",null,[e(i,{to:"/gulimall/code/8.1.3.3.4.html"},{default:o(()=>[s("点击查看"),V,s("节点使用的所有命令")]),_:1})]),B,n("p",null,[e(i,{to:"/gulimall/code/8.1.3.3.2.html"},{default:o(()=>[s("点击查看"),Y,s("完整命令")]),_:1})]),H,n("p",null,[e(i,{to:"/gulimall/code/8.1.3.4.html"},{default:o(()=>[s("点击查看"),W,s("的完整命令")]),_:1})]),$,n("p",null,[e(i,{to:"/gulimall/code/8.1.5.1.html"},{default:o(()=>[s("点击查看完整命令和完整截图")]),_:1})]),X,n("p",null,[e(i,{to:"/gulimall/code/8.1.5.3.html"},{default:o(()=>[s("点击查看完整命令和完整截图")]),_:1})]),Q,n("p",null,[e(i,{to:"/gulimall/code/8.1.5.4.2.2.html"},{default:o(()=>[s("点击查看完整命令和完整截图")]),_:1})]),J,n("p",null,[e(i,{to:"/gulimall/code/8.1.5.4.2.4.html"},{default:o(()=>[s("点击查看完整命令和完整图片")]),_:1})]),Z,nn,sn,n("p",null,[s("可以去"),n("a",en,[s("docker hub"),e(a)]),s("里面搜"),an,s("，找"),tn,s("的镜像")]),on,n("p",null,[e(i,{to:"/gulimall/code/8.1.6.1.1.html"},{default:o(()=>[s("点击查看完整运行命令")]),_:1})]),ln,n("p",null,[e(i,{to:"/gulimall/code/8.1.6.1.2.html"},{default:o(()=>[s("点击查看完整运行命令")]),_:1})]),cn,pn,n("p",null,[e(i,{to:"/gulimall/code/8.1.6.1.3.html"},{default:o(()=>[s("点击查看完整命令")]),_:1})]),dn,rn,n("p",null,[e(i,{to:"/gulimall/code/8.1.6.1.4.html"},{default:o(()=>[s("点击查看完整命令")]),_:1})]),un,n("p",null,[s("1、"),n("a",mn,[s("kubectl 文档"),e(a)])]),n("p",null,[s("2、"),n("a",bn,[s("资源类型"),e(a)])]),n("p",null,[s("3、"),n("a",gn,[s("格式化输出"),e(a)])]),n("p",null,[s("4、"),n("a",kn,[s("常用操作"),e(a)])]),n("p",null,[s("5、"),n("a",vn,[s("命令参考"),e(a)])]),hn,n("p",null,[e(i,{to:"/gulimall/code/8.1.6.5.4.html"},{default:o(()=>[s("点击查看完整命令和完整截图")]),_:1})]),n("h4",fn,[yn,s(" 6、"),n("a",_n,[s("相关术语"),e(a)])]),n("blockquote",null,[n("h4",xn,[wn,s(),n("a",zn,[s("Pod"),e(a)])]),Sn,n("p",null,[En,s("（就像在鲸鱼荚或者豌豆荚中）是一组（一个或多个） "),n("a",An,[s("容器"),e(a)]),s("； 这些容器共享存储、网络、以及怎样运行这些容器的声明。 Pod 中的内容总是并置（colocated）的并且一同调度，在共享的上下文中运行。 Pod 所建模的是特定于应用的 “逻辑主机”，其中包含一个或多个应用容器， 这些容器相对紧密地耦合在一起。 在非云环境中，在相同的物理机或虚拟机上运行的应用类似于在同一逻辑主机上运行的云应用。")]),n("h4",Rn,[Pn,s(),n("a",Tn,[s("ReplicaSet"),e(a)])]),In,Nn,Cn,n("h4",qn,[Dn,s(),n("a",Gn,[s("Deployments"),e(a)])]),n("p",null,[s("一个 Deployment 为 "),n("a",Ln,[s("Pod"),e(a)]),s(" 和 "),n("a",Mn,[s("ReplicaSet"),e(a)]),s(" 提供声明式的更新能力。")]),n("p",null,[s("你负责描述 Deployment 中的 "),On,s("，而 Deployment "),n("a",Un,[s("控制器（Controller）"),e(a)]),s(" 以受控速率更改实际状态， 使其变为期望状态。你可以定义 Deployment 以创建新的 ReplicaSet，或删除现有 Deployment， 并通过新的 Deployment 收养其资源。")]),Kn,n("ul",null,[n("li",null,[n("p",null,[n("a",Fn,[s("创建 Deployment 以将 ReplicaSet 上线"),e(a)]),s("。ReplicaSet 在后台创建 Pod。 检查 ReplicaSet 的上线状态，查看其是否成功。")])]),n("li",null,[n("p",null,[s("通过更新 Deployment 的 PodTemplateSpec，"),n("a",jn,[s("声明 Pod 的新状态"),e(a)]),s(" 。 新的 ReplicaSet 会被创建，Deployment 以受控速率将 Pod 从旧 ReplicaSet 迁移到新 ReplicaSet。 每个新的 ReplicaSet 都会更新 Deployment 的修订版本。")])]),n("li",null,[n("p",null,[s("如果 Deployment 的当前状态不稳定，"),n("a",Vn,[s("回滚到较早的 Deployment 版本"),e(a)]),s("。 每次回滚都会更新 Deployment 的修订版本。")])]),n("li",null,[n("p",null,[n("a",Bn,[s("扩大 Deployment 规模以承担更多负载"),e(a)]),s("。")])]),n("li",null,[n("p",null,[n("a",Yn,[s("暂停 Deployment 的上线"),e(a)]),s(" 以应用对 PodTemplateSpec 所作的多项修改， 然后恢复其执行以启动新的上线版本。")])]),n("li",null,[n("p",null,[n("a",Hn,[s("使用 Deployment 状态"),e(a)]),s("来判定上线过程是否出现停滞。")])]),n("li",null,[n("p",null,[n("a",Wn,[s("清理较旧的不再需要的 ReplicaSet"),e(a)]),s(" 。")])])]),n("h4",$n,[Xn,s(),n("a",Qn,[s("StatefulSet"),e(a)])]),Jn,n("p",null,[s("StatefulSet 用来管理某 "),n("a",Zn,[s("Pod"),e(a)]),s(" 集合的部署和扩缩， 并为这些 Pod 提供持久存储和持久标识符。")]),n("p",null,[s("和 "),n("a",ns,[s("Deployment"),e(a)]),s(" 类似， StatefulSet 管理基于相同容器规约的一组 Pod。但和 Deployment 不同的是， StatefulSet 为它们的每个 Pod 维护了一个有粘性的 ID。这些 Pod 是基于相同的规约来创建的， 但是不能相互替换：无论怎么调度，每个 Pod 都有一个永久不变的 ID。")]),ss,es,as,n("h4",ts,[is,s(),n("a",os,[s("DaemonSet"),e(a)])]),ls,cs,ps,ds]),rs,n("p",null,[e(i,{to:"/gulimall/code/8.1.6.7.1.html"},{default:o(()=>[s("点击查看完整命令")]),_:1})]),us,n("p",null,[e(i,{to:"/gulimall/code/8.1.6.7.2.html"},{default:o(()=>[s("点击查看完整命令")]),_:1})]),n("h3",ms,[bs,s(" 8.1.7、"),n("a",gs,[s("安装Helm"),e(a)])]),ks,n("blockquote",null,[vs,n("p",null,[s("每个Helm "),n("a",hs,[s("版本"),e(a)]),s("都提供了各种操作系统的二进制版本，这些版本可以手动下载和安装。")]),n("ol",null,[n("li",null,[s("下载 "),n("a",fs,[s("需要的版本"),e(a)])]),ys,_s]),n("p",null,[s("然后就可以执行客户端程序并 "),n("a",xs,[s("添加稳定仓库"),e(a)]),s(": "),ws,s(".")]),zs,Ss,n("p",null,[s("Helm现在有个安装脚本可以自动拉取最新的Helm版本并在 "),n("a",Es,[s("本地安装"),e(a)]),s("。")]),As]),Rs,n("p",null,[s("参考1："),n("a",Ps,[s(" Kubesphere安装_星夜孤帆的博客-CSDN博客_kubesphere 安装"),e(a)])]),n("p",null,[s("参考2： "),n("a",Ts,[s("KubeSphere的使用_阿门之恋的博客-CSDN博客_kubesphere使用"),e(a)])]),n("p",null,[s("查看"),Is,s("的历史版本，找到"),n("a",Ns,[s("v2.16.3"),e(a)]),s("这个版本，选择下载"),n("a",Cs,[s("helm-v2.16.3-linux-amd64.tar.gz"),e(a)])]),qs,n("p",null,[e(i,{to:"/gulimall/code/8.1.8.1.html"},{default:o(()=>[s("点击查看"),Ds,s("文件")]),_:1})]),n("p",null,[e(i,{to:"/gulimall/code/8.1.8.2.html"},{default:o(()=>[s("点击查看完整命令")]),_:1})]),Gs,n("p",null,[n("a",Ls,[s("kubesphere-minimal.yaml在线文件"),e(a)])]),Ms,n("p",null,[e(i,{to:"/gulimall/code/8.1.9.1.html"},{default:o(()=>[s("点击查看完整命令和完整截图")]),_:1})]),Os,Us,n("p",null,[n("a",Ks,[s("安装 Metrics-server 开启 HPA | KubeSphere Documents"),e(a)])]),Fs,n("p",null,[e(i,{to:"/gulimall/code/8.1.9.2.html"},{default:o(()=>[s("点击查看完整"),js,s("文件")]),_:1})]),Vs,n("p",null,[n("a",Bs,[s("多租户管理快速入门 | KubeSphere Documents"),e(a)])]),n("p",null,[e(i,{to:"/gulimall/code%5C%E5%A4%9A%E7%A7%9F%E6%88%B7%E7%AE%A1%E7%90%86%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8.html"},{default:o(()=>[s("多租户管理快速入门 | 离线版")]),_:1})]),Ys,n("p",null,[n("a",Hs,[s("创建 Wordpress 应用并发布至 Kubernetes | KubeSphere Documents"),e(a)])]),Ws,n("p",null,[s("可以配置的环境变量在 "),n("a",$s,[s("docker hub"),e(a)]),s(" 上有显示，上面会告诉我们可以配置哪些环境变量")]),Xs,n("p",null,[e(i,{to:"/gulimall/code/8.2.3.html"},{default:o(()=>[s("点击查看完整过程")]),_:1})]),Qs,Js,Zs])}const ie=c(r,[["render",ne],["__file","cluster.html.vue"]]);export{ie as default};
