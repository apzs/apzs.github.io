const e=JSON.parse('{"key":"v-f6412786","path":"/front-advance/vue/2.vue3.html","title":"1. Vue3简介","lang":"zh-CN","frontmatter":{"description":"1. Vue3简介 2020年9月18日，Vue.js发布版3.0版本，代号：One Piece（n 经历了：4800+次提交、40+个RFC、600+次PR、300+贡献者 官方发版地址：Release v3.0.0 One Piece · vuejs/core","head":[["meta",{"property":"og:url","content":"https://apzs.github.io/front-advance/vue/2.vue3.html"}],["meta",{"property":"og:site_name","content":"apzs"}],["meta",{"property":"og:title","content":"1. Vue3简介"}],["meta",{"property":"og:description","content":"1. Vue3简介 2020年9月18日，Vue.js发布版3.0版本，代号：One Piece（n 经历了：4800+次提交、40+个RFC、600+次PR、300+贡献者 官方发版地址：Release v3.0.0 One Piece · vuejs/core"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-05T06:05:15.000Z"}],["meta",{"property":"article:author","content":"apzs"}],["meta",{"property":"article:modified_time","content":"2024-03-05T06:05:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1. Vue3简介\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-05T06:05:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"apzs\\",\\"url\\":\\"https://apzs.eu.org\\"}]}"]]},"headers":[{"level":2,"title":"1.1. 【性能的提升】","slug":"_1-1-【性能的提升】","link":"#_1-1-【性能的提升】","children":[]},{"level":2,"title":"1.2.【 源码的升级】","slug":"_1-2-【-源码的升级】","link":"#_1-2-【-源码的升级】","children":[]},{"level":2,"title":"1.3. 【拥抱TypeScript】","slug":"_1-3-【拥抱typescript】","link":"#_1-3-【拥抱typescript】","children":[]},{"level":2,"title":"1.4. 【新的特性】","slug":"_1-4-【新的特性】","link":"#_1-4-【新的特性】","children":[]},{"level":2,"title":"2.1. 【基于 vue-cli 创建】(不推荐)","slug":"_2-1-【基于-vue-cli-创建】-不推荐","link":"#_2-1-【基于-vue-cli-创建】-不推荐","children":[]},{"level":2,"title":"2.2. 【基于 vite 创建】(推荐)","slug":"_2-2-【基于-vite-创建】-推荐","link":"#_2-2-【基于-vite-创建】-推荐","children":[]},{"level":2,"title":"2.3. 【一个简单的效果】","slug":"_2-3-【一个简单的效果】","link":"#_2-3-【一个简单的效果】","children":[]},{"level":2,"title":"3.1.  【OptionsAPI 与 CompositionAPI】","slug":"_3-1-【optionsapi-与-compositionapi】","link":"#_3-1-【optionsapi-与-compositionapi】","children":[{"level":3,"title":"Options API 的弊端","slug":"options-api-的弊端","link":"#options-api-的弊端","children":[]},{"level":3,"title":"Composition API 的优势","slug":"composition-api-的优势","link":"#composition-api-的优势","children":[]}]},{"level":2,"title":"3.2. 【拉开序幕的 setup】","slug":"_3-2-【拉开序幕的-setup】","link":"#_3-2-【拉开序幕的-setup】","children":[{"level":3,"title":"setup 概述","slug":"setup-概述","link":"#setup-概述","children":[]},{"level":3,"title":"setup 的返回值","slug":"setup-的返回值","link":"#setup-的返回值","children":[]},{"level":3,"title":"setup 与 Options API 的关系","slug":"setup-与-options-api-的关系","link":"#setup-与-options-api-的关系","children":[]},{"level":3,"title":"setup 语法糖","slug":"setup-语法糖","link":"#setup-语法糖","children":[]}]},{"level":2,"title":"4.1. 【ref 创建：基本类型的响应式数据】","slug":"_4-1-【ref-创建-基本类型的响应式数据】","link":"#_4-1-【ref-创建-基本类型的响应式数据】","children":[]},{"level":2,"title":"4.2. 【reactive 创建：对象类型的响应式数据】","slug":"_4-2-【reactive-创建-对象类型的响应式数据】","link":"#_4-2-【reactive-创建-对象类型的响应式数据】","children":[]},{"level":2,"title":"4.3. 【ref 创建：对象类型的响应式数据】","slug":"_4-3-【ref-创建-对象类型的响应式数据】","link":"#_4-3-【ref-创建-对象类型的响应式数据】","children":[]},{"level":2,"title":"4.4. 【ref 对比 reactive】","slug":"_4-4-【ref-对比-reactive】","link":"#_4-4-【ref-对比-reactive】","children":[]},{"level":2,"title":"4.5. 【toRefs 与 toRef】","slug":"_4-5-【torefs-与-toref】","link":"#_4-5-【torefs-与-toref】","children":[]},{"level":2,"title":"4.6.【customRef】自定义ref实现防抖","slug":"_4-6-【customref】自定义ref实现防抖","link":"#_4-6-【customref】自定义ref实现防抖","children":[]},{"level":2,"title":"5.1. 【computed】","slug":"_5-1-【computed】","link":"#_5-1-【computed】","children":[]},{"level":2,"title":"5.2.【watch】","slug":"_5-2-【watch】","link":"#_5-2-【watch】","children":[{"level":3,"title":"* 情况一","slug":"情况一","link":"#情况一","children":[]},{"level":3,"title":"* 情况二","slug":"情况二","link":"#情况二","children":[]},{"level":3,"title":"*  情况三","slug":"情况三","link":"#情况三","children":[]},{"level":3,"title":"* 情况四","slug":"情况四","link":"#情况四","children":[]},{"level":3,"title":"* 情况五","slug":"情况五","link":"#情况五","children":[]}]},{"level":2,"title":"5.3. 【watchEffect】","slug":"_5-3-【watcheffect】","link":"#_5-3-【watcheffect】","children":[]},{"level":2,"title":"5.4. 【标签的 ref 属性】","slug":"_5-4-【标签的-ref-属性】","link":"#_5-4-【标签的-ref-属性】","children":[]},{"level":2,"title":"5.5. 【defineExpose 定义暴露】","slug":"_5-5-【defineexpose-定义暴露】","link":"#_5-5-【defineexpose-定义暴露】","children":[]},{"level":2,"title":"5.6. 【props】","slug":"_5-6-【props】","link":"#_5-6-【props】","children":[]},{"level":2,"title":"5.7. 【生命周期】","slug":"_5-7-【生命周期】","link":"#_5-7-【生命周期】","children":[]},{"level":2,"title":"5.8. 【自定义hook】","slug":"_5-8-【自定义hook】","link":"#_5-8-【自定义hook】","children":[]},{"level":2,"title":"5.9. 【nextTick更新DOM后再执行】","slug":"_5-9-【nexttick更新dom后再执行】","link":"#_5-9-【nexttick更新dom后再执行】","children":[]},{"level":2,"title":"6.1. 【对路由的理解】","slug":"_6-1-【对路由的理解】","link":"#_6-1-【对路由的理解】","children":[]},{"level":2,"title":"6.2. 【基本切换效果】","slug":"_6-2-【基本切换效果】","link":"#_6-2-【基本切换效果】","children":[]},{"level":2,"title":"6.3. 【两个注意点】","slug":"_6-3-【两个注意点】","link":"#_6-3-【两个注意点】","children":[]},{"level":2,"title":"6.4.【路由器工作模式】","slug":"_6-4-【路由器工作模式】","link":"#_6-4-【路由器工作模式】","children":[]},{"level":2,"title":"6.5. 【to的两种写法】","slug":"_6-5-【to的两种写法】","link":"#_6-5-【to的两种写法】","children":[]},{"level":2,"title":"6.6. 【命名路由】","slug":"_6-6-【命名路由】","link":"#_6-6-【命名路由】","children":[]},{"level":2,"title":"6.7. 【嵌套路由】","slug":"_6-7-【嵌套路由】","link":"#_6-7-【嵌套路由】","children":[]},{"level":2,"title":"6.8. 【路由传参】","slug":"_6-8-【路由传参】","link":"#_6-8-【路由传参】","children":[{"level":3,"title":"query参数","slug":"query参数","link":"#query参数","children":[]},{"level":3,"title":"params参数","slug":"params参数","link":"#params参数","children":[]}]},{"level":2,"title":"6.9. 【路由的props配置】","slug":"_6-9-【路由的props配置】","link":"#_6-9-【路由的props配置】","children":[]},{"level":2,"title":"6.10. 【meta 路由额外信息】","slug":"_6-10-【meta-路由额外信息】","link":"#_6-10-【meta-路由额外信息】","children":[]},{"level":2,"title":"6.11. 【重定向】","slug":"_6-11-【重定向】","link":"#_6-11-【重定向】","children":[]},{"level":2,"title":"6.12. 【 replace属性】","slug":"_6-12-【-replace属性】","link":"#_6-12-【-replace属性】","children":[]},{"level":2,"title":"6.13. 【编程式导航】","slug":"_6-13-【编程式导航】","link":"#_6-13-【编程式导航】","children":[{"level":3,"title":"push和replace","slug":"push和replace","link":"#push和replace","children":[]},{"level":3,"title":"路由的前进与后退","slug":"路由的前进与后退","link":"#路由的前进与后退","children":[]}]},{"level":2,"title":"6.14 动态路由","slug":"_6-14-动态路由","link":"#_6-14-动态路由","children":[{"level":3,"title":"添加路由","slug":"添加路由","link":"#添加路由","children":[]},{"level":3,"title":"删除路由","slug":"删除路由","link":"#删除路由","children":[]},{"level":3,"title":"添加嵌套路由","slug":"添加嵌套路由","link":"#添加嵌套路由","children":[]},{"level":3,"title":"查看现有路由","slug":"查看现有路由","link":"#查看现有路由","children":[]}]},{"level":2,"title":"6.15 路由守卫","slug":"_6-15-路由守卫","link":"#_6-15-路由守卫","children":[{"level":3,"title":"全局前置守卫","slug":"全局前置守卫","link":"#全局前置守卫","children":[]},{"level":3,"title":"全局解析守卫","slug":"全局解析守卫","link":"#全局解析守卫","children":[]},{"level":3,"title":"全局后置钩子","slug":"全局后置钩子","link":"#全局后置钩子","children":[]},{"level":3,"title":"路由独享的守卫","slug":"路由独享的守卫","link":"#路由独享的守卫","children":[]},{"level":3,"title":"组件内的守卫","slug":"组件内的守卫","link":"#组件内的守卫","children":[]},{"level":3,"title":"完整的导航解析流程","slug":"完整的导航解析流程","link":"#完整的导航解析流程","children":[]}]},{"level":2,"title":"缓存组件","slug":"缓存组件","link":"#缓存组件","children":[{"level":3,"title":"基本使用","slug":"基本使用","link":"#基本使用","children":[]},{"level":3,"title":"包含/排除","slug":"包含-排除","link":"#包含-排除","children":[]},{"level":3,"title":"最大缓存实例数","slug":"最大缓存实例数","link":"#最大缓存实例数","children":[]},{"level":3,"title":"缓存实例的生命周期","slug":"缓存实例的生命周期","link":"#缓存实例的生命周期","children":[]}]},{"level":2,"title":"缓存路由","slug":"缓存路由","link":"#缓存路由","children":[{"level":3,"title":"RouterView 插槽","slug":"routerview-插槽","link":"#routerview-插槽","children":[]},{"level":3,"title":"KeepAlive & Transition","slug":"keepalive-transition","link":"#keepalive-transition","children":[]},{"level":3,"title":"传递 props 和插槽","slug":"传递-props-和插槽","link":"#传递-props-和插槽","children":[]},{"level":3,"title":"模板引用","slug":"模板引用","link":"#模板引用","children":[]}]},{"level":2,"title":"7.1【准备一个效果】","slug":"_7-1【准备一个效果】","link":"#_7-1【准备一个效果】","children":[]},{"level":2,"title":"7.2【搭建 pinia 环境】","slug":"_7-2【搭建-pinia-环境】","link":"#_7-2【搭建-pinia-环境】","children":[]},{"level":2,"title":"7.3【存储+读取数据】","slug":"_7-3【存储-读取数据】","link":"#_7-3【存储-读取数据】","children":[]},{"level":2,"title":"7.4.【修改数据】(三种方式)","slug":"_7-4-【修改数据】-三种方式","link":"#_7-4-【修改数据】-三种方式","children":[]},{"level":2,"title":"7.5.【storeToRefs】","slug":"_7-5-【storetorefs】","link":"#_7-5-【storetorefs】","children":[]},{"level":2,"title":"7.6.【getters】","slug":"_7-6-【getters】","link":"#_7-6-【getters】","children":[]},{"level":2,"title":"7.7.【$subscribe】","slug":"_7-7-【-subscribe】","link":"#_7-7-【-subscribe】","children":[]},{"level":2,"title":"7.8. 【store组合式写法】","slug":"_7-8-【store组合式写法】","link":"#_7-8-【store组合式写法】","children":[]},{"level":2,"title":"① 父传子","slug":"_1-父传子","link":"#_1-父传子","children":[]},{"level":2,"title":"② 子传父","slug":"_2-子传父","link":"#_2-子传父","children":[]},{"level":2,"title":"③ 定义暴露属性和方法（非常常用）","slug":"_3-定义暴露属性和方法-非常常用","link":"#_3-定义暴露属性和方法-非常常用","children":[{"level":3,"title":"父组件获取并修改子组件数据和方法","slug":"父组件获取并修改子组件数据和方法","link":"#父组件获取并修改子组件数据和方法","children":[]},{"level":3,"title":"子组件获取并修改父组件属性和方法","slug":"子组件获取并修改父组件属性和方法","link":"#子组件获取并修改父组件属性和方法","children":[]}]},{"level":2,"title":"④ 全局事件总线","slug":"_4-全局事件总线","link":"#_4-全局事件总线","children":[]},{"level":2,"title":"⑤ v-model父子组件通讯","slug":"_5-v-model父子组件通讯","link":"#_5-v-model父子组件通讯","children":[{"level":3,"title":"传统父子组件通讯方式","slug":"传统父子组件通讯方式","link":"#传统父子组件通讯方式","children":[]},{"level":3,"title":"v-model方式","slug":"v-model方式","link":"#v-model方式","children":[]},{"level":3,"title":"v-model绑定多个数据","slug":"v-model绑定多个数据","link":"#v-model绑定多个数据","children":[]}]},{"level":2,"title":"⑥ useAttrs（扩充原组件功能）","slug":"_6-useattrs-扩充原组件功能","link":"#_6-useattrs-扩充原组件功能","children":[]},{"level":2,"title":"⑦ provide 与 inject（隔代组件通讯）","slug":"_7-provide-与-inject-隔代组件通讯","link":"#_7-provide-与-inject-隔代组件通讯","children":[]},{"level":2,"title":"⑧ Pinia（组合式）","slug":"_8-pinia-组合式","link":"#_8-pinia-组合式","children":[]},{"level":2,"title":"⑧ 插槽","slug":"_8-插槽","link":"#_8-插槽","children":[{"level":3,"title":"默认插槽","slug":"默认插槽","link":"#默认插槽","children":[]},{"level":3,"title":"具名插槽","slug":"具名插槽","link":"#具名插槽","children":[]},{"level":3,"title":"作用域插槽","slug":"作用域插槽","link":"#作用域插槽","children":[]}]},{"level":2,"title":"9.1、动态加载组件","slug":"_9-1、动态加载组件","link":"#_9-1、动态加载组件","children":[]},{"level":2,"title":"9.2、异步加载组件","slug":"_9-2、异步加载组件","link":"#_9-2、异步加载组件","children":[]},{"level":2,"title":"10.1. 【Teleport】组件指定位置","slug":"_10-1-【teleport】组件指定位置","link":"#_10-1-【teleport】组件指定位置","children":[]},{"level":2,"title":"10.2.【全局API转移到应用对象】","slug":"_10-2-【全局api转移到应用对象】","link":"#_10-2-【全局api转移到应用对象】","children":[]},{"level":2,"title":"10.3.【其他】","slug":"_10-3-【其他】","link":"#_10-3-【其他】","children":[]},{"level":2,"title":"11.1.【shallowRef 与 shallowReactive 】","slug":"_11-1-【shallowref-与-shallowreactive-】","link":"#_11-1-【shallowref-与-shallowreactive-】","children":[{"level":3,"title":"shallowRef","slug":"shallowref","link":"#shallowref","children":[]},{"level":3,"title":"shallowReactive","slug":"shallowreactive","link":"#shallowreactive","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"11.2.【readonly 与 shallowReadonly】","slug":"_11-2-【readonly-与-shallowreadonly】","link":"#_11-2-【readonly-与-shallowreadonly】","children":[{"level":3,"title":"readonly","slug":"readonly","link":"#readonly","children":[]},{"level":3,"title":"shallowReadonly","slug":"shallowreadonly","link":"#shallowreadonly","children":[]}]},{"level":2,"title":"11.3.【toRaw 与 markRaw】","slug":"_11-3-【toraw-与-markraw】","link":"#_11-3-【toraw-与-markraw】","children":[{"level":3,"title":"toRaw","slug":"toraw","link":"#toraw","children":[]},{"level":3,"title":"markRaw","slug":"markraw","link":"#markraw","children":[]}]}],"git":{"createdTime":1708674856000,"updatedTime":1709618715000,"contributors":[{"name":"zhaoshuo","email":"apzs@foxmaill.com","commits":2}]},"readingTime":{"minutes":70.44,"words":21132},"filePathRelative":"front-advance/vue/2.vue3.md","localizedDate":"2024年2月23日","excerpt":"<h1> 1. Vue3简介</h1>\\n<ul>\\n<li>2020年9月18日，<code>Vue.js</code>发布版<code>3.0</code>版本，代号：<code>One Piece</code>（n</li>\\n<li>经历了：<a href=\\"https://github.com/vuejs/core/commits/main\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">4800+次提交</a>、<a href=\\"https://github.com/vuejs/rfcs/tree/master/active-rfcs\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">40+个RFC</a>、<a href=\\"https://github.com/vuejs/vue-next/pulls?q=is%3Apr+is%3Amerged+-author%3Aapp%2Fdependabot-preview+\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">600+次PR</a>、<a href=\\"https://github.com/vuejs/core/graphs/contributors\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">300+贡献者</a></li>\\n<li>官方发版地址：<a href=\\"https://github.com/vuejs/core/releases/tag/v3.0.0\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Release v3.0.0 One Piece · vuejs/core</a></li>\\n</ul>","autoDesc":true}');export{e as data};
