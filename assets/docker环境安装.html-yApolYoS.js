import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as a,c as n,e as s}from"./app-db_OQQsY.js";const i={},d=s(`<h1 id="一、安装准备" tabindex="-1"><a class="header-anchor" href="#一、安装准备" aria-hidden="true">#</a> 一、安装准备</h1><h2 id="_1、前提条件" tabindex="-1"><a class="header-anchor" href="#_1、前提条件" aria-hidden="true">#</a> 1、前提条件</h2><ul><li><p>Docker可以运行在Windows、Mac、CentOS、Ubuntu等操作系统上</p></li><li><p>Docker支持以下的CentOS版本：</p></li><li><ul><li>CentOS 7 (64-bit)</li><li>CentOS 6.5 (64-bit) 或更高的版本</li></ul></li><li><p>目前，CentOS 仅发行版本中的内核支持 Docker</p></li><li><ul><li>Docker 运行在 CentOS 7 上，要求系统为64位、系统内核版本为 3.10 以上。</li><li>Docker 运行在 CentOS-6.5 或更高的版本的 CentOS 上，要求系统为64位、系统内核版本为 2.6.32-431 或者更高版本。</li></ul></li></ul><h2 id="_2、查看系统内核" tabindex="-1"><a class="header-anchor" href="#_2、查看系统内核" aria-hidden="true">#</a> 2、查看系统内核</h2><p>uname命令用于打印当前系统相关信息（内核版本号、硬件架构、主机名称和操作系统类型等）。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">uname</span> <span class="token parameter variable">-r</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3、查看已安装的centos版本信息" tabindex="-1"><a class="header-anchor" href="#_3、查看已安装的centos版本信息" aria-hidden="true">#</a> 3、查看已安装的CentOS版本信息</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">cat</span> /etc/redhat-release
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h1 id="二、centos7安装docker" tabindex="-1"><a class="header-anchor" href="#二、centos7安装docker" aria-hidden="true">#</a> 二、CentOS7安装docker</h1><p>官网：http://www.docker.com</p><p>安装手册：https://docs.docker.com/install/linux/docker-ce/centos（CE-社区版）</p><h2 id="_1、安装需要的软件包" tabindex="-1"><a class="header-anchor" href="#_1、安装需要的软件包" aria-hidden="true">#</a> 1、安装需要的软件包</h2><p>yy -utils提供了yy-config-manager相关功能，device-mapper-persistent-data和lvm2是设备映射器驱动程序所需要的。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils <span class="token punctuation">\\</span>
               device-mapper-persistent-data <span class="token punctuation">\\</span>
               lvm2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、设置docker下载镜像" tabindex="-1"><a class="header-anchor" href="#_2、设置docker下载镜像" aria-hidden="true">#</a> 2、设置docker下载镜像</h2><p>推荐阿里云下载地址</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3、更新yum软件包索引" tabindex="-1"><a class="header-anchor" href="#_3、更新yum软件包索引" aria-hidden="true">#</a> 3、更新yum软件包索引</h2><p>我们在更新或配置yum源之后，通常都会使用yum makecache 生成缓存，这个命令是将软件包信息提前在本地缓存一份，用来提高搜索安装软件的速度</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum makecache fast
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_4、安装docker-ce" tabindex="-1"><a class="header-anchor" href="#_4、安装docker-ce" aria-hidden="true">#</a> 4、安装docker ce</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token parameter variable">-y</span> docker-ce
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_5、启动docker" tabindex="-1"><a class="header-anchor" href="#_5、启动docker" aria-hidden="true">#</a> 5、启动docker</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl start <span class="token function">docker</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_6、版本验证" tabindex="-1"><a class="header-anchor" href="#_6、版本验证" aria-hidden="true">#</a> 6、版本验证</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> version
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_7、设置开机启动" tabindex="-1"><a class="header-anchor" href="#_7、设置开机启动" aria-hidden="true">#</a> 7、设置开机启动</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#查看服务是否自动启动（是：enabled | 否：disabled）</span>
systemctl list-unit-files<span class="token operator">|</span><span class="token function">grep</span> docker.service 

<span class="token comment">#设置开机启动：如不是enabled可以运行如下命令设置自启动</span>
systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span>
<span class="token comment">#重新加载服务配置</span>
systemctl daemon-reload 

<span class="token comment">#如果希望不进行自启动，运行如下命令设置</span>
systemctl disable <span class="token function">docker</span>
<span class="token comment">#重新加载服务配置</span>
systemctl daemon-reload 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="三、卸载" tabindex="-1"><a class="header-anchor" href="#三、卸载" aria-hidden="true">#</a> 三、卸载</h1><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl stop docker 
yum remove -y docker-ce
rm -rf /var/lib/docker
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,30),r=[d];function c(l,t){return a(),n("div",null,r)}const h=e(i,[["render",c],["__file","docker环境安装.html.vue"]]);export{h as default};
