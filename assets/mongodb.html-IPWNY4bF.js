import{_ as p}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as o,o as i,c as l,a as n,b as s,d as t,e}from"./app-db_OQQsY.js";const c={},u=n("h1",{id:"mongodb快速上手",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#mongodb快速上手","aria-hidden":"true"},"#"),s(" MongoDB快速上手")],-1),r=n("p",null,"MongoDB用起来 - 快速上手&集群和安全系列",-1),d={href:"https://www.mongodb.com/docs/manual/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.mongodb.com/try/download/shell",target:"_blank",rel:"noopener noreferrer"},m=e('<figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230228163108844.png" alt="image-20230228163108844" tabindex="0" loading="lazy"><figcaption>image-20230228163108844</figcaption></figure><h1 id="课程目标" tabindex="-1"><a class="header-anchor" href="#课程目标" aria-hidden="true">#</a> 课程目标</h1><ul><li><p>理解MongoDB的业务场景、熟悉MongoDB的简介、特点和体系结构、数据类型等。</p></li><li><p>能够在Windows和Linux下安装和启动MongoDB、图形化管理界面Compass的安装使用</p></li><li><p>掌握MongoDB基本常用命令实现数据的CRUD</p></li><li><p>掌握MongoDB的索引类型、索引管理、执行计划。</p></li><li><p>使用Spring Data MongoDB完成文章评论业务的开发</p></li></ul><h1 id="_1-mongodb相关概念" tabindex="-1"><a class="header-anchor" href="#_1-mongodb相关概念" aria-hidden="true">#</a> 1 MongoDB相关概念</h1><h2 id="_1-1-业务应用场景" tabindex="-1"><a class="header-anchor" href="#_1-1-业务应用场景" aria-hidden="true">#</a> 1.1 业务应用场景</h2><p>传统的关系型数据库（如MySQL），在数据操作的&quot;三高&quot;需求以及应对Web2.0的网站需求面前，显得力不从心。</p><p>解释：&quot;三高&quot;需求：</p><ul><li><p>High performance - 对数据库高并发读写的需求。</p></li><li><p>Huge Storage - 对海量数据的高效率存储和访问的需求。</p></li><li><p>High Scalability &amp;&amp; High Availability - 对数据库的高可扩展性和高可用性的需求。</p></li></ul><p><strong>而MongoDB可应对&quot;三高&quot;需求。</strong></p><p>具体的应用场景如：</p><ol><li><p>社交场景，使用 MongoDB存储存储用户信息，以及用户发表的朋友圈信息，通过地理位置索引实现附近的人、地点等功能。</p></li><li><p>游戏场景，使用 MongoDB存储游戏用户信息，用户的装备、积分等直接以内嵌文档的形式存储，方便查询、高效率存储和访问。</p></li><li><p>物流场景，使用 MongoDB存储订单信息，订单状态在运送过程中会不断更新，以 MongoDB 内嵌数组的形式来存储，一次查询就能将订单所有的变更读取出来。</p></li><li><p>物联网场景，使用 MongoDB存储所有接入的智能设备信息，以及设备汇报的日志信息，并对这些信息进行多维度的分析。</p></li><li><p>视频直播，使用 MongoDB 存储用户信息、点赞互动信息等。</p></li></ol><p>这些应用场景中，数据操作方面的共同特点是：</p><ol><li><p>数据量大</p></li><li><p>写入操作频繁（读写都很频繁）</p></li><li><p>价值较低的数据，对事务性要求不高</p></li></ol><p>对于这样的数据，我们更适合使用MongoDB来实现数据的存储。</p><p><strong>什么时候选择MongoDB</strong></p><p>在架构选型上，除了上述的三个特点外，如果你还犹豫是否要选择它？可以考虑以下的一些问题：应用不需要事务及复杂 join 支持</p><p>新应用，需求会变，数据模型无法确定，想快速迭代开发</p><p>应用需要2000-3000以上的读写QPS（更高也可以）</p><p>应用需要 TB 甚至 PB 级别数据存储</p><p>应用发展迅速，需要能快速水平扩展</p><p>应用要求存储的数据不丢失</p><p>应用需要99.999%高可用</p><p>应用需要大量的地理位置查询、文本查询</p><p>如果上述有1个符合，可以考虑 MongoDB，2个及以上的符合，选择 MongoDB绝不会后悔。</p><p>思考：如果用MySQL呢？</p><p>答：相对MySQL，可以以更低的成本解决问题（包括学习、开发、运维等成本）</p><h2 id="_1-2-mongodb简介" tabindex="-1"><a class="header-anchor" href="#_1-2-mongodb简介" aria-hidden="true">#</a> 1.2 MongoDB简介</h2><p>MongoDB是一个开源、高性能、无模式的文档型数据库，当初的设计就是用于简化开发和方便扩展，是NoSQL数据库产品中的一种。是像关系型数据库（MySQL）的非关系型数据库。</p><p>它支持的数据结构非常松散，是一种类似于 JSON 的格式叫BSON，所以它既可以存储比较复杂的数据类型，又相当的灵活。</p><p>MongoDB中的记录是一个文档，它是一个由字段和值对（field:value）组成的数据结构MongoDB文档类似于JSON对象，即一个文档认为就是一个对象。字段的数据类型是字符型，它的值除了使用基本的一些类型外，还可以包括其他文档、普通数组和文档数组。</p><h2 id="_1-3-体系结构" tabindex="-1"><a class="header-anchor" href="#_1-3-体系结构" aria-hidden="true">#</a> 1.3 体系结构</h2><p>MySQL和MongoDB对比</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230226104953067.png" alt="image-20230226104953067" tabindex="0" loading="lazy"><figcaption>image-20230226104953067</figcaption></figure><table><thead><tr><th>SQL术语/概念</th><th>MongoDB术语/概念</th><th>解释/说明</th></tr></thead><tbody><tr><td>database</td><td>database</td><td>数据库</td></tr><tr><td>table</td><td>collection</td><td>数据库表/集合</td></tr><tr><td>row</td><td>document</td><td>数据记录行/文档</td></tr><tr><td>column</td><td>field</td><td>数据字段/域</td></tr><tr><td>index</td><td>index</td><td>索引</td></tr><tr><td>table joins</td><td></td><td>表连接,MongoDB不支持</td></tr><tr><td></td><td>嵌入文档</td><td>MongoDB通过嵌入式文档来替代多表连接</td></tr><tr><td>primary key</td><td>primary key</td><td>主键,MongoDB自动将_id字段设置为主键</td></tr></tbody></table><h2 id="_1-4-数据模型" tabindex="-1"><a class="header-anchor" href="#_1-4-数据模型" aria-hidden="true">#</a> 1.4 数据模型</h2><p>MongoDB的小存储单位就是文档(document)对象。文档(document)对象对应于关系型数据库的行。数据在MongoDB中以BSON（Binary-JSON）文档的格式存储在磁盘上。</p><p>BSON（Binary Serialized DocumentFormat）是一种类json的一种二进制形式的存储格式，简称Binary JSON。BSON和JSON一样，支持内嵌的文档对象和数组对象，但是BSON有JSON没有的一些数据类型，如Date和BinData类型。</p><p>BSON采用了类似于 C 语言结构体的名称、对表示方法，支持内嵌的文档对象和数组对象，具有轻量性、可遍历性、高效性的三个特点，可以有效描述非结构化数据和结构化数据。这种格式的优点是灵活性高，但它的缺点是空间利用率不是很理想。</p><p>Bson中，除了基本的JSON类型：string,integer,boolean,double,null,array和object，mongo还使用了特殊的数据类型。这些类型包括date,object id,binary data,regular expression 和code。每一个驱动都以特定语言的方式实现了这些类型，查看你的驱动的文档来获取详细信息。</p><p>BSON数据类型参考列表：</p>',40),v=n("table",null,[n("thead",null,[n("tr",null,[n("th",null,"数据类型"),n("th",null,"描述"),n("th",null,"举例")])]),n("tbody",null,[n("tr",{"x:foobar":""},[n("td",null,"字符串"),n("td",null,"UTF-8字符串都可表示为字符串类型的数据"),n("td")]),n("tr",{"X:ObjectId()":""},[n("td",null,"对象id"),n("td",null,"对象id是文档的12字节的唯一 ID"),n("td")]),n("tr",null,[n("td",null,"布尔值"),n("td",null,"真或者假：true或者false"),n("td",null,'{"x":true}+')]),n("tr",{"x：[a,b,c]":""},[n("td",null,"数组"),n("td",null,"值的集合或者列表可以表示成数组"),n("td")]),n("tr",null,[n("td",null,"32位整数"),n("td",null,"类型不可用。JavaScript仅支持64位浮点数，所以32位整数会被自动转换。"),n("td",null,"shell是不支持该类型的，shell中默认会转换成64 位浮点数")]),n("tr",null,[n("td",null,"64位整数"),n("td",null,"不支持这个类型。shell会使用一个特殊的内嵌文档来显示64位整数"),n("td",null,"shell是不支持该类型的，shell中默认会转换成64 位浮点数")]),n("tr",{"x：3.14159，y：3":""},[n("td",null,"64位浮点数"),n("td",null,"shell中的数字就是这一种类型"),n("td")]),n("tr",{"x:null":""},[n("td",null,"null"),n("td",null,"表示空值或者未定义的对象"),n("td")]),n("tr",{"x:undefined":""},[n("td",null,"undefined"),n("td",null,"文档中也可以使用未定义类型"),n("td")]),n("tr",null,[n("td",null,"符号"),n("td",null,"shell不支持，shell会将数据库中的符号类型的数据自动转换成字符串"),n("td")]),n("tr",{"x：foobari":""},[n("td",null,"正则表达式"),n("td",null,"文档中可以包含正则表达式，采用JavaScript的正则表达式语法"),n("td")]),n("tr",null,[n("td",null,"代码"),n("td",null,"文档中还可以包含JavaScript代码"),n("td",null,'{"x" ： function() { /* …… */ }}')]),n("tr",null,[n("td",null,"二进制数据"),n("td",null,"二进制数据可以由任意字节的串组成，不过shell中无法使用"),n("td")]),n("tr",null,[n("td",null,"大值/ 小值"),n("td",null,"BSON包括一个特殊类型，表示可能的 大值。shell中没有这个类型。"),n("td")])])],-1),b=n("blockquote",{"x:NumberLong(3)":""},[n("p",null,"提示："),n("p",null,'shell默认使用64位浮点型数值。{"x"：3.14}或{"x"：3}。对于整型值，可以使用NumberInt（4字节符号整数）或NumberLong（8字节符号整数），{"x":NumberInt("3")}')],-1),g=e('<h2 id="_1-5-mongodb的特点" tabindex="-1"><a class="header-anchor" href="#_1-5-mongodb的特点" aria-hidden="true">#</a> 1.5 MongoDB的特点</h2><p>MongoDB主要有如下特点：</p><p><strong>(1) 高性能：</strong></p><p>MongoDB提供高性能的数据持久性。特别是,</p><p>对嵌入式数据模型的支持减少了数据库系统上的I/O活动。</p><p>索引支持更快的查询，并且可以包含来自嵌入式文档和数组的键。（文本索引解决搜索的需求、TTL索引解决历史数据自动过期的需求、地理位置索引可用于构建各种O2O 应用）</p><p>mmapv1、wiredtiger、mongorocks（rocksdb）、in-memory等多引擎支持满足各种场景需求。</p><p>Gridfs解决文件存储的需求。</p><p><strong>(2) 高可用性：</strong></p><p>MongoDB的复制工具称为副本集（replica set），它可提供自动故障转移和数据冗余。</p><p><strong>(3) 高扩展性：</strong></p><p>MongoDB提供了水平可扩展性作为其核心功能的一部分。</p><p>分片将数据分布在一组集群的机器上。（海量数据存储，服务能力水平扩展）</p><p>从3.4开始，MongoDB支持基于片键创建数据区域。在一个平衡的集群中，MongoDB将一个区域所覆盖的读写只定向到该区域内的那些片。</p><p><strong>(4) 丰富的查询支持：</strong></p><p>MongoDB支持丰富的查询语言，支持读和写操作(CRUD)，比如数据聚合、文本搜索和地理空间查询等。</p><p>**(5) 其他特点：**如无模式（动态模式）、灵活的文档模型、</p><h1 id="_2-单机部署" tabindex="-1"><a class="header-anchor" href="#_2-单机部署" aria-hidden="true">#</a> 2 单机部署</h1><h2 id="_2-1-windows系统中的安装启动" tabindex="-1"><a class="header-anchor" href="#_2-1-windows系统中的安装启动" aria-hidden="true">#</a> 2.1 Windows系统中的安装启动</h2><p><strong>第一步：下载安装包</strong></p>',20),q={href:"https://www.mongodb.com/try/download/community",target:"_blank",rel:"noopener noreferrer"},h=n("figure",null,[n("img",{src:"https://gitlab.com/apzs/image/-/raw/master/image/image-20230226112736264.png",alt:"image-20230226112736264",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20230226112736264")],-1),y=n("p",null,"根据上图所示下载 zip 包。",-1),f=n("p",null,"提示：版本的选择：",-1),_=n("p",null,"MongoDB的版本命名规范如：x.y.z；",-1),A=n("p",null,"y为奇数时表示当前版本为开发版，如：1.5.2、4.1.13； y为偶数时表示当前版本为稳定版，如：1.6.3、4.0.10； z是修正版本号，数字越大越好。",-1),x={href:"https://www.mongodb.com/docs/manual/release-notes/#release-version-numbers",target:"_blank",rel:"noopener noreferrer"},w=e(`<p><strong>第二步：解压安装启动</strong></p><p>将压缩包解压到一个目录中。</p><p>在解压目录中，手动建立一个目录用于存放数据文件，如<code>data/db</code></p><p><strong>方式1：命令行参数方式启动服务</strong></p><p>在<sub>bin</sub>目录中打开命令行提示符，输入如下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongod <span class="token parameter variable">--dbpath</span><span class="token operator">=</span><span class="token punctuation">..</span><span class="token punctuation">\\</span>data<span class="token punctuation">\\</span>db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>我们在启动信息中可以看到，mongoDB的默认端口是27017，如果我们想改变默认的启动端口，可以通过--port来指定端口。</p><p>为了方便我们每次启动，可以将安装目录的bin目录设置到环境变量的path中，<sub>bin</sub>目录下是一些常用命令，比如<sub>mongod</sub>启动服务用的，mongo客户端连接服务用的。</p><p><strong>方式2：配置文件方式启动服务</strong></p><p>在解压目录中新建 config 文件夹，该文件夹中新建配置文件 mongod.conf ，内如参考如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">storage</span><span class="token punctuation">:</span>
	<span class="token comment">#The directory where the mongod instance stores its data.Default Value is &quot;\\data\\db&quot; on Windows.</span>
	<span class="token key atrule">dbPath</span><span class="token punctuation">:</span> D<span class="token punctuation">:</span>\\02_Server\\DBServer\\mongodb<span class="token punctuation">-</span>win32<span class="token punctuation">-</span>x86_64<span class="token punctuation">-</span>2008plus<span class="token punctuation">-</span>ssl<span class="token punctuation">-</span>4.0.1\\data\\db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),D={href:"https://www.mongodb.com/docs/manual/reference/configuration-options/",target:"_blank",rel:"noopener noreferrer"},I=e(`<p>【注意】</p><p>1 ) 配置文件中如果使用双引号，比如路径地址，自动会将双引号的内容转义。如果不转义，则会报错：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>error-parsing-yaml-config-file-yaml-cpp-error-at-line-3-column-15-unknown-escape-character-d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>解决：</p><p>a. 对 <code>\\</code> 换成 <code>/</code> 或<code> \\\\</code></p><p>b. 如果路径中没有空格，则无需加引号。</p><p>2）配置文件中不能以Tab分割字段</p><p>解决： 将其转换成空格。</p><p>启动方式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongod <span class="token parameter variable">-f</span> <span class="token punctuation">..</span>/config/mongod.conf
<span class="token comment"># 或</span>
mongod <span class="token parameter variable">--config</span> <span class="token punctuation">..</span>/config/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更多参数配置：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
   <span class="token key atrule">destination</span><span class="token punctuation">:</span> file
   <span class="token comment">#The path of the log file to which mongod or mongos should send all diagnostic logging information</span>
   <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;D:/02_Server/DBServer/mongodb-win32-x86_64-2008plus-ssl-4.0.1/log/mongod.log&quot;</span>
   <span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
   <span class="token key atrule">journal</span><span class="token punctuation">:</span>
   <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
   <span class="token comment">#The directory where the mongod instance stores its data.Default Value is &quot;/data/db&quot;.</span>
   <span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;D:/02_Server/DBServer/mongodb-win32-x86_64-2008plus-ssl-4.0.1/data/db&quot;</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
   <span class="token comment">#bindIp: 127.0.0.1</span>
   <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27017</span>
<span class="token key atrule">setParameter</span><span class="token punctuation">:</span>
   <span class="token key atrule">enableLocalhostAuthBypass</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-2-shell连接-mongo命令" tabindex="-1"><a class="header-anchor" href="#_2-2-shell连接-mongo命令" aria-hidden="true">#</a> 2.2 Shell连接(mongo命令)</h2><p>新版的需要下载<code>MongoDB Shell</code></p><p>下载地址： https://www.mongodb.com/try/download/shell</p><p>安装文档：https://www.mongodb.com/docs/mongodb-shell/install/</p><p>连接文档：https://www.mongodb.com/docs/mongodb-shell/connect/</p>`,17),S={href:"https://www.mongodb.com/docs/mongodb-shell/connect/#connect-to-a-deployment-on-a-remote-host",target:"_blank",rel:"noopener noreferrer"},T=n("p",null,"To specify a remote host and port, you can use either:",-1),j={href:"https://www.mongodb.com/docs/manual/reference/connection-string/",target:"_blank",rel:"noopener noreferrer"},M=n("li",null,[s("The "),n("code",null,"--host"),s(" and "),n("code",null,"--port"),s(" command-line options. If you omit the "),n("code",null,"--port"),s(" option, "),n("code",null,"mongosh"),s(" uses the default port 27017.")],-1),B=e(`<p>For example, the following commands connect to a MongoDB deployment running on host <code>mongodb0.example.com</code> and port 28015:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mongosh &quot;mongodb://mongodb0.example.com:28015&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>mongosh --host mongodb0.example.com --port 28015
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><p>老版本的方法：</p><p>在命令提示符输入以下shell命令即可完成登陆</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongo
<span class="token comment"># 或</span>
mongo <span class="token parameter variable">--host</span><span class="token operator">=</span><span class="token number">127.0</span>.0.1 <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">27017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看已经有的数据库</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span>show databases
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>退出mongodb</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">exit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>更多参数可以通过帮助查看：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongo <span class="token parameter variable">--help</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>提示：</p><p>MongoDB javascript shell是一个基于javascript的解释器，故是支持js程序的。</p></blockquote><h2 id="_2-3-compass-图形化界面客户端" tabindex="-1"><a class="header-anchor" href="#_2-3-compass-图形化界面客户端" aria-hidden="true">#</a> 2.3 Compass-图形化界面客户端</h2><p>到MongoDB官网下载MongoDB Compass，（新版的不用下载）</p>`,16),C={href:"https://www.mongodb.com/docs/compass/current/",target:"_blank",rel:"noopener noreferrer"},N={href:"https://www.mongodb.com/try/download/compass",target:"_blank",rel:"noopener noreferrer"},R=e(`<p>如果是下载安装版，则按照步骤安装；如果是下载加压缩版，直接解压，执行里面的<code>MongoDBCompassCommunity.exe</code>文件即可。</p><p>在打开的界面中，输入主机地址、端口等相关信息，点击连接：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230227104752344.png" alt="image-20230227104752344" tabindex="0" loading="lazy"><figcaption>image-20230227104752344</figcaption></figure><h2 id="_2-4-linux系统中的安装启动和连接" tabindex="-1"><a class="header-anchor" href="#_2-4-linux系统中的安装启动和连接" aria-hidden="true">#</a> 2.4 Linux系统中的安装启动和连接</h2><p>目标：在Linux中部署一个单机的MongoDB，作为生产环境下使用。</p><p>提示：和Windows下操作差不多。</p><p>步骤如下：</p><p>（1）先到官网下载压缩包 mongod-linux-x86_64-4.0.10.tgz 。</p><p>（2）上传压缩包到Linux中，解压到当前目录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xvf</span> mongodb-linux-x86_64-4.0.10.tgz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（3）移动解压后的文件夹到指定的目录中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mv</span> mongodb-linux-x86_64-4.0.10 /usr/local/mongodb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（4）新建几个目录，分别用来存储数据和日志：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#数据存储目录</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/single/data/db
<span class="token comment">#日志存储目录</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/single/log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（5）新建并修改配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /mongodb/single/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置文件的内容如下：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
   <span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
   <span class="token comment">#The path of the log file to which mongod or mongos should send all diagnostic logging information</span>
   <span class="token key atrule">destination</span><span class="token punctuation">:</span> file
   <span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
   <span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/single/log/mongod.log&quot;</span>
   <span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
   <span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
   <span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
   <span class="token comment">##The directory where the mongod instance stores its data.Default Value is &quot;/data/db&quot;.</span>
   <span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/single/data/db&quot;</span>
   <span class="token key atrule">journal</span><span class="token punctuation">:</span>
      <span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
      <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
   <span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
   <span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
   <span class="token comment">#服务实例绑定的IP，默认是localhost</span>
   <span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
   <span class="token comment">#bindIp</span>
   <span class="token comment">#绑定的端口，默认是27017</span>
   <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（6）启动MongoDB服务</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost single<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongod -f /mongodb/single/mongod.conf</span>
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">90384</span>
child process started successfully, parent exiting
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意：</p><p>如果启动后不是 successfully ，则是启动失败了。原因基本上就是配置文件有问题。</p></blockquote><p>通过进程来查看服务是否启动了：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost single<span class="token punctuation">]</span><span class="token comment"># ps -ef |grep mongod</span>
root <span class="token number">90384</span> <span class="token number">1</span> <span class="token number">0</span> <span class="token number">8</span>月26 ? 00:02:13 /usr/local/mongdb/bin/mongod <span class="token parameter variable">-f</span> /mongodb/single/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>（7）分别使用mongo命令和compass工具来连接测试。</p><p>提示：如果远程连接不上，需要配置防火墙放行，或直接关闭linux防火墙</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#查看防火墙状态</span>
systemctl status firewalld
<span class="token comment">#临时关闭防火墙</span>
systemctl stop firewalld
<span class="token comment">#开机禁止启动防火墙</span>
systemctl disable firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（8）停止关闭服务</p><p>停止服务的方式有两种：快速关闭和标准关闭，下面依次说明：</p><p>（一）快速关闭方法（快速，简单，数据可能会出错）</p><p>目标：通过系统的kill命令直接杀死进程：</p><p>杀完要检查一下，避免有的没有杀掉。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#通过进程编号关闭节点</span>
<span class="token function">kill</span> <span class="token parameter variable">-2</span> <span class="token number">54410</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>【补充】</p><p>如果一旦是因为数据损坏，则需要进行如下操作（了解）：</p><p>1）删除lock文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-f</span> /mongodb/single/data/db/*.lock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2）修复数据：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongdb/bin/mongod <span class="token parameter variable">--repair</span> <span class="token parameter variable">--dbpath</span><span class="token operator">=</span>/mongodb/single/data/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（二）标准的关闭方法（数据不容易出错，但麻烦）：</p><p>目标：通过mongo客户端中的shutdownServer命令来关闭服务</p><p>主要的操作步骤参考如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//客户端登录服务，注意，这里通过localhost登录，如果需要远程登录，必须先登录认证才行。
mongo <span class="token parameter variable">--port</span> <span class="token number">27017</span>
//<span class="token comment">#切换到admin库</span>
use admin
//关闭服务
db.shutdownServer<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_3-基本常用命令" tabindex="-1"><a class="header-anchor" href="#_3-基本常用命令" aria-hidden="true">#</a> 3 基本常用命令</h1><h2 id="_3-1-案例需求" tabindex="-1"><a class="header-anchor" href="#_3-1-案例需求" aria-hidden="true">#</a> 3.1 案例需求</h2><p>存放文章评论的数据存放到MongoDB中，数据结构参考如下：</p><p>数据库：articledb</p><table><thead><tr><th>专栏文章评论</th><th>comment</th><th></th><th></th></tr></thead><tbody><tr><td>字段名称</td><td>字段含义</td><td>字段类型</td><td>备注</td></tr><tr><td>_id</td><td>ID</td><td>ObjectId或String</td><td>Mongo的主键的字段</td></tr><tr><td>articleid</td><td>文章ID</td><td>String</td><td></td></tr><tr><td>content</td><td>评论内容</td><td>String</td><td></td></tr><tr><td>userid</td><td>评论人ID</td><td>String</td><td></td></tr><tr><td>nickname</td><td>评论人昵称</td><td>String</td><td></td></tr><tr><td>createdatetime</td><td>评论的日期时间</td><td>Date</td><td></td></tr><tr><td>likenum</td><td>点赞数</td><td>Int32</td><td></td></tr><tr><td>replynum</td><td>回复数</td><td>Int32</td><td></td></tr><tr><td>state</td><td>状态</td><td>String</td><td>0：不可见；1：可见；</td></tr><tr><td>parentid</td><td>上级ID</td><td>String</td><td>如果为0表示文章的顶级评论</td></tr></tbody></table><h2 id="_3-2-数据库操作" tabindex="-1"><a class="header-anchor" href="#_3-2-数据库操作" aria-hidden="true">#</a> 3.2 数据库操作</h2><h3 id="_3-2-1-选择和创建数据库" tabindex="-1"><a class="header-anchor" href="#_3-2-1-选择和创建数据库" aria-hidden="true">#</a> 3.2.1 选择和创建数据库</h3><p>选择和创建数据库的语法格式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>use 数据库名称
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果数据库不存在则自动创建，例如，以下语句创建 articledb 数据库：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>use articledb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看有权限查看的所有的数据库命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>show dbs
<span class="token comment"># 或</span>
show databases
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>注意: 在 MongoDB 中，集合只有在内容插入后才会创建! 就是说，创建集合(数据表)后要再插入一个文档(记录)，集合才会真正创建。</p></blockquote><p>查看当前正在使用的数据库命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>MongoDB 中默认的数据库为 test，如果你没有选择数据库，集合将存放在 test 数据库中。</p><p>另外：</p><p>数据库名可以是满足以下条件的任意UTF-8字符串。</p><ul><li><p>不能是空字符串（&quot;&quot;)。</p></li><li><p>不得含有&#39; &#39;（空格)、.、$、/、\\和\\0 (空字符)。</p></li><li><p>应全部小写。</p></li><li><p>多64字节。</p></li></ul><p>有一些数据库名是保留的，可以直接访问这些有特殊作用的数据库。</p><ul><li><p><strong>admin</strong>：从权限的角度来看，这是&quot;root&quot;数据库。要是将一个用户添加到这个数据库，这个用户自动继承所有数据库的权限。一些特定的服务器端命令也只能从这个数据库运行，比如列出所有的数据库或者关闭服务器。</p></li><li><p><strong>local</strong>: 这个数据永远不会被复制，可以用来存储限于本地单台服务器的任意集合</p></li><li><p><strong>config</strong>: 当Mongo用于分片设置时，config数据库在内部使用，用于保存分片的相关信息。</p></li></ul><h3 id="_3-2-2-数据库的删除" tabindex="-1"><a class="header-anchor" href="#_3-2-2-数据库的删除" aria-hidden="true">#</a> 3.2.2 数据库的删除</h3><p>MongoDB 删除数据库的语法格式如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.dropDatabase<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>提示：主要用来删除已经持久化的数据库</p><h2 id="_3-3-集合操作" tabindex="-1"><a class="header-anchor" href="#_3-3-集合操作" aria-hidden="true">#</a> 3.3 集合操作</h2><p>集合，类似关系型数据库中的表。</p><p>可以显示的创建，也可以隐式的创建。</p><h3 id="_3-3-1-集合的显式创建-了解" tabindex="-1"><a class="header-anchor" href="#_3-3-1-集合的显式创建-了解" aria-hidden="true">#</a> 3.3.1 集合的显式创建（了解）</h3><p>基本语法格式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.createCollection<span class="token punctuation">(</span>name<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数说明：</p><ul><li>name: 要创建的集合名称</li></ul><p>例如：创建一个名为 <code>mycollection</code> 的普通集合。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.createCollection<span class="token punctuation">(</span><span class="token string">&quot;mycollection&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看当前库中的表：show tables命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>show collections
<span class="token comment"># 或</span>
show tables
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>集合的命名规范：</p><ul><li><p>集合名不能是空字符串&quot;&quot;。</p></li><li><p>集合名不能含有\\0字符（空字符)，这个字符表示集合名的结尾。</p></li><li><p>集合名不能以&quot;system.&quot;开头，这是为系统集合保留的前缀。</p></li><li><p>用户创建的集合名字不能含有保留字符。有些驱动程序的确支持在集合名里面包含，这是因为某些系统生成的集合中包含该字符。除非你要访问这种系统创建的集合，否则千万不要在名字里出现$。</p></li></ul><h3 id="_3-3-2-集合的隐式创建" tabindex="-1"><a class="header-anchor" href="#_3-3-2-集合的隐式创建" aria-hidden="true">#</a> 3.3.2 集合的隐式创建</h3><p>当向一个集合中插入一个文档的时候，如果集合不存在，则会自动创建集合。</p><p>详见<code>文档的插入</code>章节。</p><p>提示：通常我们使用隐式创建文档即可。</p><h3 id="_3-3-3-集合的删除" tabindex="-1"><a class="header-anchor" href="#_3-3-3-集合的删除" aria-hidden="true">#</a> 3.3.3 集合的删除</h3><p>集合删除语法格式如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.collection.drop<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 或</span>
db.集合.drop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>返回值</strong></p><p>如果成功删除选定集合，则 drop() 方法返回 true，否则返回 false。</p><p>例如：要删除mycollection集合</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.mycollection.drop<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-4-文档基本crud" tabindex="-1"><a class="header-anchor" href="#_3-4-文档基本crud" aria-hidden="true">#</a> 3.4 文档基本CRUD</h2><p>文档（document）的数据结构和 JSON 基本一样。</p><p>所有存储在集合中的数据都是 BSON 格式。</p><h3 id="_3-4-1-文档的插入" tabindex="-1"><a class="header-anchor" href="#_3-4-1-文档的插入" aria-hidden="true">#</a> 3.4.1 文档的插入</h3><p>（1）单个文档插入</p><p>使用insert() 或 save() 方法向集合中插入文档，语法如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>
   <span class="token operator">&lt;</span>document or array <span class="token keyword">of</span> documents<span class="token operator">&gt;</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span>
      <span class="token literal-property property">writeConcern</span><span class="token operator">:</span> <span class="token operator">&lt;</span>document<span class="token operator">&gt;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">ordered</span><span class="token operator">:</span> <span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数：</p>`,101),O=n("thead",null,[n("tr",null,[n("th",null,"Parameter"),n("th",null,"Type"),n("th",null,"Description")])],-1),P=n("tr",null,[n("td",null,[n("code",null,"document")]),n("td",null,"document or array"),n("td",null,"要插入到集合中的文档或文档数组。（(json格式）")],-1),L=n("td",null,[n("code",null,"writeConcern")],-1),z=n("td",null,"document",-1),E={href:"https://docs.mongodb.com/manual/reference/write-concern/",target:"_blank",rel:"noopener noreferrer"},F={href:"https://docs.mongodb.com/manual/reference/write-concern/",target:"_blank",rel:"noopener noreferrer"},$={href:"https://docs.mongodb.com/manual/reference/method/db.collection.insert/#insert-wc",target:"_blank",rel:"noopener noreferrer"},U={href:"https://docs.mongodb.com/manual/core/transactions/#transactions-write-concern",target:"_blank",rel:"noopener noreferrer"},Y=n("tr",null,[n("td",null,[n("code",null,"ordered")]),n("td",null,"boolean"),n("td",null,"可选。如果为真，则按顺序插入数组中的文档，如果其中一个文档出现错误，MongoDB将返回而不处理数组中的其余文档。如果为假，则执行无序插入，如果其中一个文档出现错误，则继续处理数组中的主文档。在版本2.6+中默认为true")],-1),W=e(`<p>【示例】</p><p>要向comment的集合(表)中插入一条测试数据：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100000&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;今天天气真好，阳光明媚&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;Rose&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token keyword">null</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>提示：</p><p>1）comment集合如果不存在，则会隐式创建</p><p>2）mongo中的数字，默认情况下是double类型，如果要存整型，必须使用函数NumberInt(整型数字)，否则取出来就有问题了。</p><p>3）插入当前日期使用 <code>new Date()</code></p><p>4）插入的数据没有指定 <code>_id</code> ，会自动生成主键值</p><p>5）如果某字段没值，可以赋值为null，或不写该字段。</p><p>执行后，如下，说明插入一个数据成功了。</p><p>注意：</p><ol><li><p>文档中的键/值对是有序的。</p></li><li><p>文档中的值不仅可以是在双引号里面的字符串，还可以是其他几种数据类型（甚至可以是整个嵌入的文档)。</p></li><li><p>MongoDB区分类型和大小写。</p></li><li><p>MongoDB的文档不能有重复的键。</p></li><li><p>文档的键是字符串。除了少数例外情况，键可以使用任意UTF-8字符。</p></li></ol><p>文档键命名规范：</p><ul><li><p>键不能含有\\0 (空字符)。这个字符用来表示键的结尾。</p></li><li><p>.和$有特别的意义，只有在特定环境下才能使用。</p></li><li><p>以下划线&quot;_&quot;开头的键是保留的(不是严格要求的)。</p></li></ul><p>（2）批量插入</p><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span>
   <span class="token punctuation">[</span> <span class="token operator">&lt;</span>document <span class="token number">1</span><span class="token operator">&gt;</span> <span class="token punctuation">,</span> <span class="token operator">&lt;</span>document <span class="token number">2</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">...</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span>
      <span class="token literal-property property">writeConcern</span><span class="token operator">:</span> <span class="token operator">&lt;</span>document<span class="token operator">&gt;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">ordered</span><span class="token operator">:</span> <span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数：</p>`,18),H=n("thead",null,[n("tr",null,[n("th",null,"Parameter"),n("th",null,"Type"),n("th",null,"Description")])],-1),V=n("tr",null,[n("td",null,[n("code",null,"document")]),n("td",null,"document"),n("td",null,"要插入到集合中的文档或文档数组。（(json格式）")],-1),Z=n("td",null,[n("code",null,"writeConcern ")],-1),K=n("td",null,"document",-1),J={href:"https://docs.mongodb.com/manual/reference/write-concern/",target:"_blank",rel:"noopener noreferrer"},Q={href:"https://docs.mongodb.com/manual/reference/write-concern/",target:"_blank",rel:"noopener noreferrer"},G={href:"https://docs.mongodb.com/manual/core/transactions/#transactions-write-concern",target:"_blank",rel:"noopener noreferrer"},X={href:"https://docs.mongodb.com/manual/core/transactions/#transactions-write-concern",target:"_blank",rel:"noopener noreferrer"},nn=n("tr",null,[n("td",null,[n("code",null,"ordered")]),n("td",null,"boolean"),n("td",null,"可选。一个布尔值，指定Mongod实例应执行有序插入还是无序插入。默认为true。")],-1),sn=e(`<p>【示例】</p><p>批量插入多条文章评论：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;我们不应该把清晨浪费在手机上，健康很重要，一杯温水幸福你我他。&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1002&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;相忘于江湖&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-05T22:08:15.522Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;我夏天空腹喝凉开水，冬天喝温开水&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1005&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;伊人憔悴&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-05T23:58:51.485Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">888</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;我一直喝凉开水，冬天夏天都喝。&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1004&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;杰克船长&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-06T01:05:06.321Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;专家说不能空腹吃饭，影响健康。&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;凯撒&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-06T08:18:35.288Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;研究表明，刚烧开的水千万不能喝，因为烫嘴。&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;凯撒&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-06T11:01:02.521Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>成功会返回如下信息</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token literal-property property">acknowledged</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  <span class="token literal-property property">insertedIds</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token string-property property">&#39;0&#39;</span><span class="token operator">:</span> <span class="token string">&#39;1&#39;</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;1&#39;</span><span class="token operator">:</span> <span class="token string">&#39;2&#39;</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;2&#39;</span><span class="token operator">:</span> <span class="token string">&#39;3&#39;</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;3&#39;</span><span class="token operator">:</span> <span class="token string">&#39;4&#39;</span><span class="token punctuation">,</span> <span class="token string-property property">&#39;4&#39;</span><span class="token operator">:</span> <span class="token string">&#39;5&#39;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重复插入会报如下错误</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>Uncaught:
MongoBulkWriteError: E11000 duplicate key error collection: articledb.comment index: _id_ dup key: <span class="token punctuation">{</span> _id: <span class="token string">&quot;1&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><p>插入时指定了<code>_id</code>，则主键就是该值。</p><p>如果某条数据插入失败，将会终止插入，但已经插入成功的数据不会回滚掉。</p><p>因为批量插入由于数据较多容易出现失败，因此，可以使用try catch进行异常捕捉处理，测试的时候可以不处理。如（了解）：</p><p>先删除<code>comment</code>集合</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.comment.drop()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再重新插入</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">try</span> <span class="token punctuation">{</span>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;我们不应该把清晨浪费在手机上，健康很重要，一杯温水幸福你我他。&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1002&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;相忘于江湖&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-05T22:08:15.522Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;我夏天空腹喝凉开水，冬天喝温开水&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1005&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;伊人憔悴&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-05T23:58:51.485Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">888</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;我一直喝凉开水，冬天夏天都喝。&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1004&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;杰克船长&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-06T01:05:06.321Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">666</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;专家说不能空腹吃饭，影响健康。&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;凯撒&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-06T08:18:35.288Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;研究表明，刚烧开的水千万不能喝，因为烫嘴。&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token string">&quot;凯撒&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;createdatetime&quot;</span><span class="token operator">:</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-06T11:01:02.521Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;likenum&quot;</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token function">print</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果不删除会报如下错误</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>MongoBulkWriteError: E11000 duplicate key error collection: articledb.comment index: _id_ dup key: <span class="token punctuation">{</span> _id: <span class="token string">&quot;1&quot;</span> <span class="token punctuation">}</span>
    at OrderedBulkOperation.handleWriteError <span class="token punctuation">(</span>C:<span class="token punctuation">\\</span>data<span class="token punctuation">\\</span>mci<span class="token punctuation">\\</span>86d3f11dd2918b3c8886acc5bfa7a6ae<span class="token punctuation">\\</span>tmp<span class="token punctuation">\\</span>boxednode<span class="token punctuation">\\</span>mongosh<span class="token punctuation">\\</span>node-v16.19.0<span class="token punctuation">\\</span>Release<span class="token punctuation">\\</span>node.exe:3902:1712529<span class="token punctuation">)</span>
    at l <span class="token punctuation">(</span>C:<span class="token punctuation">\\</span>data<span class="token punctuation">\\</span>mci<span class="token punctuation">\\</span>86d3f11dd2918b3c8886acc5bfa7a6ae<span class="token punctuation">\\</span>tmp<span class="token punctuation">\\</span>boxednode<span class="token punctuation">\\</span>mongosh<span class="token punctuation">\\</span>node-v16.19.0<span class="token punctuation">\\</span>Release<span class="token punctuation">\\</span>node.exe:3902:1703910<span class="token punctuation">)</span>
    at C:<span class="token punctuation">\\</span>data<span class="token punctuation">\\</span>mci<span class="token punctuation">\\</span>86d3f11dd2918b3c8886acc5bfa7a6ae<span class="token punctuation">\\</span>tmp<span class="token punctuation">\\</span>boxednode<span class="token punctuation">\\</span>mongosh<span class="token punctuation">\\</span>node-v16.19.0<span class="token punctuation">\\</span>Release<span class="token punctuation">\\</span>node.exe:3902:2022477
    at processTicksAndRejections <span class="token punctuation">(</span>node:internal/process/task_queues:96:5<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  code: <span class="token number">11000</span>,
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-4-2-文档的基本查询" tabindex="-1"><a class="header-anchor" href="#_3-4-2-文档的基本查询" aria-hidden="true">#</a> 3.4.2 文档的基本查询</h3><p>查询数据的语法格式如下：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>db.collection.find(&lt;query&gt;, [projection])
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>query</code></td><td>document</td><td>可选。使用查询运算符指定选择筛选器。若要返回集合中的所有文档，请省略此参数或传递空文档 ( <code>{}</code> )。</td></tr><tr><td><code>projection</code></td><td>document</td><td>可选。指定要在与查询筛选器匹配的文档中返回的字段（投影）。若要返回匹配文档中的所有字段，请省略此参数。</td></tr></tbody></table><p>【示例】</p><ol><li>查询所有</li></ol><p>如果我们要查询spit集合的所有文档，我们输入以下命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.comment.find<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment"># 或</span>
db.comment.find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里你会发现每条文档会有一个叫_id的字段，这个相当于我们原来关系数据库中表的主键，当你在插入文档记录时没有指定该字段， MongoDB会自动创建，其类型是ObjectID类型。</p><p>如果我们在插入文档记录时指定该字段也可以，其类型可以是ObjectID类型，也可以是MongoDB支持的任意类型。</p><p>如果我想按一定条件来查询，比如我想查询userid为1003的记录，怎么办？很简单！只 要在find()中添加参数即可，参数也是json格式，如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token string">&#39;1003&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你只需要返回符合条件的第一条数据，我们可以使用findOne命令来实现，语法和find一样。 如：查询用户编号是1003的记录，但只最多返回符合条件的第一条记录：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token string">&#39;1003&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（2）投影查询（Projection Query）：</p><p>如果要查询结果返回部分字段，则需要使用投影查询（不显示所有字段，只显示指定的字段）。</p><p>如：查询结果只显示 <code>_id</code>、<code>userid</code>、<code>nickname</code> :</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">nickname</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;4&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;userid&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;nickname&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;凯撒&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;5&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;userid&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;nickname&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;凯撒&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认 <code>_id</code> 会显示。</p><p>如：查询结果只显示 <code>userid</code>、<code>nickname</code> ，不显示 <code>_id</code> ：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">nickname</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;userid&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;nickname&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;凯撒&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;userid&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;nickname&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;凯撒&quot;</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再例如：查询所有数据，但只显示<code>_id</code>、<code>userid</code>、<code>nickname</code></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">nickname</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-4-3-文档的更新" tabindex="-1"><a class="header-anchor" href="#_3-4-3-文档的更新" aria-hidden="true">#</a> 3.4.3 文档的更新</h3><p>新版本的使用<code>update</code>命令会提示该方法被弃用了，应该使用<code>updateOne</code>, <code>updateMany</code>, or <code>bulkWrite</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>articledb<span class="token operator">&gt;</span> db.comment.update<span class="token punctuation">(</span><span class="token punctuation">{</span>_id:<span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span>likenum:NumberInt<span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
DeprecationWarning: Collection.update<span class="token punctuation">(</span><span class="token punctuation">)</span> is deprecated. Use updateOne, updateMany, or bulkWrite.
MongoInvalidArgumentError: Update document requires atomic operators
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Collection.update()</code> 已经被弃用，应该改用 <code>updateOne()</code>、<code>updateMany()</code> 或 <code>bulkWrite()</code>。</p><ul><li><code>updateOne()</code> 用于更新集合中的单个文档</li><li><code>updateMany()</code> 用于更新集合中的多个文档</li><li><code>bulkWrite()</code> 用于在单个调用中执行多个写操作</li></ul><p>三种方法都比 <code>Collection.update()</code> 更有效。</p><p>修改后又报了如下错误：</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>articledb&gt; db.comment.updateOne({_id:&quot;1&quot;},{likenum:NumberInt(1001)})
MongoInvalidArgumentError: Update document requires atomic operators
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>这个错误消息表明你正在尝试在不使用原子操作符的情况下更新文档。原子操作符用于确保更新在单个操作中执行，以便在更新正在进行时不会被另一个操作更改文档。例如，如果您使用MongoDB更新命令，则需要使用<code>$set</code>，<code>$inc</code>，<code>$push</code>或<code>$pull</code>操作符执行原子更新。</p><ul><li><p><code>$set</code>操作符用于更新文档中的字段，它可以替换现有字段的值，也可以添加新字段。<code>{ $set : { field : value } }</code></p><p>(用来指定一个键并更新键值，若键不存在则创建)</p></li><li><p><code>$unset</code> 用来删除一个键。</p></li><li><p><code>$inc</code>操作符用于增加文档中的数字字段的值。<code>{ $inc : { field : value } }</code></p><p>(可以对文档的某个值为数字型（只能为满足要求的数字）的键进行增减的操作。例如：<code>某个字段自增1</code>)</p></li><li><p><code>$push</code>操作符用于向文档中的数组字段添加新元素。<code>{ $push : { field : value } }</code></p><p>把value追加到field里面去，field一定要是数组类型才行，如果field不存在，会新增一个数组类型加进去。</p></li><li><p><code>$pull</code>操作符用于从文档中的数组字段中删除特定元素。</p></li></ul><p>可以使用<code>replaceOne</code>来进行替换</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>articledb<span class="token operator">&gt;</span> db.comment.replaceOne<span class="token punctuation">(</span><span class="token punctuation">{</span>_id:<span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span>likenum:NumberInt<span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  acknowledged: true,
  insertedId: null,
  matchedCount: <span class="token number">1</span>,
  modifiedCount: <span class="token number">1</span>,
  upsertedCount: <span class="token number">0</span>
<span class="token punctuation">}</span>
articledb<span class="token operator">&gt;</span> db.comment.find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span>userid:1,likenum:1<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>
  <span class="token punctuation">{</span> _id: <span class="token string">&#39;1&#39;</span>, likenum: <span class="token number">1001</span> <span class="token punctuation">}</span>,
  <span class="token punctuation">{</span> _id: <span class="token string">&#39;2&#39;</span>, userid: <span class="token string">&#39;1005&#39;</span>, likenum: <span class="token number">888</span> <span class="token punctuation">}</span>,
  <span class="token punctuation">{</span> _id: <span class="token string">&#39;3&#39;</span>, userid: <span class="token string">&#39;1004&#39;</span>, likenum: <span class="token number">666</span> <span class="token punctuation">}</span>,
  <span class="token punctuation">{</span> _id: <span class="token string">&#39;4&#39;</span>, userid: <span class="token string">&#39;1003&#39;</span>, likenum: <span class="token number">2000</span> <span class="token punctuation">}</span>,
  <span class="token punctuation">{</span> _id: <span class="token string">&#39;5&#39;</span>, userid: <span class="token string">&#39;1003&#39;</span>, likenum: <span class="token number">3000</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用<code>$set</code>原子操作符进行局部更新</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>articledb<span class="token operator">&gt;</span> db.comment.updateOne<span class="token punctuation">(</span><span class="token punctuation">{</span>_id:<span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span><span class="token variable">$set</span>:<span class="token punctuation">{</span>likenum:NumberInt<span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  acknowledged: true,
  insertedId: null,
  matchedCount: <span class="token number">1</span>,
  modifiedCount: <span class="token number">1</span>,
  upsertedCount: <span class="token number">0</span>
<span class="token punctuation">}</span>
articledb<span class="token operator">&gt;</span> db.comment.find<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span>,<span class="token punctuation">{</span>userid:1,likenum:1<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>
  <span class="token punctuation">{</span> _id: <span class="token string">&#39;1&#39;</span>, userid: <span class="token string">&#39;1002&#39;</span>, likenum: <span class="token number">1001</span> <span class="token punctuation">}</span>,
  <span class="token punctuation">{</span> _id: <span class="token string">&#39;2&#39;</span>, userid: <span class="token string">&#39;1005&#39;</span>, likenum: <span class="token number">888</span> <span class="token punctuation">}</span>,
  <span class="token punctuation">{</span> _id: <span class="token string">&#39;3&#39;</span>, userid: <span class="token string">&#39;1004&#39;</span>, likenum: <span class="token number">666</span> <span class="token punctuation">}</span>,
  <span class="token punctuation">{</span> _id: <span class="token string">&#39;4&#39;</span>, userid: <span class="token string">&#39;1003&#39;</span>, likenum: <span class="token number">2000</span> <span class="token punctuation">}</span>,
  <span class="token punctuation">{</span> _id: <span class="token string">&#39;5&#39;</span>, userid: <span class="token string">&#39;1003&#39;</span>, likenum: <span class="token number">3000</span> <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Update document requires atomic operators：更新文档需要原子运算符</p><p>Replacement document must not contain atomic operators：替换文档不得包含原子运算符</p></blockquote><hr><p>更新文档的语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> update<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
<span class="token comment">//或</span>
db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>
   <span class="token operator">&lt;</span>query<span class="token operator">&gt;</span><span class="token punctuation">,</span>
   <span class="token operator">&lt;</span>update<span class="token operator">&gt;</span><span class="token punctuation">,</span>
   <span class="token punctuation">{</span>
      <span class="token literal-property property">upsert</span><span class="token operator">:</span> <span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">multi</span><span class="token operator">:</span> <span class="token operator">&lt;</span>boolean<span class="token operator">&gt;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">writeConcern</span><span class="token operator">:</span> <span class="token operator">&lt;</span>document<span class="token operator">&gt;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">collation</span><span class="token operator">:</span> <span class="token operator">&lt;</span>document<span class="token operator">&gt;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">arrayFilters</span><span class="token operator">:</span> <span class="token punctuation">[</span> <span class="token operator">&lt;</span>filterdocument1<span class="token operator">&gt;</span><span class="token punctuation">,</span> <span class="token operator">...</span> <span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">hint</span><span class="token operator">:</span> <span class="token operator">&lt;</span>document<span class="token operator">|</span>string<span class="token operator">&gt;</span> <span class="token comment">// Available starting in MongoDB 4.2</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数：</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>query</td><td>document</td><td>更新的选择条件。可以使用与find（）方法中相同的查询选择器，类似sql update查询内where后面的。。在3.0版中进行了更改：当使用upsert:true执行update（）时，如果查询使用点表示法在_id字段上指定条件，则MongoDB将拒绝插入新文档。</td></tr><tr><td>update</td><td>document or pipeline</td><td>要应用的修改。该值可以是：包含更新运算符表达式的文档，或仅包含：对的替换文档，或在MongoDB 4.2中启动聚合管道。管道可以由以下阶段组成：</td></tr><tr><td>upsert</td><td>boolean</td><td>可选。如果设置为true，则在没有与查询条件匹配的文档时创建新文档。默认值为false，如果找不到匹配项，则不会插入新文档。</td></tr><tr><td>multi</td><td>boolean</td><td>可选。如果设置为true，则更新符合查询条件的多个文档。如果设置为false，则更新一个文档。默认值为false。</td></tr><tr><td>writeConcern</td><td>document</td><td>可选。表示写问题的文档。抛出异常的级别。</td></tr><tr><td>collation</td><td>document</td><td>可选。<br>指定要用于操作的校对规则。<br>校对规则允许用户为字符串比较指定特定于语言的规则，例如字母大小写和重音标记的规则。<br>校对规则选项具有以下语法：<br>校对规则：{<code>区域设置：</code>，<code>caseLevel: </code>，<code>caseFirst: </code>，<code>强度：</code>，<code>numericordering: </code>，<code>替代：</code>，<code>最大变量：</code>，<code>向后：</code>}<br>指定校对规则时，区域设置字段是必需的；所有其他校对规则字段都是可选的。有关字段的说明，请参阅校对规则文档。<br>如果未指定校对规则，但集合具有默认校对规则（请参见db.createCollection（）），则该操作将使用为集合指定的校对规则。<br>如果没有为集合或操作指定校对规则，MongoDB将使用以前版本中使用的简单二进制比较进行字符串比较。不能为一个操作指定多个校对规则。例如，不能为每个字段指定不同的校对规则，或者如果使用排序执行查找，则不能将一个校对规则用于查找，另一个校对规则用于排序。<br>3.4版新增。</td></tr><tr><td>arrayFilters</td><td>array</td><td>可选。一个筛选文档数组，用于确定要为数组字段上的更新操作修改哪些数组元素。</td></tr><tr><td>hint</td><td>Document or string</td><td>可选。指定用于支持查询谓词的索引的文档或字符串。该选项可以采用索引规范文档或索引名称字符串。如果指定的索引不存在，则说明操作错误。例如，请参阅版本4中的“为更新操作指定提示。</td></tr></tbody></table><blockquote><p>提示：</p><p>主要关注前四个参数即可。</p></blockquote><p>【示例】</p><p>（1）覆盖的修改</p><p>如果我们想修改_id为1的记录，点赞量为1001，输入以下语句：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">1001</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行后，我们会发现，这条文档除了likenum字段其它字段都不见了，</p><p>（2）局部修改</p><p>为了解决这个问题，我们需要使用修改器<code>$set</code>来实现，命令如下：</p><p>我们想修改_id为2的记录，浏览量为889，输入以下语句：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">$set</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">889</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这样就OK啦。</p><p>（3）批量的修改</p><p>更新所有用户为 <code>1003</code> 的用户的昵称为 <code>凯撒大帝</code> 。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//默认只修改第一条数据</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">$set</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">nickname</span><span class="token operator">:</span><span class="token string">&quot;凯撒2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//修改所有符合条件的数据</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">$set</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">nickname</span><span class="token operator">:</span><span class="token string">&quot;凯撒大帝&quot;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：如果不加后面的参数，则只更新符合条件的第一条记录</p><p>（3）列值增长的修改</p><p>如果我们想实现对某列值在原有值的基础上进行增加或减少，可以使用 $inc 运算符来实现。 需求：对3号数据的点赞数，每次递增1</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">$inc</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-4-4-删除文档" tabindex="-1"><a class="header-anchor" href="#_3-4-4-删除文档" aria-hidden="true">#</a> 3.4.4 删除文档</h3><p>新版本的使用<code>remove</code>命令会提示该方法被弃用了，应该使用<code>deleteOne</code>, <code>deleteMany</code>，<code>findOneAndDelete</code>, or <code>bulkWrite</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>articledb<span class="token operator">&gt;</span> db.comment.remove<span class="token punctuation">(</span><span class="token punctuation">{</span>_id:<span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
DeprecationWarning: Collection.remove<span class="token punctuation">(</span><span class="token punctuation">)</span> is deprecated. Use deleteOne, deleteMany, findOneAndDelete, or bulkWrite.
<span class="token punctuation">{</span> acknowledged: true, deletedCount: <span class="token number">1</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>“Collection.remove()”方法已经被弃用，应该使用以下方法之一：</p><ul><li><code>deleteOne()</code>：从集合中删除与过滤器匹配的单个文档。</li><li><code>deleteMany()</code>：从集合中删除与过滤器匹配的所有文档。</li><li><code>findOneAndDelete()</code>：查找单个文档并将其从集合中删除。</li><li><code>bulkWrite()</code>：在单个命令中执行多个写操作。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 如果存在则删除文档并返回这个文档</span>
articledb<span class="token operator">&gt;</span> db.comment.findOneAndDelete<span class="token punctuation">(</span><span class="token punctuation">{</span>_id:<span class="token string">&quot;2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  _id: <span class="token string">&#39;2&#39;</span>,
  articleid: <span class="token string">&#39;100001&#39;</span>,
  content: <span class="token string">&#39;我夏天空腹喝凉开水，冬天喝温开水&#39;</span>,
  userid: <span class="token string">&#39;1005&#39;</span>,
  nickname: <span class="token string">&#39;伊人憔悴&#39;</span>,
  createdatetime: ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-08-05T23:58:51.485Z&quot;</span><span class="token punctuation">)</span>,
  likenum: <span class="token number">888</span>,
  state: <span class="token string">&#39;1&#39;</span>
<span class="token punctuation">}</span>
<span class="token comment"># 如果不存在则返回null</span>
articledb<span class="token operator">&gt;</span> db.comment.findOneAndDelete<span class="token punctuation">(</span><span class="token punctuation">{</span>_id:<span class="token string">&quot;2&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
null
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>删除文档的语法结构：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合名称<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>条件<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>以下语句可以将数据全部删除，请慎用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果删除_id=1的记录，输入以下语句</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-5-文档的分页查询" tabindex="-1"><a class="header-anchor" href="#_3-5-文档的分页查询" aria-hidden="true">#</a> 3.5 文档的分页查询</h2><h3 id="_3-5-1-统计查询" tabindex="-1"><a class="header-anchor" href="#_3-5-1-统计查询" aria-hidden="true">#</a> 3.5.1 统计查询</h3><p>新版本的使用<code>count</code>命令会提示该方法准备弃用了，应该使用<code>countDocuments</code> or <code>estimatedDocumentCount</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>articledb<span class="token operator">&gt;</span> db.comment.count<span class="token punctuation">(</span><span class="token punctuation">)</span>
DeprecationWarning: Collection.count<span class="token punctuation">(</span><span class="token punctuation">)</span> is deprecated. Use countDocuments or estimatedDocumentCount.
<span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这两个方法都可以返回集合中文档的数量，但是 <code>countDocuments()</code> 会返回准确的数量，而 <code>estimatedDocumentCount()</code> 只会返回估计值。重要的是要注意，<code>countDocuments()</code> 比 <code>estimatedDocumentCount()</code> 慢，因为它需要扫描整个集合。一般来说，<code>estimatedDocumentCount()</code> 的误差可能会在 10% 到 20% 之间，但是有时候可能会更高。</p><hr><p>统计查询使用count()方法，语法如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>query</code></td><td>document</td><td>查询选择条件。</td></tr><tr><td><code>options</code></td><td>document</td><td>可选。用于修改计数的额外选项。</td></tr></tbody></table><p>提示：</p><p>可选项暂时不使用。</p><p>【示例】</p><p>（1）统计所有记录数：</p><p>统计comment集合的所有的记录数：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（2）按条件统计记录数：</p><p>例如：统计userid为1003的记录条数</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>提示：</p><p>默认情况下 <code>count()</code> 方法返回符合条件的全部记录条数。</p><h3 id="_3-5-2-分页列表查询" tabindex="-1"><a class="header-anchor" href="#_3-5-2-分页列表查询" aria-hidden="true">#</a> 3.5.2 分页列表查询</h3><p>可以使用limit()方法来读取指定数量的数据，使用skip()方法来跳过指定数量的数据。</p><p>基本语法如下所示：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span>db<span class="token punctuation">.</span><span class="token constant">COLLECTION_NAME</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token constant">NUMBER</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token constant">NUMBER</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果你想返回指定条数的记录，可以在find方法后调用limit来返回结果(TopN)，默认值20，例如：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>skip方法同样接受一个数字参数作为跳过的记录条数。（前N个不要）,默认值是0</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>分页查询：需求：每页2个，第二页开始：跳过前两条数据，接着值显示第3条和第4条数据</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">//第一页</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">//第二页</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">//第三页</span>
db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-5-3-排序查询" tabindex="-1"><a class="header-anchor" href="#_3-5-3-排序查询" aria-hidden="true">#</a> 3.5.3 排序查询</h3><p>sort() 方法对数据进行排序，sort() 方法可以通过参数指定排序的字段，并使用 1 和 -1 来指定排序的方式，其中 1 为升序排列，而 -1 是用于降序排列。</p><p>语法如下所示：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span><span class="token constant">COLLECTION_NAME</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token constant">KEY</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 或</span>
db<span class="token punctuation">.</span>集合名称<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>排序方式<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如：</p><p>对userid降序排列，并对访问量进行升序排列</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p><code>skip()</code>, <code>limilt()</code>, <code>sort()</code>三个放在一起执行的时候，执行的顺序是先<code>sort()</code>, 然后是 <code>skip()</code>， 后是显示的 <code>limit()</code>，和命令编写顺序无关。</p></blockquote><h2 id="_3-6-文档的更多查询" tabindex="-1"><a class="header-anchor" href="#_3-6-文档的更多查询" aria-hidden="true">#</a> 3.6 文档的更多查询</h2><h3 id="_3-6-1-正则的复杂条件查询" tabindex="-1"><a class="header-anchor" href="#_3-6-1-正则的复杂条件查询" aria-hidden="true">#</a> 3.6.1 正则的复杂条件查询</h3><p>MongoDB的模糊查询是通过<strong>正则表达式</strong>的方式实现的。格式为：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">field</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">正则表达式</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// 或</span>
db<span class="token punctuation">.</span>集合<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">字段</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">正则表达式</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：正则表达式是js的语法，直接量的写法。</p><p>例如，我要查询评论内容包含&quot;开水&quot;的所有文档，代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">content</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">开水</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果要查询评论的内容中以&quot;专家&quot;开头的，代码如下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">content</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^专家</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-6-2-比较查询" tabindex="-1"><a class="header-anchor" href="#_3-6-2-比较查询" aria-hidden="true">#</a> 3.6.2 比较查询</h3><p>&lt;, &lt;=, &gt;, &gt;= 这个操作符也是很常用的，格式如下:</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合名称<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 大于: field &gt; value</span>
db<span class="token punctuation">.</span>集合名称<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 小于: field &lt; value</span>
db<span class="token punctuation">.</span>集合名称<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gte</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 大于等于: field &gt;= value</span>
db<span class="token punctuation">.</span>集合名称<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lte</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 小于等于: field &lt;= value</span>
db<span class="token punctuation">.</span>集合名称<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string-property property">&quot;field&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$ne</span><span class="token operator">:</span> value <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// 不等于: field != value</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例：查询评论点赞数量大于700的记录</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-6-3-包含查询" tabindex="-1"><a class="header-anchor" href="#_3-6-3-包含查询" aria-hidden="true">#</a> 3.6.3 包含查询</h3><p>包含使用$in操作符。 示例：查询评论的集合中userid字段包含1003或1004的文档</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token punctuation">{</span>$<span class="token keyword">in</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1004&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>不包含使用$nin操作符。 示例：查询评论集合中userid字段不包含1003和1004的文档</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$nin</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;1004&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-6-4-条件连接查询" tabindex="-1"><a class="header-anchor" href="#_3-6-4-条件连接查询" aria-hidden="true">#</a> 3.6.4 条件连接查询</h3><p>我们如果需要查询同时满足两个以上条件，需要使用$and操作符将条件进行关联。（相当于SQL的and） 格式为：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">$and</span><span class="token operator">:</span><span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例：查询评论集合中likenum大于等于700 并且小于2000的文档：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">$and</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gte</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">700</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$lt</span><span class="token operator">:</span><span class="token function">NumberInt</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果两个以上条件之间是或者的关系，我们使用 操作符进行关联，与前面and的使用方式相同 格式为：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">$or</span><span class="token operator">:</span><span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>示例：查询评论集合中userid为1003，或者点赞数小于1000的文档记录</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">$or</span><span class="token operator">:</span><span class="token punctuation">[</span> <span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">}</span> <span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">likenum</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$lt</span><span class="token operator">:</span><span class="token number">1000</span><span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_3-7-常用命令小结" tabindex="-1"><a class="header-anchor" href="#_3-7-常用命令小结" aria-hidden="true">#</a> 3.7 常用命令小结</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>选择切换数据库：use articledb
插入数据：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">{</span>bson数据<span class="token punctuation">}</span><span class="token punctuation">)</span>
查询所有数据：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
条件查询数据：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">)</span>
查询符合条件的第一条记录：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">)</span>
查询符合条件的前几条记录：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span>条数<span class="token punctuation">)</span>
查询符合条件的跳过的记录：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span>条数<span class="token punctuation">)</span>
修改数据：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">replaceOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>修改后的数据<span class="token punctuation">}</span><span class="token punctuation">)</span> 或db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">updateMany</span><span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">$set</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">要修改部分的字段</span><span class="token operator">:</span>数据<span class="token punctuation">}</span><span class="token punctuation">)</span>
修改数据并自增某字段值：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">$inc</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">自增的字段</span><span class="token operator">:</span>步进值<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
删除数据：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">)</span>
统计查询：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">countDocuments</span><span class="token punctuation">(</span><span class="token punctuation">{</span>条件<span class="token punctuation">}</span><span class="token punctuation">)</span>
模糊查询：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">字段名</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">正则表达式</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span>
条件比较运算：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">字段名</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span>值<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
包含查询：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">字段名</span><span class="token operator">:</span><span class="token punctuation">{</span>$<span class="token keyword">in</span><span class="token operator">:</span><span class="token punctuation">[</span>值<span class="token number">1</span>，值<span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>或db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">字段名</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$nin</span><span class="token operator">:</span><span class="token punctuation">[</span>值<span class="token number">1</span>，值<span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
条件连接查询：db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">$and</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span>条件<span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span>条件<span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="_4-索引-index" tabindex="-1"><a class="header-anchor" href="#_4-索引-index" aria-hidden="true">#</a> 4 索引-Index</h1><h2 id="_4-1-概述" tabindex="-1"><a class="header-anchor" href="#_4-1-概述" aria-hidden="true">#</a> 4.1 概述</h2><p>索引支持在MongoDB中高效地执行查询。如果没有索引，MongoDB必须执行全集合扫描，即扫描集合中的每个文档，以选择与查询语句匹配的文档。这种扫描全集合的查询效率是非常低的，特别在处理大量的数据时，查询可以要花费几十秒甚至几分钟，这对网站的性能是非常致命的。</p><p>如果查询存在适当的索引，MongoDB可以使用该索引限制必须检查的文档数。</p><p>索引是特殊的数据结构，它以易于遍历的形式存储集合数据集的一小部分。索引存储特定字段或一组字段的值，按字段值排序。索引项的排序支持有效的相等匹配和基于范围的查询操作。此外，MongoDB还可以使用索引中的排序返回排序结果。</p>`,166),an={href:"https://www.mongodb.com/docs/manual/indexes/",target:"_blank",rel:"noopener noreferrer"},tn=e(`<h2 id="_4-2-索引的类型" tabindex="-1"><a class="header-anchor" href="#_4-2-索引的类型" aria-hidden="true">#</a> 4.2 索引的类型</h2><h3 id="_4-2-1-单字段索引" tabindex="-1"><a class="header-anchor" href="#_4-2-1-单字段索引" aria-hidden="true">#</a> 4.2.1 单字段索引</h3><p>MongoDB支持在文档的单个字段上创建用户定义的升序/降序索引，称为单字段索引（Single Field Index）。</p><p>对于单个字段索引和排序操作，索引键的排序顺序（即升序或降序）并不重要，因为MongoDB可以在任何方向上遍历索引。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/index-ascending.bakedsvg.svg" alt="index-ascending.bakedsvg" tabindex="0" loading="lazy"><figcaption>index-ascending.bakedsvg</figcaption></figure><h3 id="_4-2-2-复合索引" tabindex="-1"><a class="header-anchor" href="#_4-2-2-复合索引" aria-hidden="true">#</a> 4.2.2 复合索引</h3><p>MongoDB还支持多个字段的用户定义索引，即复合索引（Compound Index）。</p><p>复合索引中列出的字段顺序具有重要意义。例如，如果复合索引由<code>{ userid: 1,score: -1}</code>组成，则索引首先按userid正序排序，然后在每个userid的值内，再在按score倒序排序。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/index-compound-key.bakedsvg.svg" alt="index-compound-key.bakedsvg" tabindex="0" loading="lazy"><figcaption>index-compound-key.bakedsvg</figcaption></figure><h3 id="_4-2-3-其他索引" tabindex="-1"><a class="header-anchor" href="#_4-2-3-其他索引" aria-hidden="true">#</a> 4.2.3 其他索引</h3><p>地理空间索引（Geospatial Index）、文本索引（Text Indexes）、哈希索引（Hashed Indexes）。</p><p><strong>地理空间索引（Geospatial Index）</strong></p><p>为了支持对地理空间坐标数据的有效查询，MongoDB提供了两种特殊的索引：返回结果时使用平面几何的二维索引和返回结果时使用球面几何的二维球面索引。</p><p><strong>文本索引（Text Indexes）</strong></p><p>MongoDB提供了一种文本索引类型，支持在集合中搜索字符串内容。这些文本索引不存储特定于语言的停止词（例如&quot;the&quot;、&quot;a&quot;、&quot;or&quot;），而将集合中的词作为词干，只存储根词。</p><p><strong>哈希索引（Hashed Indexes）</strong></p><p>为了支持基于散列的分片，MongoDB提供了散列索引类型，它对字段值的散列进行索引。这些索引在其范围内的值分布更加随机，但只支持相等匹配，不支持基于范围的查询。</p><h2 id="_4-3-索引的管理操作" tabindex="-1"><a class="header-anchor" href="#_4-3-索引的管理操作" aria-hidden="true">#</a> 4.3 索引的管理操作</h2><h3 id="_4-3-1-索引的查看" tabindex="-1"><a class="header-anchor" href="#_4-3-1-索引的查看" aria-hidden="true">#</a> 4.3.1 索引的查看</h3><p>说明：</p><p>返回一个集合中的所有索引的数组。</p><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">getIndexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>提示：该语法命令运行要求是MongoDB 3.0+</p><p>【示例】</p><p>查看comment集合中所有的索引情况</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">getIndexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;v&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;key&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;_id_&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;ns&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;articledb.comment&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果中显示的是默认 <code>_id</code> 索引。</p><p>默认_id索引：</p><p>MongoDB在创建集合的过程中，在 <code>_id</code> 字段上创建一个唯一的索引，默认名字为 <code>_id_</code> ，该索引可防止客户端插入两个具有相同值的文 档，您不能在<code>_id</code>字段上删除此索引。</p><p>注意：该索引是唯一索引，因此值不能重复，即<code>_id</code>值不能重复的。在分片集群中，通常使用<code>_id</code>作为片键。</p><h3 id="_4-3-2-索引的创建" tabindex="-1"><a class="header-anchor" href="#_4-3-2-索引的创建" aria-hidden="true">#</a> 4.3.2 索引的创建</h3><p>说明：</p><p>在集合上创建索引。</p><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>keys</code></td><td>document</td><td>包含字段和值对的文档，其中字段是索引键，值描述该字段的索引类型。对于字段上的升序索引，请指定值1；对于降序索引，请指定值-1。比如：<code>{字段:1或-1}</code>，其中1 为指定按升序创建索引，如果你想按降序来创建索引指定为 -1 即可。另外，MongoDB支持几种不同的索引类型，包括文本、地理空间和哈希索引。</td></tr><tr><td><code>options</code></td><td>document</td><td>可选。包含一组控制索引创建的选项的文档。有关详细信息，请参见选项详情列表。</td></tr></tbody></table><p>options（更多选项）列表：</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>background</td><td>Boolean</td><td>建索引过程会阻塞其它数据库操作，background可指定以后台方式创建索引，即增加 &quot;background&quot; 可选参数。 &quot;background&quot; 默认值为false。</td></tr><tr><td>unique</td><td>Boolean</td><td>建立的索引是否唯一。指定为true创建唯一索引。默认值为false.</td></tr><tr><td>name</td><td>string</td><td>索引的名称。如果未指定，MongoDB的通过连接索引的字段名和排序顺序生成一个索引名称。</td></tr><tr><td>dropDups</td><td>Boolean</td><td>3.0+版本已废弃。在建立唯一索引时是否删除重复记录,指定 true 创建唯一索引。默认值为 false.</td></tr><tr><td>sparse</td><td>Boolean</td><td>对文档中不存在的字段数据不启用索引；这个参数需要特别注意，如果设置为true的话，在索引字段中不会查询出不包含对应字段的文档.。默认值为 false.</td></tr><tr><td>expireAfterSeconds</td><td>integer</td><td>指定一个以秒为单位的数值，完成 TTL设定，设定集合的生存时间。</td></tr><tr><td>v</td><td>index version</td><td>索引的版本号。默认的索引版本取决于mongod创建索引时运行的版本。</td></tr><tr><td>weights</td><td>document</td><td>索引权重值，数值在 1 到 99,999 之间，表示该索引相对于其他索引字段的得分权重。</td></tr><tr><td>default_language</td><td>string</td><td>对于文本索引，该参数决定了停用词及词干和词器的规则的列表。 默认为英语</td></tr><tr><td>language_override</td><td>string</td><td>对于文本索引，该参数指定了包含在文档中的字段名，语言覆盖默认的language，默认值为 language.</td></tr></tbody></table><p>提示：</p><p>注意在 3.0.0 版本前创建索引方法为<code>db.collection.ensureIndex()</code>，之后的版本使用了<code>db.collection.createIndex()</code> 方法，<code>ensureIndex()</code>还能用，但只是 <code>createIndex()</code>的别名。</p><p>【示例】</p><p>（1）单字段索引示例：对 <code>userid</code> 字段建立索引：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;createdCollectionAutomatically&quot;</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;numIndexesBefore&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;numIndexesAfter&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;ok&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>参数1：按升序创建索引</p><p>可以查看一下：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">getIndexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;v&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;key&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;_id_&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;ns&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;articledb.comment&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;v&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;key&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;userid&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;userid_1&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;ns&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;articledb.comment&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>索引名字为<code>userid_1</code></p><p>compass查看：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230301220208528.png" alt="image-20230301220208528" tabindex="0" loading="lazy"><figcaption>image-20230301220208528</figcaption></figure><p>（2）复合索引：对 userid 和 nickname 同时建立复合（Compound）索引：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token literal-property property">nickname</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;createdCollectionAutomatically&quot;</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;numIndexesBefore&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;numIndexesAfter&quot;</span> <span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;ok&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看一下索引：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">getIndexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;v&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;_id_&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;ns&quot;</span><span class="token operator">:</span> <span class="token string">&quot;articledb.comment&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;v&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;userid_1&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;ns&quot;</span><span class="token operator">:</span> <span class="token string">&quot;articledb.comment&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;v&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;key&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;userid_1_nickname_-1&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;ns&quot;</span><span class="token operator">:</span> <span class="token string">&quot;articledb.comment&quot;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>compass中：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230301220405211.png" alt="image-20230301220405211" tabindex="0" loading="lazy"><figcaption>image-20230301220405211</figcaption></figure><h3 id="_4-3-3-索引的移除" tabindex="-1"><a class="header-anchor" href="#_4-3-3-索引的移除" aria-hidden="true">#</a> 4.3.3 索引的移除</h3><p>说明：可以移除指定的索引，或移除所有索引</p><p>一、指定索引的移除</p><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">dropIndex</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>index</code></td><td>string or document</td><td>指定要删除的索引。可以通过索引名称或索引规范文档指定索引。若要删除文本索引，请指定索引名称。</td></tr></tbody></table><p>【示例】</p><p>删除 <code>comment</code> 集合中 <code>userid</code> 字段上的升序索引：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">dropIndex</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;nIndexesWas&quot;</span> <span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string-property property">&quot;ok&quot;</span> <span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查看已经删除了。</p><p>二、所有索引的移除</p><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">dropIndexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>【示例】</p><p>删除 comment 集合中所有索引。（除了<code>_id</code>）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">dropIndexes</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string-property property">&quot;nIndexesWas&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;msg&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;non-_id indexes dropped for collection&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;ok&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>提示： <code>_id</code> 的字段的索引是无法删除的，只能删除非 <code>_id</code> 字段的索引。</p></blockquote><h2 id="_4-4-索引的使用" tabindex="-1"><a class="header-anchor" href="#_4-4-索引的使用" aria-hidden="true">#</a> 4.4 索引的使用</h2><h3 id="_4-4-1-执行计划" tabindex="-1"><a class="header-anchor" href="#_4-4-1-执行计划" aria-hidden="true">#</a> 4.4.1 执行计划</h3><p>分析查询性能（Analyze Query Performance）通常使用执行计划（解释计划、Explain Plan）来查看查询的情况，如查询耗费的时间、是否基于索引查询等。</p><p>那么，通常，我们想知道，建立的索引是否有效，效果如何，都需要通过执行计划查看。</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.collection.find<span class="token punctuation">(</span>query,options<span class="token punctuation">)</span>.explain<span class="token punctuation">(</span>options<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>【示例】</p><p>查看根据userid查询数据的情况：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">userid</span><span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">explain</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;queryPlanner&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;plannerVersion&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;namespace&quot;</span><span class="token operator">:</span> <span class="token string">&quot;articledb.comment&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;indexFilterSet&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;parsedQuery&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;$eq&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;winningPlan&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;stage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;COLLSCAN&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// &lt;&lt;==========  stage为 COLLSCAN 表示是全表扫描</span>
            <span class="token string-property property">&quot;filter&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token string-property property">&quot;$eq&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;direction&quot;</span><span class="token operator">:</span> <span class="token string">&quot;forward&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;rejectedPlans&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;serverInfo&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;9ef3740277ad&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">27017</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4.0.10&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;gitVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c389e7f69f637f7a1ac3cc9fae843b635f20b766&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;ok&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关键点看： <code>&quot;stage&quot; : &quot;COLLSCAN&quot;,</code> 表示全集合扫描</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230301221051298.png" alt="image-20230301221051298" tabindex="0" loading="lazy"><figcaption>image-20230301221051298</figcaption></figure><p>下面对userid建立索引</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span><span class="token literal-property property">userid</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string-property property">&quot;createdCollectionAutomatically&quot;</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;numIndexesBefore&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;numIndexesAfter&quot;</span> <span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;ok&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再次查看执行计划：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">userid</span><span class="token operator">:</span> <span class="token string">&quot;1013&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">explain</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;queryPlanner&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;plannerVersion&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;namespace&quot;</span><span class="token operator">:</span> <span class="token string">&quot;articledb.comment&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;indexFilterSet&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;parsedQuery&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;$eq&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1013&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;winningPlan&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;stage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;FETCH&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;inputStage&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;stage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;IXSCAN&quot;</span><span class="token punctuation">,</span> <span class="token comment">// &lt;&lt;==========  stage为 IXSCAN 表示使用了索引</span>
                <span class="token string-property property">&quot;keyPattern&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;indexName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;userid_1&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;isMultiKey&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;multiKeyPaths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;isUnique&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;isSparse&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;isPartial&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;indexVersion&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;direction&quot;</span><span class="token operator">:</span> <span class="token string">&quot;forward&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;indexBounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                        <span class="token string">&quot;[\\&quot;1013\\&quot;, \\&quot;1013\\&quot;]&quot;</span>
                    <span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;rejectedPlans&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;serverInfo&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;9ef3740277ad&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">27017</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4.0.10&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;gitVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c389e7f69f637f7a1ac3cc9fae843b635f20b766&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;ok&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关键点看： <code>&quot;stage&quot; : &quot;IXSCAN&quot;</code> ,基于索引的扫描</p><p>compass查看：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230301221457190.png" alt="image-20230301221457190" tabindex="0" loading="lazy"><figcaption>image-20230301221457190</figcaption></figure><h3 id="_4-4-2-涵盖的查询" tabindex="-1"><a class="header-anchor" href="#_4-4-2-涵盖的查询" aria-hidden="true">#</a> 4.4.2 涵盖的查询</h3><p>涵盖查询（Covered Queries）：当查询条件和查询的投影仅包含索引字段时，MongoDB直接从索引返回结果，而不扫描任何文档或将文档带入内存。这些覆盖的查询可以非常有效。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230228101811152.png" alt="image-20230228101811152" tabindex="0" loading="lazy"><figcaption>image-20230228101811152</figcaption></figure>`,96),en={href:"https://www.mongodb.com/docs/manual/core/query-optimization/#read-operations-covered-query",target:"_blank",rel:"noopener noreferrer"},pn=e(`<p>【示例】</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">userid</span><span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">userid</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span> <span class="token punctuation">}</span>
    <span class="token operator">&gt;</span> db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">userid</span><span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">userid</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">_id</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">explain</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;queryPlanner&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;plannerVersion&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;namespace&quot;</span><span class="token operator">:</span> <span class="token string">&quot;articledb.comment&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;indexFilterSet&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;parsedQuery&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;$eq&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;winningPlan&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;stage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PROJECTION&quot;</span><span class="token punctuation">,</span>   <span class="token comment">// &lt;&lt;==========  stage为 PROJECTION</span>
            <span class="token string-property property">&quot;transformBy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;inputStage&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;stage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;IXSCAN&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;keyPattern&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;indexName&quot;</span><span class="token operator">:</span> <span class="token string">&quot;userid_1&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;isMultiKey&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;multiKeyPaths&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
                <span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;isUnique&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;isSparse&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;isPartial&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;indexVersion&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;direction&quot;</span><span class="token operator">:</span> <span class="token string">&quot;forward&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;indexBounds&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                    <span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
                        <span class="token string">&quot;[\\&quot;1003\\&quot;, \\&quot;1003\\&quot;]&quot;</span>
                    <span class="token punctuation">]</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;rejectedPlans&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;serverInfo&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bobohost.localdomain&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;port&quot;</span><span class="token operator">:</span> <span class="token number">27017</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4.0.10&quot;</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;gitVersion&quot;</span><span class="token operator">:</span> <span class="token string">&quot;c389e7f69f637f7a1ac3cc9fae843b635f20b766&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;ok&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Compass中：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230302095437984.png" alt="image-20230302095437984" tabindex="0" loading="lazy"><figcaption>image-20230302095437984</figcaption></figure><h1 id="_5-文章评论" tabindex="-1"><a class="header-anchor" href="#_5-文章评论" aria-hidden="true">#</a> 5 文章评论</h1><h2 id="_5-1-需求分析" tabindex="-1"><a class="header-anchor" href="#_5-1-需求分析" aria-hidden="true">#</a> 5.1 需求分析</h2><p>某头条的文章评论业务如下：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230228102219898.png" alt="image-20230228102219898" tabindex="0" loading="lazy"><figcaption>image-20230228102219898</figcaption></figure>`,8),on={href:"https://www.toutiao.com/article/6721476546088927748/",target:"_blank",rel:"noopener noreferrer"},ln=e('<ol><li><p>基本增删改查API</p></li><li><p>根据文章id查询评论</p></li><li><p>评论点赞</p></li></ol><h2 id="_5-2-表结构分析" tabindex="-1"><a class="header-anchor" href="#_5-2-表结构分析" aria-hidden="true">#</a> 5.2 表结构分析</h2><p>数据库：articledb</p><table><thead><tr><th>专栏文章评论</th><th>comment</th><th></th><th></th></tr></thead><tbody><tr><td>字段名称</td><td>字段含义</td><td>字段类型</td><td>备注</td></tr><tr><td>_id</td><td>ID</td><td>ObjectId或String</td><td>Mongo的主键的字段</td></tr><tr><td>articleid</td><td>文章ID</td><td>String</td><td></td></tr><tr><td>content</td><td>评论内容</td><td>String</td><td></td></tr><tr><td>userid</td><td>评论人ID</td><td>String</td><td></td></tr><tr><td>nickname</td><td>评论人昵称</td><td>String</td><td></td></tr><tr><td>createdatetime</td><td>评论的日期时间</td><td>Date</td><td></td></tr><tr><td>likenum</td><td>点赞数</td><td>Int32</td><td></td></tr><tr><td>replynum</td><td>回复数</td><td>Int32</td><td></td></tr><tr><td>state</td><td>状态</td><td>String</td><td>0：不可见；1：可见；</td></tr><tr><td>parentid</td><td>上级ID</td><td>String</td><td>如果为0表示文章的顶级评论</td></tr></tbody></table><h2 id="_5-3-技术选型" tabindex="-1"><a class="header-anchor" href="#_5-3-技术选型" aria-hidden="true">#</a> 5.3 技术选型</h2><h3 id="_5-3-1-mongodb-driver-了解" tabindex="-1"><a class="header-anchor" href="#_5-3-1-mongodb-driver-了解" aria-hidden="true">#</a> 5.3.1 mongodb-driver（了解）</h3><p>mongodb-driver是mongo官方推出的java连接mongoDB的驱动包，相当于JDBC驱动。我们通过一个入门的案例来了解mongodb-driver的基本使用。</p>',7),cn={href:"http://mongodb.github.io/mongo-java-driver/",target:"_blank",rel:"noopener noreferrer"},un={href:"http://mongodb.github.io/mongo-java-driver/3.8/driver/getting-started/quick-start/",target:"_blank",rel:"noopener noreferrer"},rn=n("h3",{id:"_5-3-2-springdatamongodb",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_5-3-2-springdatamongodb","aria-hidden":"true"},"#"),s(" 5.3.2 SpringDataMongoDB")],-1),dn=n("p",null,"SpringData家族成员之一，用于操作MongoDB的持久层框架，封装了底层的mongodb-driver。",-1),kn={href:"https://spring.io/projects/spring-data-mongodb",target:"_blank",rel:"noopener noreferrer"},mn={href:"https://docs.spring.io/spring-data/mongodb/docs/current/reference/html/#repositories.core-concepts",target:"_blank",rel:"noopener noreferrer"},vn=e(`<h2 id="_5-4-文章微服务模块搭建" tabindex="-1"><a class="header-anchor" href="#_5-4-文章微服务模块搭建" aria-hidden="true">#</a> 5.4 文章微服务模块搭建</h2><p>（1）搭建项目工程article，pom.xml引入依赖：</p><div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.1.6.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/&gt;</span></span> <span class="token comment">&lt;!-- lookup parent from repository --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.itcast<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>article<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-data-mongodb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）创建application.yml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
	<span class="token comment">#数据源配置</span>
	<span class="token key atrule">data</span><span class="token punctuation">:</span>
		<span class="token key atrule">mongodb</span><span class="token punctuation">:</span>
		<span class="token comment"># 主机地址</span>
		<span class="token key atrule">host</span><span class="token punctuation">:</span> 192.168.40.141
		<span class="token comment"># 数据库</span>
		<span class="token key atrule">database</span><span class="token punctuation">:</span> articledb
		<span class="token comment"># 默认端口是27017</span>
		<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27017</span>
		<span class="token comment">#也可以使用uri连接</span>
		<span class="token comment">#uri: mongodb://192.168.40.134:27017/articledb</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）创建启动类</p><p>cn.itcast.article.ArticleApplication</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>article</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootApplication</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ArticleApplication</span> <span class="token punctuation">{</span>
    
	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ArticleApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（4）启动项目，看是否能正常启动，控制台没有错误。</p><h2 id="_5-5-文章评论实体类的编写" tabindex="-1"><a class="header-anchor" href="#_5-5-文章评论实体类的编写" aria-hidden="true">#</a> 5.5 文章评论实体类的编写</h2><p>创建实体类 创建包cn.itcast.article，包下建包po用于存放实体类，创建实体类<code>cn.itcast.article.po.Comment</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>article<span class="token punctuation">.</span>po</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Id</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>core<span class="token punctuation">.</span>index<span class="token punctuation">.</span></span><span class="token class-name">Indexed</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>core<span class="token punctuation">.</span>mapping<span class="token punctuation">.</span></span><span class="token class-name">Document</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>core<span class="token punctuation">.</span>mapping<span class="token punctuation">.</span></span><span class="token class-name">Field</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Serializable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span></span><span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
 * 文章评论实体类
 */</span>
<span class="token comment">//把一个java类声明为mongodb的文档，可以通过collection参数指定这个类对应的文档。</span>
<span class="token comment">//@Document(collection=&quot;mongodb 对应 collection 名&quot;)</span>
<span class="token comment">// 若未加 @Document ，该 bean save 到 mongo 的 comment collection</span>
<span class="token comment">// 若添加 @Document ，则 save 到 comment collection</span>
<span class="token annotation punctuation">@Document</span><span class="token punctuation">(</span>collection<span class="token operator">=</span><span class="token string">&quot;comment&quot;</span><span class="token punctuation">)</span><span class="token comment">//可以省略，如果省略，则默认使用类名小写映射集合</span>
<span class="token comment">//复合索引</span>
<span class="token comment">// @CompoundIndex( def = &quot;{&#39;userid&#39;: 1, &#39;nickname&#39;: -1}&quot;)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Comment</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>
    <span class="token comment">//主键标识，该属性的值会自动对应mongodb的主键字段&quot;_id&quot;，如果该属性名就叫“id”,则该注解可以省略，否则必须写</span>
    <span class="token annotation punctuation">@Id</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> id<span class="token punctuation">;</span><span class="token comment">//主键</span>
    <span class="token comment">//该属性对应mongodb的字段的名字，如果一致，则无需该注解</span>
    <span class="token annotation punctuation">@Field</span><span class="token punctuation">(</span><span class="token string">&quot;content&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> content<span class="token punctuation">;</span><span class="token comment">//吐槽内容</span>
    <span class="token keyword">private</span> <span class="token class-name">Date</span> publishtime<span class="token punctuation">;</span><span class="token comment">//发布日期</span>
    <span class="token comment">//添加了一个单字段的索引</span>
    <span class="token annotation punctuation">@Indexed</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> userid<span class="token punctuation">;</span><span class="token comment">//发布人ID</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> nickname<span class="token punctuation">;</span><span class="token comment">//昵称</span>
    <span class="token keyword">private</span> <span class="token class-name">LocalDateTime</span> createdatetime<span class="token punctuation">;</span><span class="token comment">//评论的日期时间</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> likenum<span class="token punctuation">;</span><span class="token comment">//点赞数</span>
    <span class="token keyword">private</span> <span class="token class-name">Integer</span> replynum<span class="token punctuation">;</span><span class="token comment">//回复数</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> state<span class="token punctuation">;</span><span class="token comment">//状态</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> parentid<span class="token punctuation">;</span><span class="token comment">//上级ID</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> articleid<span class="token punctuation">;</span>
    <span class="token comment">//getter and setter.....</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> content<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setContent</span><span class="token punctuation">(</span><span class="token class-name">String</span> content<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>content <span class="token operator">=</span> content<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">Date</span> <span class="token function">getPublishtime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> publishtime<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPublishtime</span><span class="token punctuation">(</span><span class="token class-name">Date</span> publishtime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>publishtime <span class="token operator">=</span> publishtime<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUserid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> userid<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUserid</span><span class="token punctuation">(</span><span class="token class-name">String</span> userid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>userid <span class="token operator">=</span> userid<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getNickname</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> nickname<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setNickname</span><span class="token punctuation">(</span><span class="token class-name">String</span> nickname<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>nickname <span class="token operator">=</span> nickname<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">LocalDateTime</span> <span class="token function">getCreatedatetime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> createdatetime<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setCreatedatetime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span> createdatetime<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>createdatetime <span class="token operator">=</span> createdatetime<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getLikenum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> likenum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setLikenum</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> likenum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>likenum <span class="token operator">=</span> likenum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">Integer</span> <span class="token function">getReplynum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> replynum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setReplynum</span><span class="token punctuation">(</span><span class="token class-name">Integer</span> replynum<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>replynum <span class="token operator">=</span> replynum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setState</span><span class="token punctuation">(</span><span class="token class-name">String</span> state<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>state <span class="token operator">=</span> state<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getParentid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> parentid<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setParentid</span><span class="token punctuation">(</span><span class="token class-name">String</span> parentid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>parentid <span class="token operator">=</span> parentid<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getArticleid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> articleid<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setArticleid</span><span class="token punctuation">(</span><span class="token class-name">String</span> articleid<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>articleid <span class="token operator">=</span> articleid<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Override</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Comment{&quot;</span> <span class="token operator">+</span>
                <span class="token string">&quot;id=&#39;&quot;</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&quot;, content=&#39;&quot;</span> <span class="token operator">+</span> content <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&quot;, publishtime=&quot;</span> <span class="token operator">+</span> publishtime <span class="token operator">+</span>
                <span class="token string">&quot;, userid=&#39;&quot;</span> <span class="token operator">+</span> userid <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&quot;, nickname=&#39;&quot;</span> <span class="token operator">+</span> nickname <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&quot;, createdatetime=&quot;</span> <span class="token operator">+</span> createdatetime <span class="token operator">+</span>
                <span class="token string">&quot;, likenum=&quot;</span> <span class="token operator">+</span> likenum <span class="token operator">+</span>
                <span class="token string">&quot;, replynum=&quot;</span> <span class="token operator">+</span> replynum <span class="token operator">+</span>
                <span class="token string">&quot;, state=&#39;&quot;</span> <span class="token operator">+</span> state <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&quot;, parentid=&#39;&quot;</span> <span class="token operator">+</span> parentid <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                <span class="token string">&quot;, articleid=&#39;&quot;</span> <span class="token operator">+</span> articleid <span class="token operator">+</span> <span class="token char">&#39;\\&#39;&#39;</span> <span class="token operator">+</span>
                <span class="token char">&#39;}&#39;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><p>索引可以大大提升查询效率，一般在查询字段上添加索引，索引的添加可以通过Mongo的命令来添加，也可以在Java的实体类中通过注解添加。</p><p>1）单字段索引注解<code>@Indexed</code> （org.springframework.data.mongodb.core.index.Indexed.class） 声明该字段需要索引，建索引可以大大的提高查询效率。</p><p>Mongo命令参考：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2）复合索引注解<code>@CompoundIndex</code>（org.springframework.data.mongodb.core.index.CompoundIndex.class） 复合索引的声明，建复合索引可以有效地提高多字段的查询效率。</p><p>Mongo命令参考：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">createIndex</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&quot;userid&quot;</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string-property property">&quot;nickname&quot;</span><span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_5-6-文章评论的基本增删改查" tabindex="-1"><a class="header-anchor" href="#_5-6-文章评论的基本增删改查" aria-hidden="true">#</a> 5.6 文章评论的基本增删改查</h2><p>（1）创建数据访问接口 cn.itcast.article包下创建dao包，包下创建接口cn.itcast.article.dao.CommentRepository</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>article<span class="token punctuation">.</span>dao</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>article<span class="token punctuation">.</span>po<span class="token punctuation">.</span></span><span class="token class-name">Comment</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Page</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Pageable</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>mongodb<span class="token punctuation">.</span>repository<span class="token punctuation">.</span></span><span class="token class-name">MongoRepository</span></span><span class="token punctuation">;</span>
<span class="token comment">//评论的持久层接口</span>
<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">CommentRepository</span> <span class="token keyword">extends</span> <span class="token class-name">MongoRepository</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token punctuation">{</span>

<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）创建业务逻辑类 cn.itcast.article包下创建service包，包下创建类cn.itcast.article.service.CommentService</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>article<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>article<span class="token punctuation">.</span>dao<span class="token punctuation">.</span></span><span class="token class-name">CommentRepository</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>article<span class="token punctuation">.</span>po<span class="token punctuation">.</span></span><span class="token class-name">Comment</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>
<span class="token comment">//评论的业务层</span>
<span class="token annotation punctuation">@Service</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommentService</span> <span class="token punctuation">{</span>
    <span class="token comment">//注入dao</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">CommentRepository</span> commentRepository<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 保存一个评论
     * <span class="token keyword">@param</span> <span class="token parameter">comment</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">saveComment</span><span class="token punctuation">(</span><span class="token class-name">Comment</span> comment<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">//如果需要自定义主键，可以在这里指定主键；如果不指定主键，MongoDB会自动生成主键</span>
		<span class="token comment">//设置一些默认初始值。。。</span>
		<span class="token comment">//调用dao</span>
        commentRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * 更新评论
     * <span class="token keyword">@param</span> <span class="token parameter">comment</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateComment</span><span class="token punctuation">(</span><span class="token class-name">Comment</span> comment<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">//调用dao</span>
        commentRepository<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * 根据id删除评论
     * <span class="token keyword">@param</span> <span class="token parameter">id</span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteCommentById</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">//调用dao</span>
        commentRepository<span class="token punctuation">.</span><span class="token function">deleteById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * 查询所有评论
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> <span class="token function">findCommentList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">//调用dao</span>
        <span class="token keyword">return</span> commentRepository<span class="token punctuation">.</span><span class="token function">findAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * 根据id查询评论
     * <span class="token keyword">@param</span> <span class="token parameter">id</span>
     * <span class="token keyword">@return</span>
     */</span>
    <span class="token keyword">public</span> <span class="token class-name">Comment</span> <span class="token function">findCommentById</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">//调用dao</span>
        <span class="token keyword">return</span> commentRepository<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）新建Junit测试类，测试保存和查询所有：</p><p>cn.itcast.article.service.CommentServiceTest</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>article<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>article<span class="token punctuation">.</span></span><span class="token class-name">ArticleApplication</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>article<span class="token punctuation">.</span>po<span class="token punctuation">.</span></span><span class="token class-name">Comment</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span></span><span class="token class-name">RunWith</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">SpringBootTest</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>data<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Page</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span></span><span class="token class-name">SpringRunner</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDateTime</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token comment">//测试评论的业务层</span>
<span class="token comment">//SpringBoot的Junit集成测试</span>
<span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span><span class="token class-name">SpringRunner</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token comment">//SpringBoot的测试环境初始化，参数：启动类</span>
<span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> <span class="token class-name">ArticleApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CommentServiceTest</span> <span class="token punctuation">{</span>
    <span class="token comment">//注入Service</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">CommentService</span> commentService<span class="token punctuation">;</span>
    <span class="token doc-comment comment">/**
     * 保存一个评论
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSaveComment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Comment</span> comment<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Comment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        comment<span class="token punctuation">.</span><span class="token function">setArticleid</span><span class="token punctuation">(</span><span class="token string">&quot;100000&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        comment<span class="token punctuation">.</span><span class="token function">setContent</span><span class="token punctuation">(</span><span class="token string">&quot;测试添加的数据&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        comment<span class="token punctuation">.</span><span class="token function">setCreatedatetime</span><span class="token punctuation">(</span><span class="token class-name">LocalDateTime</span><span class="token punctuation">.</span><span class="token function">now</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        comment<span class="token punctuation">.</span><span class="token function">setUserid</span><span class="token punctuation">(</span><span class="token string">&quot;1003&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        comment<span class="token punctuation">.</span><span class="token function">setNickname</span><span class="token punctuation">(</span><span class="token string">&quot;凯撒大帝&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        comment<span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        comment<span class="token punctuation">.</span><span class="token function">setLikenum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        comment<span class="token punctuation">.</span><span class="token function">setReplynum</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        commentService<span class="token punctuation">.</span><span class="token function">saveComment</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * 查询所有数据
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testFindAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> commentService<span class="token punctuation">.</span><span class="token function">findCommentList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token doc-comment comment">/**
     * 测试根据id查询
     */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testFindCommentById</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Comment</span> comment <span class="token operator">=</span> commentService<span class="token punctuation">.</span><span class="token function">findCommentById</span><span class="token punctuation">(</span><span class="token string">&quot;64000e62994c064a491f7340&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加结果：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;$oid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;64000e62994c064a491f7340&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span> <span class="token string">&quot;测试添加的数据&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;凯撒大帝&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;createdatetime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;$date&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;$numberLong&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1677725282221&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;likenum&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;replynum&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;state&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;articleid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100000&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;_class&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cn.itcast.article.po.Comment&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230302105649383.png" alt="image-20230302105649383" tabindex="0" loading="lazy"><figcaption>image-20230302105649383</figcaption></figure><h2 id="_5-7-根据上级id查询文章评论的分页列表" tabindex="-1"><a class="header-anchor" href="#_5-7-根据上级id查询文章评论的分页列表" aria-hidden="true">#</a> 5.7 根据上级ID查询文章评论的分页列表</h2><p>（1）CommentRepository新增方法定义</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//根据父id，查询子评论的分页列表</span>
<span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> <span class="token function">findByParentid</span><span class="token punctuation">(</span><span class="token class-name">String</span> parentid<span class="token punctuation">,</span> <span class="token class-name">Pageable</span> pageable<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）CommentService新增方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
    * 根据父id查询分页列表
    * <span class="token keyword">@param</span> <span class="token parameter">parentid</span>
    * <span class="token keyword">@param</span> <span class="token parameter">page</span>
    * <span class="token keyword">@param</span> <span class="token parameter">size</span>
    * <span class="token keyword">@return</span>
*/</span>
<span class="token keyword">public</span> <span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> <span class="token function">findCommentListPageByParentid</span><span class="token punctuation">(</span><span class="token class-name">String</span> parentid<span class="token punctuation">,</span><span class="token keyword">int</span> page <span class="token punctuation">,</span><span class="token keyword">int</span> size<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">return</span> commentRepository<span class="token punctuation">.</span><span class="token function">findByParentid</span><span class="token punctuation">(</span>parentid<span class="token punctuation">,</span> <span class="token class-name">PageRequest</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>page<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>size<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）junit测试用例：</p><p>cn.itcast.article.service.CommentServiceTest</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
* 测试根据父id查询子评论的分页列表
*/</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testFindCommentListPageByParentid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">Page</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Comment</span><span class="token punctuation">&gt;</span></span> pageResponse <span class="token operator">=</span> commentService<span class="token punctuation">.</span><span class="token function">findCommentListPageByParentid</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----总记录数：&quot;</span><span class="token operator">+</span>pageResponse<span class="token punctuation">.</span><span class="token function">getTotalElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----当前页数据：&quot;</span><span class="token operator">+</span>pageResponse<span class="token punctuation">.</span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（4）测试</p><p>使用compass快速插入一条测试数据，数据的内容是对3号评论内容进行评论。</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;$oid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;640014693aa80868c450ac50&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;content&quot;</span><span class="token operator">:</span><span class="token string">&quot;测试添加父节点为3的数据&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;userid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1003&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;nickname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;凯撒&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;articleid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;parentid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;3&quot;</span>  
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230302111421444.png" alt="image-20230302111421444" tabindex="0" loading="lazy"><figcaption>image-20230302111421444</figcaption></figure><p>执行测试，结果：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>----总记录数：1
----当前页数据：<span class="token punctuation">[</span>Comment<span class="token punctuation">{</span>id<span class="token operator">=</span><span class="token string">&#39;640014693aa80868c450ac50&#39;</span>, <span class="token assign-left variable">content</span><span class="token operator">=</span><span class="token string">&#39;测试添加父节点为3的数据&#39;</span>, <span class="token assign-left variable">publishtime</span><span class="token operator">=</span>null, <span class="token assign-left variable">userid</span><span class="token operator">=</span><span class="token string">&#39;1003&#39;</span>, <span class="token assign-left variable">nickname</span><span class="token operator">=</span><span class="token string">&#39;凯撒&#39;</span>, <span class="token assign-left variable">createdatetime</span><span class="token operator">=</span>null, <span class="token assign-left variable">likenum</span><span class="token operator">=</span>null, <span class="token assign-left variable">replynum</span><span class="token operator">=</span>null, <span class="token assign-left variable">state</span><span class="token operator">=</span><span class="token string">&#39;null&#39;</span>, <span class="token assign-left variable">parentid</span><span class="token operator">=</span><span class="token string">&#39;3&#39;</span>, <span class="token assign-left variable">articleid</span><span class="token operator">=</span><span class="token string">&#39;100001&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-8-mongotemplate实现评论点赞" tabindex="-1"><a class="header-anchor" href="#_5-8-mongotemplate实现评论点赞" aria-hidden="true">#</a> 5.8 MongoTemplate实现评论点赞</h2><p>我们看一下以下点赞的临时示例代码： CommentService 新增updateThumbup方法</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
* 点赞-效率低
* <span class="token keyword">@param</span> <span class="token parameter">id</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateCommentThumbupToIncrementingOld</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token class-name">Comment</span> comment <span class="token operator">=</span> <span class="token class-name">CommentRepository</span><span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	comment<span class="token punctuation">.</span><span class="token function">setLikenum</span><span class="token punctuation">(</span>comment<span class="token punctuation">.</span><span class="token function">getLikenum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token class-name">CommentRepository</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>comment<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上方法虽然实现起来比较简单，但是执行效率并不高，因为我只需要将点赞数加1就可以了，没必要查询出所有字段修改后再更新所有字段。(蝴蝶效应) 我们可以使用MongoTemplate类来实现对某列的操作。</p><p>（1）修改CommentService</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token comment">//注入MongoTemplate</span>
<span class="token annotation punctuation">@Autowired</span>
<span class="token keyword">private</span> <span class="token class-name">MongoTemplate</span> mongoTemplate<span class="token punctuation">;</span>
<span class="token doc-comment comment">/**
* 点赞数+1
* <span class="token keyword">@param</span> <span class="token parameter">id</span>
*/</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateCommentLikenum</span><span class="token punctuation">(</span><span class="token class-name">String</span> id<span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//查询对象</span>
	<span class="token class-name">Query</span> query<span class="token operator">=</span><span class="token class-name">Query</span><span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token class-name">Criteria</span><span class="token punctuation">.</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string">&quot;_id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//更新对象</span>
	<span class="token class-name">Update</span> update<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//局部更新，相当于$set</span>
	<span class="token comment">// update.set(key,value)</span>
	<span class="token comment">//递增$inc</span>
	<span class="token comment">// update.inc(&quot;likenum&quot;,1);</span>
	update<span class="token punctuation">.</span><span class="token function">inc</span><span class="token punctuation">(</span><span class="token string">&quot;likenum&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//参数1：查询对象</span>
	<span class="token comment">//参数2：更新对象</span>
	<span class="token comment">//参数3：集合的名字或实体类的类型Comment.class</span>
	mongoTemplate<span class="token punctuation">.</span><span class="token function">updateFirst</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span>update<span class="token punctuation">,</span><span class="token string">&quot;comment&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）测试用例：</p><p>cn.itcast.article.service.CommentServiceTest</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
* 点赞数+1
*/</span>
<span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUpdateCommentLikenum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//对3号文档的点赞数+1</span>
	commentService<span class="token punctuation">.</span><span class="token function">updateCommentLikenum</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行测试用例后，发现点赞数+1了：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230302112838296.png" alt="image-20230302112838296" tabindex="0" loading="lazy"><figcaption>image-20230302112838296</figcaption></figure><h1 id="mongodb集群和安全" tabindex="-1"><a class="header-anchor" href="#mongodb集群和安全" aria-hidden="true">#</a> MongoDB集群和安全</h1><h1 id="课程目标-1" tabindex="-1"><a class="header-anchor" href="#课程目标-1" aria-hidden="true">#</a> 课程目标</h1><ul><li><p>MongoDB的副本集：操作、主要概念、故障转移、选举规则</p></li><li><p>MongoDB的分片集群：概念、优点、操作、分片策略、故障转移</p></li><li><p>MongoDB的安全认证</p></li></ul><h1 id="_1-副本集-replica-sets" tabindex="-1"><a class="header-anchor" href="#_1-副本集-replica-sets" aria-hidden="true">#</a> 1. 副本集-Replica Sets</h1><h2 id="_1-1-简介" tabindex="-1"><a class="header-anchor" href="#_1-1-简介" aria-hidden="true">#</a> 1.1 简介</h2><p>MongoDB中的副本集（Replica Set）是一组维护相同数据集的mongod服务。副本集可提供冗余和高可用性，是所有生产部署的基础。</p><p>也可以说，副本集类似于有自动故障恢复功能的主从集群。通俗的讲就是用多台机器进行同一数据的异步同步，从而使多台机器拥有同一数据的多个副本，并且当主库当掉时在不需要用户干预的情况下自动切换其他备份服务器做主库。而且还可以利用副本服务器做只读服务器，实现读写分离，提高负载。</p><p><strong>（1）冗余和数据可用性</strong></p><p>复制提供冗余并提高数据可用性。通过在不同数据库服务器上提供多个数据副本，复制可提供一定级别的容错功能，以防止丢失单个数据库服务器。</p><p>在某些情况下，复制可以提供增加的读取性能，因为客户端可以将读取操作发送到不同的服务上， 在不同数据中心维护数据副本可以增加分布式应用程序的数据位置和可用性。 您还可以为专用目的维护其他副本，例如灾难恢复，报告或备份。</p><p><strong>（2）MongoDB中的复制</strong></p><p>副本集是一组维护相同数据集的mongod实例。副本集包含多个数据承载节点和可选的一个仲裁节点。在承载数据的节点中，一个且仅一个成员被视为主节点，而其他节点被视为次要（从）节点。</p><p>主节点接收所有写操作。副本集只能有一个主要能够确认具有{w：&quot;most&quot;}写入关注的写入;虽然在某些情况下，另一个mongod实例可能暂时认为自己也是主要的。主要记录其操作日志中的数据集的所有更改，即oplog。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230228105215788.png" alt="image-20230228105215788" tabindex="0" loading="lazy"><figcaption>image-20230228105215788</figcaption></figure><p>辅助(副本)节点复制主节点的oplog并将操作应用于其数据集，以使辅助节点的数据集反映主节点的数据集。如果主要人员不在，则符合条件的中学将举行选举以选出新的主要人员。</p><p><strong>（3）主从复制和副本集区别</strong></p><p>主从集群和副本集最大的区别就是副本集没有固定的&quot;主节点&quot;；整个集群会选出一个&quot;主节点&quot;，当其挂掉后，又在剩下的从节点中选中其他节点为&quot;主节点&quot;，副本集总有一个活跃点(主、primary)和一个或多个备份节点(从、secondary)。</p><h2 id="_1-2-副本集的三个角色" tabindex="-1"><a class="header-anchor" href="#_1-2-副本集的三个角色" aria-hidden="true">#</a> 1.2 副本集的三个角色</h2><p>副本集有两种类型三种角色</p><p>两种类型：</p><ul><li><p>主节点（Primary）类型：数据操作的主要连接点，可读写。</p></li><li><p>次要（辅助、从）节点（Secondaries）类型：数据冗余备份节点，可以读或选举。</p></li></ul><p>三种角色：</p><p><strong>主要成员（Primary）</strong>：主要接收所有写操作。就是主节点。</p><p><strong>副本成员（Replicate）</strong>：从主节点通过复制操作以维护相同的数据集，即备份数据，不可写操作，但可以读操作（但需要配置）。是默认的一种从节点类型。</p><p><strong>仲裁者（Arbiter）</strong>：不保留任何数据的副本，只具有投票选举作用。当然也可以将仲裁服务器维护为副本集的一部分，即副本成员同时也可以是仲裁者。也是一种从节点类型。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230228105421331.png" alt="image-20230228105421331" tabindex="0" loading="lazy"><figcaption>image-20230228105421331</figcaption></figure><p>关于仲裁者的额外说明：</p><p>您可以将额外的mongod实例添加到副本集作为仲裁者。 仲裁者不维护数据集。仲裁者的目的是通过响应其他副本集成员的心跳和选举请求来维护副本集中的仲裁。因为它们不存储数据集，所以仲裁器可以是提供副本集仲裁功能的好方法，其资源成本比具有数据集的全功能副本集成员更便宜。</p><p>如果您的副本集具有偶数个成员，请添加仲裁者以获得主要选举中的&quot;大多数&quot;投票。仲裁者不需要专用硬件。</p><p>仲裁者将永远是仲裁者，而主要人员可能会退出并成为次要人员，而次要人员可能成为选举期间的主要人员。</p><p>如果你的副本+主节点的个数是偶数，建议加一个仲裁者，形成奇数，容易满足大多数的投票。</p><p>如果你的副本+主节点的个数是奇数，可以不加仲裁者。</p><h2 id="_1-3-副本集架构目标" tabindex="-1"><a class="header-anchor" href="#_1-3-副本集架构目标" aria-hidden="true">#</a> 1.3 副本集架构目标</h2><p>一主一副本一仲裁</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230228105508095.png" alt="image-20230228105508095" tabindex="0" loading="lazy"><figcaption>image-20230228105508095</figcaption></figure><h2 id="_1-4-副本集的创建" tabindex="-1"><a class="header-anchor" href="#_1-4-副本集的创建" aria-hidden="true">#</a> 1.4 副本集的创建</h2><h3 id="_1-4-1-第一步-创建主节点" tabindex="-1"><a class="header-anchor" href="#_1-4-1-第一步-创建主节点" aria-hidden="true">#</a> 1.4.1 第一步：创建主节点</h3><p>建立存放数据和日志的目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#-----------myrs</span>
<span class="token comment">#主节点</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/replica_sets/myrs_27017/log <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/replica_sets/myrs_27017/data/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /mongodb/replica_sets/myrs_27017/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>myrs_27017：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	<span class="token key atrule">destination</span><span class="token punctuation">:</span> file
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/replica_sets/myrs_27017/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
	<span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
	<span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/replica_sets/myrs_27017/data/db&quot;</span>
	<span class="token key atrule">journal</span><span class="token punctuation">:</span>
		<span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
		<span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/replica_sets/myrs_27017/log/mongod.pid&quot;</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定所有IP，有副作用，副本集初始化的时候，节点名字会自动设置为本地域名，而不是ip</span>
	<span class="token comment">#bindIpAll: true</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#bindIp</span>
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27017</span>
<span class="token key atrule">replication</span><span class="token punctuation">:</span>
	<span class="token comment">#副本集的名称</span>
	<span class="token key atrule">replSetName</span><span class="token punctuation">:</span> myrs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动节点服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost replica_sets<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongod -f</span>
/mongodb/replica_sets/myrs_27017/mongod.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">54257</span>
child process started successfully, parent exiting
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-2-第二步-创建副本节点" tabindex="-1"><a class="header-anchor" href="#_1-4-2-第二步-创建副本节点" aria-hidden="true">#</a> 1.4.2 第二步：创建副本节点</h3><p>建立存放数据和日志的目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#-----------myrs</span>
<span class="token comment">#副本节点</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/replica_sets/myrs_27018/log <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/replica_sets/myrs_27018/data/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /mongodb/replica_sets/myrs_27018/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>myrs_27018：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	<span class="token key atrule">destination</span><span class="token punctuation">:</span> file
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/replica_sets/myrs_27018/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
	<span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
	<span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/replica_sets/myrs_27018/data/db&quot;</span>
	<span class="token key atrule">journal</span><span class="token punctuation">:</span>
		<span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
		<span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/replica_sets/myrs_27018/log/mongod.pid&quot;</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定所有IP，有副作用，副本集初始化的时候，节点名字会自动设置为本地域名，而不是ip</span>
	<span class="token comment">#bindIpAll: true</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#bindIp</span>
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27018</span>
<span class="token key atrule">replication</span><span class="token punctuation">:</span>
	<span class="token comment">#副本集的名称</span>
	<span class="token key atrule">replSetName</span><span class="token punctuation">:</span> myrs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动节点服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost replica_sets<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongod -f</span>
/mongodb/replica_sets/myrs_27018/mongod.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">54361</span>
child process started successfully, parent exiting
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-3-第三步-创建仲裁节点" tabindex="-1"><a class="header-anchor" href="#_1-4-3-第三步-创建仲裁节点" aria-hidden="true">#</a> 1.4.3 第三步：创建仲裁节点</h3><p>建立存放数据和日志的目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#-----------myrs</span>
<span class="token comment">#仲裁节点</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/replica_sets/myrs_27019/log <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/replica_sets/myrs_27019/data/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>仲裁节点：</p><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /mongodb/replica_sets/myrs_27019/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>myrs_27019：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	<span class="token key atrule">destination</span><span class="token punctuation">:</span> file
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/replica_sets/myrs_27019/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
	<span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
	<span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/replica_sets/myrs_27019/data/db&quot;</span>
	<span class="token key atrule">journal</span><span class="token punctuation">:</span>
		<span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
		<span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/replica_sets/myrs_27019/log/mongod.pid&quot;</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定所有IP，有副作用，副本集初始化的时候，节点名字会自动设置为本地域名，而不是ip</span>
	<span class="token comment">#bindIpAll: true</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#bindIp</span>
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27019</span>
<span class="token key atrule">replication</span><span class="token punctuation">:</span>
	<span class="token comment">#副本集的名称</span>
	<span class="token key atrule">replSetName</span><span class="token punctuation">:</span> myrs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动节点服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost replica_sets<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongod -f</span>
/mongodb/replica_sets/myrs_27019/mongod.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">54410</span>
child process started successfully, parent exiting
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-5-第四步-初始化配置副本集和主节点" tabindex="-1"><a class="header-anchor" href="#_1-4-5-第四步-初始化配置副本集和主节点" aria-hidden="true">#</a> 1.4.5 第四步：初始化配置副本集和主节点</h3><p>使用客户端命令连接任意一个节点，但这里尽量要连接主节点(27017节点)：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongo <span class="token parameter variable">--host</span><span class="token operator">=</span><span class="token number">180.76</span>.159.126 <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">27017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>结果，连接上之后，很多命令无法使用，，比如 <code>show dbs</code> 等，必须初始化副本集才行 准备初始化新的副本集：</p><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>rs<span class="token punctuation">.</span><span class="token function">initiate</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项：</p>`,127),bn=n("thead",null,[n("tr",null,[n("th",null,"Parameter"),n("th",null,"Type"),n("th",null,"Description")])],-1),gn=n("td",null,[n("code",null,"configuration")],-1),qn=n("td",null,"document",-1),hn={href:"https://docs.mongodb.com/manual/reference/replica-configuration/#replica-set-configuration-document",target:"_blank",rel:"noopener noreferrer"},yn={href:"https://docs.mongodb.com/manual/reference/replica-configuration/#replica-set-configuration-document",target:"_blank",rel:"noopener noreferrer"},fn={href:"https://docs.mongodb.com/manual/reference/replica-configuration/#replica-set-configuration-document",target:"_blank",rel:"noopener noreferrer"},_n=e(`<p>【示例】</p><p>使用默认的配置来初始化副本集：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>rs<span class="token punctuation">.</span><span class="token function">initiate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行结果：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> rs<span class="token punctuation">.</span><span class="token function">initiate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string-property property">&quot;info2&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;no configuration specified. Using a default configuration for the set&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;me&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27017&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;ok&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;operationTime&quot;</span> <span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565760476</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;$clusterTime&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&quot;clusterTime&quot;</span> <span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565760476</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token string-property property">&quot;signature&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token string-property property">&quot;hash&quot;</span> <span class="token operator">:</span> <span class="token function">BinData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token string-property property">&quot;keyId&quot;</span> <span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token literal-property property">myrs</span><span class="token operator">:</span><span class="token constant">SECONDARY</span><span class="token operator">&gt;</span>
<span class="token literal-property property">myrs</span><span class="token operator">:</span><span class="token constant">PRIMARY</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><p>1）&quot;ok&quot;的值为1，说明创建成功。</p><p>2）命令行提示符发生变化，变成了一个从节点角色，此时默认不能读写。稍等片刻，回车，变成主节点。</p><h3 id="_1-4-6-第五步-查看副本集的配置内容" tabindex="-1"><a class="header-anchor" href="#_1-4-6-第五步-查看副本集的配置内容" aria-hidden="true">#</a> 1.4.6 第五步：查看副本集的配置内容</h3><p>说明：</p><p>返回包含当前副本集配置的文档。</p><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>rs<span class="token punctuation">.</span><span class="token function">conf</span><span class="token punctuation">(</span>configuration<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>提示：</p><p><code>rs.config()</code>是该方法的别名。 configuration：可选，如果没有配置，则使用默认主节点配置。</p><p>【示例】</p><p>在27017上执行副本集中当前节点的默认节点配置</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">myrs</span><span class="token operator">:</span><span class="token constant">PRIMARY</span><span class="token operator">&gt;</span> rs<span class="token punctuation">.</span><span class="token function">conf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;myrs&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;version&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;protocolVersion&quot;</span> <span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;writeConcernMajorityJournalDefault&quot;</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;members&quot;</span> <span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token punctuation">{</span>
			<span class="token string-property property">&quot;_id&quot;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
			<span class="token string-property property">&quot;host&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27017&quot;</span><span class="token punctuation">,</span>
			<span class="token string-property property">&quot;arbiterOnly&quot;</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
			<span class="token string-property property">&quot;buildIndexes&quot;</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
			<span class="token string-property property">&quot;hidden&quot;</span> <span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
			<span class="token string-property property">&quot;priority&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
			<span class="token string-property property">&quot;tags&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token string-property property">&quot;slaveDelay&quot;</span> <span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token string-property property">&quot;votes&quot;</span> <span class="token operator">:</span> <span class="token number">1</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;settings&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&quot;chainingAllowed&quot;</span> <span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
		<span class="token string-property property">&quot;heartbeatIntervalMillis&quot;</span> <span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>
		<span class="token string-property property">&quot;heartbeatTimeoutSecs&quot;</span> <span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
		<span class="token string-property property">&quot;electionTimeoutMillis&quot;</span> <span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>
		<span class="token string-property property">&quot;catchUpTimeoutMillis&quot;</span> <span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
		<span class="token string-property property">&quot;catchUpTakeoverDelayMillis&quot;</span> <span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>
		<span class="token string-property property">&quot;getLastErrorModes&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token string-property property">&quot;getLastErrorDefaults&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token string-property property">&quot;w&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
			<span class="token string-property property">&quot;wtimeout&quot;</span> <span class="token operator">:</span> <span class="token number">0</span>
		<span class="token punctuation">}</span><span class="token punctuation">,</span>
		<span class="token string-property property">&quot;replicaSetId&quot;</span> <span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;5d539bdcd6a308e600d126bb&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><p>1） <code>&quot;_id&quot; : &quot;myrs&quot;</code> ：副本集的配置数据存储的主键值，默认就是副本集的名字</p><p>2）<code>&quot;members&quot;</code> ：副本集成员数组，此时只有一个： <code>&quot;host&quot; : &quot;180.76.159.126:27017&quot;</code> ，该成员不 是仲裁节点： <code>&quot;arbiterOnly&quot; : false</code> ，优先级（权重值）： <code>&quot;priority&quot; : 1</code></p><p>3） <code>&quot;settings&quot;</code> ：副本集的参数配置。</p><p>提示：副本集配置的查看命令，本质是查询的是<code>system.replset</code>的表中的数据：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myrs:PRIMARY<span class="token operator">&gt;</span> use <span class="token builtin class-name">local</span>
switched to db <span class="token builtin class-name">local</span>
myrs:PRIMARY<span class="token operator">&gt;</span> show collections
oplog.rs
replset.election
replset.minvalid
replset.oplogTruncateAfterPoint
startup_log
system.replset
system.rollback.id
myrs:PRIMARY<span class="token operator">&gt;</span> db.system.replset.<span class="token function-name function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myrs&quot;</span>, <span class="token string">&quot;version&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>, <span class="token string">&quot;protocolVersion&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>,
<span class="token string">&quot;writeConcernMajorityJournalDefault&quot;</span> <span class="token builtin class-name">:</span> true, <span class="token string">&quot;members&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">0</span>, <span class="token string">&quot;host&quot;</span> <span class="token builtin class-name">:</span>
<span class="token string">&quot;180.76.159.126:27017&quot;</span>, <span class="token string">&quot;arbiterOnly&quot;</span> <span class="token builtin class-name">:</span> false, <span class="token string">&quot;buildIndexes&quot;</span> <span class="token builtin class-name">:</span> true, <span class="token string">&quot;hidden&quot;</span> <span class="token builtin class-name">:</span>
false, <span class="token string">&quot;priority&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>, <span class="token string">&quot;tags&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>, <span class="token string">&quot;slaveDelay&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>, <span class="token string">&quot;votes&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span> <span class="token punctuation">]</span>, <span class="token string">&quot;settings&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;chainingAllowed&quot;</span> <span class="token builtin class-name">:</span> true, <span class="token string">&quot;heartbeatIntervalMillis&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">2000</span>,
<span class="token string">&quot;heartbeatTimeoutSecs&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">10</span>, <span class="token string">&quot;electionTimeoutMillis&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">10000</span>,
<span class="token string">&quot;catchUpTimeoutMillis&quot;</span> <span class="token builtin class-name">:</span> -1, <span class="token string">&quot;catchUpTakeoverDelayMillis&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">30000</span>,
<span class="token string">&quot;getLastErrorModes&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>, <span class="token string">&quot;getLastErrorDefaults&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;w&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>, <span class="token string">&quot;wtimeout&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">0</span>
<span class="token punctuation">}</span>, <span class="token string">&quot;replicaSetId&quot;</span> <span class="token builtin class-name">:</span> ObjectId<span class="token punctuation">(</span><span class="token string">&quot;5d539bdcd6a308e600d126bb&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
myrs:PRIMARY<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-7-第六步-查看副本集状态" tabindex="-1"><a class="header-anchor" href="#_1-4-7-第六步-查看副本集状态" aria-hidden="true">#</a> 1.4.7 第六步：查看副本集状态</h3><p>检查副本集状态。</p><p>说明：</p><p>返回包含状态信息的文档。此输出使用从副本集的其他成员发送的心跳包中获得的数据反映副本集的当前状态。语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>rs<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>【示例】在27017上查看副本集状态：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">myrs</span><span class="token operator">:</span><span class="token constant">PRIMARY</span><span class="token operator">&gt;</span> rs<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;set&quot;</span><span class="token operator">:</span> <span class="token string">&quot;myrs&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;date&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:29:45.161Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;myState&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;term&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;syncingTo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;syncSourceHost&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;syncSourceId&quot;</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;heartbeatIntervalMillis&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;optimes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;lastCommittedOpTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565760578</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;readConcernMajorityOpTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565760578</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;appliedOpTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565760578</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;durableOpTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565760578</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;lastStableCheckpointTimestamp&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565760528</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;members&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27017&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;health&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;stateStr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PRIMARY&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;uptime&quot;</span><span class="token operator">:</span> <span class="token number">419</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565760578</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optimeDate&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:29:38Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncingTo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncSourceHost&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncSourceId&quot;</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;infoMessage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;could not find member to sync from&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;electionTime&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565760476</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;electionDate&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:27:56Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;configVersion&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;lastHeartbeatMessage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;ok&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565760578</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;$clusterTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;clusterTime&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565760578</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;signature&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;hash&quot;</span><span class="token operator">:</span> <span class="token function">BinData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;keyId&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><p>1） <code>&quot;set&quot; : &quot;myrs&quot;</code> ：副本集的名字</p><p>2） <code>&quot;myState&quot; : </code>：说明状态正常</p><p>3） <code>&quot;members&quot;</code> ：副本集成员数组，此时只有一个： <code>&quot;name&quot; : &quot;180.76.159.126:27017&quot;</code> ，该成员的 角色是 <code>&quot;stateStr&quot; : &quot;PRIMARY&quot;</code>, 该节点是健康的： <code>&quot;health&quot; : 1</code> 。</p><h3 id="_1-4-8-第四步-添加副本从节点" tabindex="-1"><a class="header-anchor" href="#_1-4-8-第四步-添加副本从节点" aria-hidden="true">#</a> 1.4.8 第四步：添加副本从节点</h3><p>在主节点添加从节点，将其他成员加入到副本集</p><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>rs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>host<span class="token punctuation">,</span> arbiterOnly<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>选项：</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>host</code></td><td>string or document</td><td>要添加到副本集的新成员。 指定为字符串或配置文档：1）如果是一个字符串，则需要指定新成员的主机名和可选的端口号；2）如果是一个文档，请指定在members数组中找到的副本集成员配置文档。 您必须在成员配置文档中指定主机字段。有关文档配置字段的说明，详见下方文档：“主机成员的配置文档”</td></tr><tr><td><code>arbiterOnly </code></td><td>boolean</td><td>可选的。 仅在<code>&lt;host&gt;</code>值为字符串时适用。 如果为true，则添加的主机是仲裁者。</td></tr></tbody></table><p>主机成员的配置文档：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    _id<span class="token operator">:</span> &lt;int&gt;<span class="token punctuation">,</span>
    host<span class="token operator">:</span> &lt;string&gt;<span class="token punctuation">,</span> <span class="token comment">// required</span>
    arbiterOnly<span class="token operator">:</span> &lt;boolean&gt;<span class="token punctuation">,</span>
    buildIndexes<span class="token operator">:</span> &lt;boolean&gt;<span class="token punctuation">,</span>
    hidden<span class="token operator">:</span> &lt;boolean&gt;<span class="token punctuation">,</span>
    priority<span class="token operator">:</span> &lt;number&gt;<span class="token punctuation">,</span>
    tags<span class="token operator">:</span> &lt;document&gt;<span class="token punctuation">,</span>
    slaveDelay<span class="token operator">:</span> &lt;int&gt;<span class="token punctuation">,</span>
    votes<span class="token operator">:</span> &lt;number&gt;
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>【示例】</p><p>将27018的副本节点添加到副本集中：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">myrs</span><span class="token operator">:</span> <span class="token constant">PRIMARY</span> <span class="token operator">&gt;</span> rs<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;180.76.159.126:27018&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;ok&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761757</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;$clusterTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;clusterTime&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761757</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;signature&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;hash&quot;</span><span class="token operator">:</span> <span class="token function">BinData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;keyId&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><p>1） <code>&quot;ok&quot; : 1</code> ：说明添加成功。</p><p>查看副本集状态：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">myrs</span><span class="token operator">:</span> <span class="token constant">PRIMARY</span> <span class="token operator">&gt;</span> rs<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;set&quot;</span><span class="token operator">:</span> <span class="token string">&quot;myrs&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;date&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:50:05.738Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;myState&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;term&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;syncingTo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;syncSourceHost&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;syncSourceId&quot;</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;heartbeatIntervalMillis&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;optimes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;lastCommittedOpTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761798</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;readConcernMajorityOpTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761798</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;appliedOpTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761798</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;durableOpTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761798</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;lastStableCheckpointTimestamp&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761798</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;members&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27017&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;health&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;stateStr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PRIMARY&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;uptime&quot;</span><span class="token operator">:</span> <span class="token number">1639</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761798</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optimeDate&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:49:58Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncingTo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncSourceHost&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncSourceId&quot;</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;infoMessage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;electionTime&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565760476</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;electionDate&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:27:56Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;configVersion&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;lastHeartbeatMessage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27018&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;health&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;stateStr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;SECONDARY&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;uptime&quot;</span><span class="token operator">:</span> <span class="token number">48</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761798</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optimeDurable&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761798</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optimeDate&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:49:58Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optimeDurableDate&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:49:58Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;lastHeartbeat&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:50:05.294Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;lastHeartbeatRecv&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span>&quot;<span class="token number">2019</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span>
14T05<span class="token operator">:</span> <span class="token number">50</span><span class="token operator">:</span> <span class="token number">05</span><span class="token punctuation">.</span>476Z&quot;<span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token string-property property">&quot;pingMs&quot;</span> <span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;lastHeartbeatMessage&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;syncingTo&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27017&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;syncSourceHost&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27017&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;syncSourceId&quot;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;infoMessage&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;configVersion&quot;</span> <span class="token operator">:</span> <span class="token number">2</span>
<span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;ok&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761798</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;$clusterTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;clusterTime&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761798</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;signature&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;hash&quot;</span><span class="token operator">:</span> <span class="token function">BinData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;keyId&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><p>1） <code>&quot;name&quot; : &quot;180.76.159.126:27018&quot;</code> 是第二个节点的名字，其角色是 <code>&quot;stateStr&quot; : &quot;SECONDARY&quot;</code></p><h3 id="_1-4-9-第五步-添加仲裁从节点" tabindex="-1"><a class="header-anchor" href="#_1-4-9-第五步-添加仲裁从节点" aria-hidden="true">#</a> 1.4.9 第五步：添加仲裁从节点</h3><p>添加一个仲裁节点到副本集</p><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>rs<span class="token punctuation">.</span><span class="token function">addArb</span><span class="token punctuation">(</span>host<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将27019的仲裁节点添加到副本集中：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">myrs</span><span class="token operator">:</span> <span class="token constant">PRIMARY</span> <span class="token operator">&gt;</span> rs<span class="token punctuation">.</span><span class="token function">addArb</span><span class="token punctuation">(</span><span class="token string">&quot;180.76.159.126:27019&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;ok&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761959</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;$clusterTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;clusterTime&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761959</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;signature&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;hash&quot;</span><span class="token operator">:</span> <span class="token function">BinData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;keyId&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><p>1） <code>&quot;ok&quot; : 1</code> ：说明添加成功。</p><p>查看副本集状态：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">myrs</span><span class="token operator">:</span> <span class="token constant">PRIMARY</span> <span class="token operator">&gt;</span> rs<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;set&quot;</span><span class="token operator">:</span> <span class="token string">&quot;myrs&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;date&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:53:27.198Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;myState&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;term&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;syncingTo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;syncSourceHost&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;syncSourceId&quot;</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;heartbeatIntervalMillis&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;optimes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;lastCommittedOpTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761998</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;readConcernMajorityOpTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761998</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;appliedOpTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761998</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;durableOpTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761998</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;lastStableCheckpointTimestamp&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761978</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;members&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27017&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;health&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;stateStr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;PRIMARY&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;uptime&quot;</span><span class="token operator">:</span> <span class="token number">1841</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761998</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optimeDate&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:53:18Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncingTo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncSourceHost&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncSourceId&quot;</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;infoMessage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;electionTime&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565760476</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;electionDate&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:27:56Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;configVersion&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;self&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;lastHeartbeatMessage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27018&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;health&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;stateStr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;SECONDARY&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;uptime&quot;</span><span class="token operator">:</span> <span class="token number">249</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761998</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optimeDurable&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
                <span class="token string-property property">&quot;ts&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761998</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string-property property">&quot;t&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optimeDate&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:53:18Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;optimeDurableDate&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:53:18Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;lastHeartbeat&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:53:25.668Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;lastHeartbeatRecv&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05: 53: 26.702Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;pingMs&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;lastHeartbeatMessage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncingTo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27017&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncSourceHost&quot;</span><span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27017&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncSourceId&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;infoMessage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;configVersion&quot;</span><span class="token operator">:</span> <span class="token number">3</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27019&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;health&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;state&quot;</span><span class="token operator">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;stateStr&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ARBITER&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;uptime&quot;</span><span class="token operator">:</span> <span class="token number">47</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;lastHeartbeat&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05:53:25.668Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;lastHeartbeatRecv&quot;</span><span class="token operator">:</span> <span class="token function">ISODate</span><span class="token punctuation">(</span><span class="token string">&quot;2019-08-14T05: 53: 25.685Z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;pingMs&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;lastHeartbeatMessage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncingTo&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncSourceHost&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;syncSourceId&quot;</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;infoMessage&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;configVersion&quot;</span><span class="token operator">:</span> <span class="token number">3</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;ok&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;operationTime&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761998</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;$clusterTime&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;clusterTime&quot;</span><span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1565761998</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;signature&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;hash&quot;</span><span class="token operator">:</span> <span class="token function">BinData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;keyId&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>说明：</p><p>1） <code>&quot;name&quot; : &quot;180.76.159.126:27019&quot;</code> 是第二个节点的名字，其角色是 <code>&quot;stateStr&quot; : &quot;ARBITER&quot;</code></p><h2 id="_1-5-副本集的数据读写操作" tabindex="-1"><a class="header-anchor" href="#_1-5-副本集的数据读写操作" aria-hidden="true">#</a> 1.5 副本集的数据读写操作</h2><p>目标：测试三个不同角色的节点的数据读写情况。</p><p>登录主节点27017，写入和读取数据：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost ~<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongo --host 180.76.159.126 --port</span>
<span class="token number">27017</span>
myrs:PRIMARY<span class="token operator">&gt;</span> use articledb
switched to db articledb
myrs:PRIMARY<span class="token operator">&gt;</span> db
articledb
myrs:PRIMARY<span class="token operator">&gt;</span> db.comment.insert<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;articleid&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;100000&quot;</span>,<span class="token string">&quot;content&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;今天天气真好，阳光
明媚&quot;</span>,<span class="token string">&quot;userid&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;1001&quot;</span>,<span class="token string">&quot;nickname&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;Rose&quot;</span>,<span class="token string">&quot;createdatetime&quot;</span>:new Date<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
WriteResult<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;nInserted&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
myrs:PRIMARY<span class="token operator">&gt;</span> db.comment.<span class="token function-name function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> ObjectId<span class="token punctuation">(</span><span class="token string">&quot;5d4d2ae3068138b4570f53bf&quot;</span><span class="token punctuation">)</span>, <span class="token string">&quot;articleid&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;100000&quot;</span>,
<span class="token string">&quot;content&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;今天天气真好，阳光明媚&quot;</span>, <span class="token string">&quot;userid&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;1001&quot;</span>, <span class="token string">&quot;nickname&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;Rose&quot;</span>,
<span class="token string">&quot;createdatetime&quot;</span> <span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-08-09T08:12:19.427Z&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>登录从节点27018</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost ~<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongo --host 180.76.159.126 --port</span>
<span class="token number">27018</span>
myrs:SECONDARY<span class="token operator">&gt;</span> show dbs<span class="token punctuation">;</span>
<span class="token number">2019</span>-09-10T10:56:51.953+0800 E QUERY <span class="token punctuation">[</span>js<span class="token punctuation">]</span> Error: listDatabases failed:<span class="token punctuation">{</span>
<span class="token string">&quot;operationTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1568084204</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">0</span>,
<span class="token string">&quot;errmsg&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;not master and slaveOk=false&quot;</span>,
<span class="token string">&quot;code&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">13435</span>,
<span class="token string">&quot;codeName&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;NotMasterNoSlaveOk&quot;</span>,
<span class="token string">&quot;<span class="token variable">$clusterTime</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
<span class="token string">&quot;clusterTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1568084204</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
<span class="token string">&quot;signature&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
<span class="token string">&quot;hash&quot;</span> <span class="token builtin class-name">:</span> BinData<span class="token punctuation">(</span><span class="token number">0</span>,<span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span>,
<span class="token string">&quot;keyId&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">}</span> <span class="token builtin class-name">:</span>
_getErrorWithCode@src/mongo/shell/utils.js:25:13
Mongo.prototype.getDBs@src/mongo/shell/mongo.js:139:1
shellHelper.show@src/mongo/shell/utils.js:882:13
shellHelper@src/mongo/shell/utils.js:766:15
@<span class="token punctuation">(</span>shellhelp2<span class="token punctuation">)</span>:1:1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发现，不能读取集合的数据。当前从节点只是一个备份，不是奴隶节点，无法读取数据，写当然更不行。因为默认情况下，从节点是没有读写权限的，可以增加读的权限，但需要进行设置。</p><p>设置读操作权限：</p><p>说明：设置为奴隶节点，允许在从成员上运行读的操作</p><p>语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>rs<span class="token punctuation">.</span><span class="token function">slaveOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
#或
rs<span class="token punctuation">.</span><span class="token function">slaveOk</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>提示：</p><p>该命令是<code>db.getMongo().setSlaveOk()</code>的简化命令。</p></blockquote><p>【示例】</p><p>在27018上设置作为奴隶节点权限，具备读权限：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">rs</span><span class="token operator">:</span><span class="token constant">SECONDARY</span><span class="token operator">&gt;</span> rs<span class="token punctuation">.</span><span class="token function">slaveOk</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时，在执行查询命令，运行成功！</p><p>但仍然不允许插入。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myrs:SECONDARY<span class="token operator">&gt;</span> rs.slaveOk<span class="token punctuation">(</span><span class="token punctuation">)</span>
myrs:SECONDARY<span class="token operator">&gt;</span> show dbs<span class="token punctuation">;</span>
admin <span class="token number">0</span>.000GB
articledb <span class="token number">0</span>.000GB
config <span class="token number">0</span>.000GB
<span class="token builtin class-name">local</span> <span class="token number">0</span>.000GB
myrs:SECONDARY<span class="token operator">&gt;</span> use articledb
switched to db articledb
myrs:SECONDARY<span class="token operator">&gt;</span> show collections
comment
myrs:SECONDARY<span class="token operator">&gt;</span> db.comment.<span class="token function-name function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> ObjectId<span class="token punctuation">(</span><span class="token string">&quot;5d7710c04cfd7eee2e3cdabe&quot;</span><span class="token punctuation">)</span>, <span class="token string">&quot;articleid&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;100000&quot;</span>,
<span class="token string">&quot;content&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;今天天气真好，阳光明媚&quot;</span>, <span class="token string">&quot;userid&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;1001&quot;</span>, <span class="token string">&quot;nickname&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;Rose&quot;</span>,
<span class="token string">&quot;createdatetime&quot;</span> <span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-09-10T02:56:00.467Z&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
myrs:SECONDARY<span class="token operator">&gt;</span> db.comment.insert<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;1&quot;</span>,<span class="token string">&quot;articleid&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;100001&quot;</span>,<span class="token string">&quot;content&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;我们
不应该把清晨浪费在手机上，健康很重要，k一杯温水幸福你我
他。&quot;</span>,<span class="token string">&quot;userid&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;1002&quot;</span>,<span class="token string">&quot;nickname&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;相忘于江湖&quot;</span>,<span class="token string">&quot;createdatetime&quot;</span>:new Date<span class="token punctuation">(</span><span class="token string">&quot;2019-08-
05T22:08:15.522Z&quot;</span><span class="token punctuation">)</span>,<span class="token string">&quot;likenum&quot;</span>:NumberInt<span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span>,<span class="token string">&quot;state&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
WriteCommandError<span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token string">&quot;operationTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1568084434</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
	<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">0</span>,
	<span class="token string">&quot;errmsg&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;not master&quot;</span>,
	<span class="token string">&quot;code&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">10107</span>,
	<span class="token string">&quot;codeName&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;NotMaster&quot;</span>,
	<span class="token string">&quot;<span class="token variable">$clusterTime</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
		<span class="token string">&quot;clusterTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1568084434</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
			<span class="token string">&quot;signature&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
			<span class="token string">&quot;hash&quot;</span> <span class="token builtin class-name">:</span> BinData<span class="token punctuation">(</span><span class="token number">0</span>,<span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span>,
			<span class="token string">&quot;keyId&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>现在可实现了读写分离，让主插入数据，让从来读取数据。</p><p>如果要取消作为奴隶节点的读权限：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">myrs</span><span class="token operator">:</span><span class="token constant">SECONDARY</span><span class="token operator">&gt;</span> rs<span class="token punctuation">.</span><span class="token function">slaveOk</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>
<span class="token literal-property property">myrs</span><span class="token operator">:</span><span class="token constant">SECONDARY</span><span class="token operator">&gt;</span> db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token literal-property property">Error</span><span class="token operator">:</span> error<span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token string-property property">&quot;operationTime&quot;</span> <span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1568084459</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;ok&quot;</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;errmsg&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;not master and slaveOk=false&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;code&quot;</span> <span class="token operator">:</span> <span class="token number">13435</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;codeName&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;NotMasterNoSlaveOk&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;$clusterTime&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&quot;clusterTime&quot;</span> <span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1568084459</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token string-property property">&quot;signature&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token string-property property">&quot;hash&quot;</span> <span class="token operator">:</span> <span class="token function">BinData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token string-property property">&quot;keyId&quot;</span> <span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>仲裁者节点，不存放任何业务数据的，可以登录查看</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost ~<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongo --host 180.76.159.126 --port</span>
<span class="token number">27019</span>
myrs:ARBITER<span class="token operator">&gt;</span> rs.slaveOk<span class="token punctuation">(</span><span class="token punctuation">)</span>
myrs:ARBITER<span class="token operator">&gt;</span> show dbs
<span class="token builtin class-name">local</span> <span class="token number">0</span>.000GB
myrs:ARBITER<span class="token operator">&gt;</span> use <span class="token builtin class-name">local</span>
switched to db <span class="token builtin class-name">local</span>
myrs:ARBITER<span class="token operator">&gt;</span> show collections
replset.minvalid
replset.oplogTruncateAfterPoint
startup_log
system.replset
system.rollback.id
myrs:ARBITER<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>发现，只存放副本集配置等数据。</p><h2 id="_1-6-主节点的选举原则" tabindex="-1"><a class="header-anchor" href="#_1-6-主节点的选举原则" aria-hidden="true">#</a> 1.6 主节点的选举原则</h2><p>MongoDB在副本集中，会自动进行主节点的选举，主节点选举的触发条件：</p><ol><li><p>主节点故障</p></li><li><p>主节点网络不可达（默认心跳信息为10秒）</p></li><li><p>人工干预（rs.stepDown(600)）</p></li></ol><p>一旦触发选举，就要根据一定规则来选主节点。</p><p>选举规则是根据票数来决定谁获胜：</p><ul><li><p>票数最高，且获得了&quot;大多数&quot;成员的投票支持的节点获胜。</p><p>&quot;大多数&quot;的定义为：假设复制集内投票成员数量为N，则大多数为 N/2 +1。例如：3个投票成员，则大多数的值是2。当复制集内存活成员数量不足大多数时，整个复制集将无法选举出Primary，复制集将无法提供写服务，处于只读状态。</p></li><li><p>若票数相同，且都获得了&quot;大多数&quot;成员的投票支持的，数据新的节点获胜。</p><p>数据的新旧是通过操作日志oplog来对比的。</p></li></ul><p>在获得票数的时候，优先级（priority）参数影响重大。</p><p>可以通过设置优先级（priority）来设置额外票数。优先级即权重，取值为0-1000，相当于可额外增加0-1000的票数，优先级的值越大，就越可能获得多数成员的投票（votes）数。指定较高的值可使成员更有资格成为主要成员，更低的值可使成员更不符合条件。</p><p>默认情况下，优先级的值是1</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">myrs</span><span class="token operator">:</span> <span class="token constant">PRIMARY</span> <span class="token operator">&gt;</span> rs<span class="token punctuation">.</span><span class="token function">conf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;myrs&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;version&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;protocolVersion&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;writeConcernMajorityJournalDefault&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;members&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27017&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;arbiterOnly&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;buildIndexes&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;hidden&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;priority&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;tags&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;slaveDelay&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;votes&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27018&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;arbiterOnly&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;buildIndexes&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;hidden&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;priority&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;tags&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;slaveDelay&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;votes&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;host&quot;</span><span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27019&quot;</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;arbiterOnly&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;buildIndexes&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;hidden&quot;</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;priority&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;tags&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;slaveDelay&quot;</span><span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;votes&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;chainingAllowed&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;heartbeatIntervalMillis&quot;</span><span class="token operator">:</span> <span class="token number">2000</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;heartbeatTimeoutSecs&quot;</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;electionTimeoutMillis&quot;</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;catchUpTimeoutMillis&quot;</span><span class="token operator">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;catchUpTakeoverDelayMillis&quot;</span><span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;getLastErrorModes&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;getLastErrorDefaults&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;w&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
            <span class="token string-property property">&quot;wtimeout&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;replicaSetId&quot;</span><span class="token operator">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">&quot;5d539bdcd6a308e600d126bb&quot;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出，主节点和副本节点的优先级各为1，即，默认可以认为都已经有了一票。但选举节点，优先级是0，（要注意是，官方说了，选举节点的优先级必须是0，不能是别的值。即不具备选举权，但具有投票权）</p><p>【了解】修改优先级</p><p>比如，下面提升从节点的优先级：</p><p>1）先将配置导入cfg变量</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myrs:SECONDARY<span class="token operator">&gt;</span> <span class="token assign-left variable">cfg</span><span class="token operator">=</span>rs.conf<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2）然后修改值（ID号默认从0开始）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myrs:SECONDARY<span class="token operator">&gt;</span> cfg.members<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>.priority<span class="token operator">=</span><span class="token number">2</span>
<span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>3）重新加载配置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myrs:SECONDARY<span class="token operator">&gt;</span> rs.reconfig<span class="token punctuation">(</span>cfg<span class="token punctuation">)</span>
<span class="token punctuation">{</span> <span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>稍等片刻会重新开始选举。</p><h2 id="_1-7-故障测试" tabindex="-1"><a class="header-anchor" href="#_1-7-故障测试" aria-hidden="true">#</a> 1.7 故障测试</h2><h3 id="_1-7-1-副本节点故障测试" tabindex="-1"><a class="header-anchor" href="#_1-7-1-副本节点故障测试" aria-hidden="true">#</a> 1.7.1 副本节点故障测试</h3><p>关闭27018副本节点：</p><p>发现，主节点和仲裁节点对27018的心跳失败。因为主节点还在，因此，没有触发投票选举。如果此时，在主节点写入数据。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span>&quot;我们不应该把清晨浪费在
手机上，健康很重要，一杯温水幸福你我他。<span class="token string">&quot;,&quot;</span>userid<span class="token string">&quot;:&quot;</span><span class="token number">1002</span><span class="token string">&quot;,&quot;</span>nickname<span class="token string">&quot;:&quot;</span>相忘于江
湖<span class="token string">&quot;,&quot;</span>createdatetime<span class="token string">&quot;:new Date(&quot;</span><span class="token number">2019</span><span class="token operator">-</span><span class="token number">08</span><span class="token operator">-</span>
05T22<span class="token operator">:</span><span class="token number">08</span><span class="token operator">:</span><span class="token number">15</span><span class="token punctuation">.</span>522Z<span class="token string">&quot;),&quot;</span>likenum<span class="token string">&quot;:NumberInt(1000),&quot;</span>state<span class="token string">&quot;:&quot;</span><span class="token number">1</span>&quot;<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再启动从节点，会发现，主节点写入的数据，会自动同步给从节点。</p><h3 id="_1-7-2主节点故障测试" tabindex="-1"><a class="header-anchor" href="#_1-7-2主节点故障测试" aria-hidden="true">#</a> 1.7.2主节点故障测试</h3><p>关闭27017节点</p><p>发现，从节点和仲裁节点对27017的心跳失败，当失败超过10秒，此时因为没有主节点了，会自动发起投票。</p><p>而副本节点只有27018，因此，候选人只有一个就是27018，开始投票。 27019向27018投了一票，27018本身自带一票，因此共两票，超过了&quot;大多数&quot; 27019是仲裁节点，没有选举权，27018不向其投票，其票数是0. 最终结果，27018成为主节点。具备读写功能。</p><p>在27018写入数据查看。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>comment<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string-property property">&quot;_id&quot;</span><span class="token operator">:</span><span class="token string">&quot;2&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;articleid&quot;</span><span class="token operator">:</span><span class="token string">&quot;100001&quot;</span><span class="token punctuation">,</span><span class="token string-property property">&quot;content&quot;</span><span class="token operator">:</span>&quot;我夏天空腹喝凉开水，冬
天喝温开水<span class="token string">&quot;,&quot;</span>userid<span class="token string">&quot;:&quot;</span><span class="token number">1005</span><span class="token string">&quot;,&quot;</span>nickname<span class="token string">&quot;:&quot;</span>伊人憔悴<span class="token string">&quot;,&quot;</span>createdatetime<span class="token string">&quot;:new Date(&quot;</span><span class="token number">2019</span><span class="token operator">-</span>
<span class="token number">08</span><span class="token operator">-</span>05T23<span class="token operator">:</span><span class="token number">58</span><span class="token operator">:</span><span class="token number">51</span><span class="token punctuation">.</span>485Z<span class="token string">&quot;),&quot;</span>likenum<span class="token string">&quot;:NumberInt(888),&quot;</span>state<span class="token string">&quot;:&quot;</span><span class="token number">1</span>&quot;<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再启动27017节点，发现27017变成了从节点，27018仍保持主节点。</p><p>登录27017节点，发现是从节点了，数据自动从27018同步。</p><p>从而实现了高可用。</p><h3 id="_1-7-3-仲裁节点和主节点故障" tabindex="-1"><a class="header-anchor" href="#_1-7-3-仲裁节点和主节点故障" aria-hidden="true">#</a> 1.7.3 仲裁节点和主节点故障</h3><p>先关掉仲裁节点27019，关掉现在的主节点27018</p><p>登录27017后，发现，27017仍然是从节点，副本集中没有主节点了，导致此时，副本集是只读状态，无法写入。</p><p>为啥不选举了？因为27017的票数，没有获得大多数，即没有大于等于2，它只有默认的一票（优先级是1）如果要触发选举，随便加入一个成员即可。</p><ul><li><p>如果只加入27019仲裁节点成员，则主节点一定是27017，因为没得选了，仲裁节点不参与选举，但参与投票。（不演示）</p></li><li><p>如果只加入27018节点，会发起选举。因为27017和27018都是两票，则按照谁数据新，谁当主节点。</p></li></ul><h3 id="_1-7-4-仲裁节点和从节点故障" tabindex="-1"><a class="header-anchor" href="#_1-7-4-仲裁节点和从节点故障" aria-hidden="true">#</a> 1.7.4 仲裁节点和从节点故障</h3><p>先关掉仲裁节点27019，</p><p>关掉现在的副本节点27018</p><p>10秒后，27017主节点自动降级为副本节点。（服务降级）</p><p>副本集不可写数据了，已经故障了。</p><h2 id="_1-8-compass连接副本集" tabindex="-1"><a class="header-anchor" href="#_1-8-compass连接副本集" aria-hidden="true">#</a> 1.8 Compass连接副本集</h2><p>如果使用云服务器需要修改配置中的主节点ip</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> config <span class="token operator">=</span> rs<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
config<span class="token punctuation">.</span>members<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>host<span class="token operator">=</span><span class="token string">&quot;180.76.159.126:27017&quot;</span><span class="token punctuation">;</span>rs<span class="token punctuation">.</span><span class="token function">reconfig</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>compass连接：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230228202843639.png" alt="image-20230228202843639" tabindex="0" loading="lazy"><figcaption>image-20230228202843639</figcaption></figure><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230228202856031.png" alt="image-20230228202856031" tabindex="0" loading="lazy"><figcaption>image-20230228202856031</figcaption></figure><h2 id="_1-9-springdatamongodb连接副本集" tabindex="-1"><a class="header-anchor" href="#_1-9-springdatamongodb连接副本集" aria-hidden="true">#</a> 1.9 SpringDataMongoDB连接副本集</h2><p>副本集语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">mongodb</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>host1<span class="token punctuation">,</span>host2<span class="token punctuation">,</span>host3<span class="token operator">/</span>articledb<span class="token operator">?</span>
connect<span class="token operator">=</span>replicaSet<span class="token operator">&amp;</span>slaveOk<span class="token operator">=</span><span class="token boolean">true</span><span class="token operator">&amp;</span>replicaSet<span class="token operator">=</span>副本集名字
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其中：</p><ul><li><p>slaveOk=true：开启副本节点读的功能，可实现读写分离。</p></li><li><p>connect=replicaSet：自动到副本集中选择读写的主机。如果slaveOK是打开的，则实现了读写分离</p></li></ul><p>【示例】</p><p>连接 replica set 三台服务器 (端口 27017, 27018,和27019)，直接连接第一个服务器，无论是replicaset一部分或者主服务器或者从服务器，写入操作应用在主服务器 并且分布查询到从服务器。</p><p>修改配置文件application.yml</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
	<span class="token comment">#数据源配置</span>
	<span class="token key atrule">data</span><span class="token punctuation">:</span>
	<span class="token key atrule">mongodb</span><span class="token punctuation">:</span>
		<span class="token comment"># 主机地址</span>
		<span class="token comment"># host: 180.76.159.126</span>
		<span class="token comment"># 数据库</span>
		<span class="token comment"># database: articledb</span>
		<span class="token comment"># 默认端口是27017</span>
		<span class="token comment"># port: 27017</span>
		<span class="token comment">#也可以使用uri连接</span>
		<span class="token comment">#uri: mongodb://192.168.40.134:27017/articledb</span>
		<span class="token comment"># 副本集的连接字符串</span>
		<span class="token key atrule">uri</span><span class="token punctuation">:</span> mongodb<span class="token punctuation">:</span>//180.76.159.126<span class="token punctuation">:</span><span class="token number">27017</span><span class="token punctuation">,</span>180.76.159.126<span class="token punctuation">:</span><span class="token number">27018</span><span class="token punctuation">,</span>180.76.159.126<span class="token punctuation">:</span>27019/articledb<span class="token punctuation">?</span>connect=replicaSet<span class="token important">&amp;slaveOk=true&amp;replicaSet=myrs</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：主机必须是副本集中所有的主机，包括主节点、副本节点、仲裁节点。</p><p>SpringDataMongoDB自动实现了读写分离：</p><p>写操作时，只打开主节点连接：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">2019</span>-09-02 <span class="token number">12</span>:16:27.143 INFO <span class="token number">13336</span> --- <span class="token punctuation">[</span> main<span class="token punctuation">]</span>
org.mongodb.driver.connection <span class="token builtin class-name">:</span> Opened connection
<span class="token punctuation">[</span>connectionId<span class="token punctuation">{</span>localValue:4, serverValue:60<span class="token punctuation">}</span><span class="token punctuation">]</span> to <span class="token number">180.76</span>.159.126:27017
<span class="token number">2019</span>-09-02 <span class="token number">12</span>:16:27.376 INFO <span class="token number">13336</span> --- <span class="token punctuation">[</span> main<span class="token punctuation">]</span>
c.i.article.service.CommentServiceTest <span class="token builtin class-name">:</span> Started CommentServiceTest <span class="token keyword">in</span> <span class="token number">5.249</span>
seconds <span class="token punctuation">(</span>JVM running <span class="token keyword">for</span> <span class="token number">6.16</span><span class="token punctuation">)</span>
<span class="token number">2019</span>-09-02 <span class="token number">12</span>:16:27.610 INFO <span class="token number">13336</span> --- <span class="token punctuation">[</span> Thread-2<span class="token punctuation">]</span>
org.mongodb.driver.connection <span class="token builtin class-name">:</span> Closed connection
<span class="token punctuation">[</span>connectionId<span class="token punctuation">{</span>localValue:4, serverValue:60<span class="token punctuation">}</span><span class="token punctuation">]</span> to <span class="token number">180.76</span>.159.126:27017 because the
pool has been closed.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>读操作是，同时打开主节点和从节点连接，但使用从节点获取数据：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">2019</span>-09-02 <span class="token number">12</span>:18:20.254 INFO <span class="token number">4168</span> --- <span class="token punctuation">[</span> main<span class="token punctuation">]</span>
org.mongodb.driver.connection <span class="token builtin class-name">:</span> Opened connection
<span class="token punctuation">[</span>connectionId<span class="token punctuation">{</span>localValue:4, serverValue:62<span class="token punctuation">}</span><span class="token punctuation">]</span> to <span class="token number">180.76</span>.159.126:27017
<span class="token number">2019</span>-09-02 <span class="token number">12</span>:18:20.504 INFO <span class="token number">4168</span> --- <span class="token punctuation">[</span> main<span class="token punctuation">]</span>
c.i.article.service.CommentServiceTest <span class="token builtin class-name">:</span> Started CommentServiceTest <span class="token keyword">in</span> <span class="token number">5.111</span>
seconds <span class="token punctuation">(</span>JVM running <span class="token keyword">for</span> <span class="token number">5.95</span><span class="token punctuation">)</span>
<span class="token number">2019</span>-09-02 <span class="token number">12</span>:18:20.694 INFO <span class="token number">4168</span> --- <span class="token punctuation">[</span> main<span class="token punctuation">]</span>
org.mongodb.driver.connection <span class="token builtin class-name">:</span> Opened connection
<span class="token punctuation">[</span>connectionId<span class="token punctuation">{</span>localValue:5, serverValue:39<span class="token punctuation">}</span><span class="token punctuation">]</span> to <span class="token number">180.76</span>.159.126:27018
<span class="token punctuation">[</span>Comment<span class="token punctuation">{</span>id<span class="token operator">=</span><span class="token string">&#39;5d64930fd1c1dc4ccf71eeac&#39;</span>, <span class="token assign-left variable">content</span><span class="token operator">=</span><span class="token string">&#39;今天天气真好，阳光明媚&#39;</span>,
<span class="token assign-left variable">publishtime</span><span class="token operator">=</span>null, <span class="token assign-left variable">userid</span><span class="token operator">=</span><span class="token string">&#39;1001&#39;</span>, <span class="token assign-left variable">nickname</span><span class="token operator">=</span><span class="token string">&#39;Rose&#39;</span>, <span class="token assign-left variable">createdatetime</span><span class="token operator">=</span><span class="token number">2019</span>-08-
27T10:18:55.768, <span class="token assign-left variable">likenum</span><span class="token operator">=</span>null, <span class="token assign-left variable">replynum</span><span class="token operator">=</span>null, <span class="token assign-left variable">state</span><span class="token operator">=</span><span class="token string">&#39;null&#39;</span>, <span class="token assign-left variable">parentid</span><span class="token operator">=</span><span class="token string">&#39;null&#39;</span>,
<span class="token assign-left variable">articleid</span><span class="token operator">=</span><span class="token string">&#39;100000&#39;</span><span class="token punctuation">}</span>, Comment<span class="token punctuation">{</span>id<span class="token operator">=</span><span class="token string">&#39;1&#39;</span>, <span class="token assign-left variable">content</span><span class="token operator">=</span><span class="token string">&#39;我们不应该把清晨浪费在手机上，健康很重
要，一杯温水幸福你我他。&#39;</span>, <span class="token assign-left variable">publishtime</span><span class="token operator">=</span>null, <span class="token assign-left variable">userid</span><span class="token operator">=</span><span class="token string">&#39;1002&#39;</span>, <span class="token assign-left variable">nickname</span><span class="token operator">=</span><span class="token string">&#39;相忘于江湖&#39;</span>,
<span class="token assign-left variable">createdatetime</span><span class="token operator">=</span><span class="token number">2019</span>-08-06T06:08:15.522, <span class="token assign-left variable">likenum</span><span class="token operator">=</span><span class="token number">1000</span>, <span class="token assign-left variable">replynum</span><span class="token operator">=</span>null, <span class="token assign-left variable">state</span><span class="token operator">=</span><span class="token string">&#39;1&#39;</span>,
<span class="token assign-left variable">parentid</span><span class="token operator">=</span><span class="token string">&#39;null&#39;</span>, <span class="token assign-left variable">articleid</span><span class="token operator">=</span><span class="token string">&#39;100001&#39;</span><span class="token punctuation">}</span>, Comment<span class="token punctuation">{</span>id<span class="token operator">=</span><span class="token string">&#39;2&#39;</span>, <span class="token assign-left variable">content</span><span class="token operator">=</span><span class="token string">&#39;我夏天空腹喝凉开水，
冬天喝温开水&#39;</span>, <span class="token assign-left variable">publishtime</span><span class="token operator">=</span>null, <span class="token assign-left variable">userid</span><span class="token operator">=</span><span class="token string">&#39;1005&#39;</span>, <span class="token assign-left variable">nickname</span><span class="token operator">=</span><span class="token string">&#39;伊人憔悴&#39;</span>,
<span class="token assign-left variable">createdatetime</span><span class="token operator">=</span><span class="token number">2019</span>-08-06T07:58:51.485, <span class="token assign-left variable">likenum</span><span class="token operator">=</span><span class="token number">888</span>, <span class="token assign-left variable">replynum</span><span class="token operator">=</span>null, <span class="token assign-left variable">state</span><span class="token operator">=</span><span class="token string">&#39;1&#39;</span>,
<span class="token assign-left variable">parentid</span><span class="token operator">=</span><span class="token string">&#39;null&#39;</span>, <span class="token assign-left variable">articleid</span><span class="token operator">=</span><span class="token string">&#39;100001&#39;</span><span class="token punctuation">}</span>, Comment<span class="token punctuation">{</span>id<span class="token operator">=</span><span class="token string">&#39;5d6c93a866ecc73210d7d600&#39;</span>,
<span class="token assign-left variable">content</span><span class="token operator">=</span><span class="token string">&#39;测试添加的数据2&#39;</span>, <span class="token assign-left variable">publishtime</span><span class="token operator">=</span>null, <span class="token assign-left variable">userid</span><span class="token operator">=</span><span class="token string">&#39;1003&#39;</span>, <span class="token assign-left variable">nickname</span><span class="token operator">=</span><span class="token string">&#39;凯撒大帝&#39;</span>,
<span class="token assign-left variable">createdatetime</span><span class="token operator">=</span><span class="token number">2019</span>-09-02T11:59:36.525, <span class="token assign-left variable">likenum</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">replynum</span><span class="token operator">=</span><span class="token number">0</span>, <span class="token assign-left variable">state</span><span class="token operator">=</span><span class="token string">&#39;1&#39;</span>,
<span class="token assign-left variable">parentid</span><span class="token operator">=</span><span class="token string">&#39;null&#39;</span>, <span class="token assign-left variable">articleid</span><span class="token operator">=</span><span class="token string">&#39;100000&#39;</span><span class="token punctuation">}</span><span class="token punctuation">]</span>
<span class="token number">2019</span>-09-02 <span class="token number">12</span>:18:20.740 INFO <span class="token number">4168</span> --- <span class="token punctuation">[</span> Thread-2<span class="token punctuation">]</span>
org.mongodb.driver.connection <span class="token builtin class-name">:</span> Closed connection
<span class="token punctuation">[</span>connectionId<span class="token punctuation">{</span>localValue:4, serverValue:62<span class="token punctuation">}</span><span class="token punctuation">]</span> to <span class="token number">180.76</span>.159.126:27017 because the
pool has been closed.
<span class="token number">2019</span>-09-02 <span class="token number">12</span>:18:20.740 INFO <span class="token number">4168</span> --- <span class="token punctuation">[</span> Thread-2<span class="token punctuation">]</span>
org.mongodb.driver.connection <span class="token builtin class-name">:</span> Closed connection
<span class="token punctuation">[</span>connectionId<span class="token punctuation">{</span>localValue:5, serverValue:39<span class="token punctuation">}</span><span class="token punctuation">]</span> to <span class="token number">180.76</span>.159.126:27018 because the
pool has been closed.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>完整的连接字符串的参考（了解）：</p><p>MongoDB客户端连接语法：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">mongodb</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token punctuation">[</span>username<span class="token operator">:</span>password@<span class="token punctuation">]</span>host1<span class="token punctuation">[</span><span class="token operator">:</span>port1<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">,</span>host2<span class="token punctuation">[</span><span class="token operator">:</span>port2<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token punctuation">,</span>hostN<span class="token punctuation">[</span><span class="token operator">:</span>portN<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">/</span><span class="token punctuation">[</span>database<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">?</span>options<span class="token punctuation">]</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>mongodb:// 这是固定的格式，必须要指定。</p></li><li><p>username:password@ 可选项，如果设置，在连接数据库服务器之后，驱动都会尝试登陆这个数据库</p></li><li><p>host1 必须的指定至少一个host, host1是这个URI唯一要填写的。它指定了要连接服务器的地址。如果要连接复制集，请指定多个主机地址。</p></li><li><p>portX 可选的指定端口，如果不填，默认为27017</p></li><li><p>/database如果指定username:password@，连接并验证登陆指定数据库。若不指定，默认打开test 数据库。</p></li><li><p>?options是连接选项。如果不使用/database，则前面需要加上/。所有连接选项都是键值对 name=value，键值对之间通过&amp;或;（分号）隔开</p></li></ul><p>标准的连接格式包含了多个选项(options)，如下所示：</p><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>replicaSet=name</td><td>验证replica set的名称。 Impliesconnect=replicaSet.</td></tr><tr><td>slaveOk=true|false</td><td>true:在connect=direct模式下，驱动会连接第一台机器，即使这台 服务器不是主。在connect=replicaSet模式下，驱动会发送所有的写请求到主并且把读取操作分布在其他从服务器。false: 在 connect=direct模式下，驱动会自动找寻主服务器. 在 connect=replicaSet 模式下，驱动仅仅连接主服务器，并且所有的读写命令都连接到主服务器。</td></tr><tr><td>safe=true|false</td><td>true: 在执行更新操作之后，驱动都会发送getLastError命令来确保更新成功。(还要参考 wtimeoutMS).false: 在每次更新之后，驱动不会发送getLastError来确保更新成功。</td></tr><tr><td>w=n</td><td>驱动添加 { w : n } 到getLastError命令. 应用于safe=true。</td></tr><tr><td>wtimeoutMS=ms</td><td>驱动添加 { wtimeout : ms } 到 getlasterror 命令. 应用于 safe=true.</td></tr><tr><td>fsync=true|false</td><td>true: 驱动添加 { fsync : true } 到 getlasterror 命令.应用于 safe=true.false: 驱动不会添加到getLastError命令中。</td></tr><tr><td>journal=true|false</td><td>如果设置为 true, 同步到 journal (在提交到数据库前写入到实体中). 应用于 safe=true</td></tr><tr><td>connectTimeoutMS=ms</td><td>可以打开连接的时间。</td></tr><tr><td>socketTimeoutMS=ms</td><td>发送和接受sockets的时间。</td></tr></tbody></table><h1 id="_2-分片集群-sharded-cluster" tabindex="-1"><a class="header-anchor" href="#_2-分片集群-sharded-cluster" aria-hidden="true">#</a> 2. 分片集群-Sharded Cluster</h1><h2 id="_2-1-分片概念" tabindex="-1"><a class="header-anchor" href="#_2-1-分片概念" aria-hidden="true">#</a> 2.1 分片概念</h2><p>分片（sharding）是一种跨多台机器分布数据的方法，MongoDB使用分片来支持具有非常大的数据集和高吞吐量操作的部署。</p><p>换句话说：分片(sharding)是指将数据拆分，将其分散存在不同的机器上的过程。有时也用分区</p><p>(partitioning)来表示这个概念。将数据分散到不同的机器上，不需要功能强大的大型计算机就可以储存更多的数据，处理更多的负载。</p><p>具有大型数据集或高吞吐量应用程序的数据库系统可以会挑战单个服务器的容量。例如，高查询率会耗尽服务器的CPU容量。工作集大小大于系统的RAM会强调磁盘驱动器的I/ O容量。</p><p>有两种解决系统增长的方法：垂直扩展和水平扩展。</p><p>垂直扩展意味着增加单个服务器的容量，例如使用更强大的CPU，添加更多RAM或增加存储空间量。可用技术的局限性可能会限制单个机器对于给定工作负载而言足够强大。此外，基于云的提供商基于可用的硬件配置具有硬性上限。结果，垂直缩放有实际的最大值。</p><p>水平扩展意味着划分系统数据集并加载多个服务器，添加其他服务器以根据需要增加容量。虽然单个机器的总体速度或容量可能不高，但每台机器处理整个工作负载的子集，可能提供比单个高速大容量服务器更高的效率。扩展部署容量只需要根据需要添加额外的服务器，这可能比单个机器的高端硬件的总体成本更低。权衡是基础架构和部署维护的复杂性增加。</p><p>MongoDB支持通过分片进行水平扩展。</p><h2 id="_2-2-分片集群包含的组件" tabindex="-1"><a class="header-anchor" href="#_2-2-分片集群包含的组件" aria-hidden="true">#</a> 2.2 分片集群包含的组件</h2><p>MongoDB分片群集包含以下组件：</p><ul><li><p>分片（存储）：每个分片包含分片数据的子集。每个分片都可以部署为副本集。</p></li><li><p>mongos（路由）：mongos充当查询路由器，在客户端应用程序和分片集群之间提供接口。</p></li><li><p>config servers（&quot;调度&quot;的配置）：配置服务器存储群集的元数据和配置设置。从MongoDB 3.4开始，必须将配置服务器部署为副本集（CSRS）。</p></li></ul><p>下图描述了分片集群中组件的交互：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230228203653918.png" alt="image-20230228203653918" tabindex="0" loading="lazy"><figcaption>image-20230228203653918</figcaption></figure><p>MongoDB在集合级别对数据进行分片，将集合数据分布在集群中的分片上。</p><p><code>27018. if mongod is a shard member；</code></p><p><code>27019. if mongod is a config server member</code></p><h2 id="_2-3-分片集群架构目标" tabindex="-1"><a class="header-anchor" href="#_2-3-分片集群架构目标" aria-hidden="true">#</a> 2.3 分片集群架构目标</h2><p>两个分片节点副本集（3+3）+一个配置节点副本集（3）+两个路由节点（2），共11个服务节点。</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230228203944095.png" alt="image-20230228203944095" tabindex="0" loading="lazy"><figcaption>image-20230228203944095</figcaption></figure><h2 id="_2-4-分片-存储-节点副本集的创建" tabindex="-1"><a class="header-anchor" href="#_2-4-分片-存储-节点副本集的创建" aria-hidden="true">#</a> 2.4 分片（存储）节点副本集的创建</h2><p>所有的的配置文件都直接放到 <code>sharded_cluster</code> 的相应的子目录下面，默认配置文件名字：<code>mongod.conf</code></p><h3 id="_2-4-1-第一套副本集" tabindex="-1"><a class="header-anchor" href="#_2-4-1-第一套副本集" aria-hidden="true">#</a> 2.4.1 第一套副本集</h3><p>准备存放数据和日志的目录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#-----------myshardrs01</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myshardrs01_27018/log <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myshardrs01_27018/data/db <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myshardrs01_27118/log <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myshardrs01_27118/data/db <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myshardrs01_27218/log <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myshardrs01_27218/data/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /mongodb/sharded_cluster/myshardrs01_27018/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>myshardrs01_27018：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	<span class="token key atrule">destination</span><span class="token punctuation">:</span> file
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs01_27018/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
	<span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
	<span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs01_27018/data/db&quot;</span>
	<span class="token key atrule">journal</span><span class="token punctuation">:</span>
		<span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
		<span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs01_27018/log/mongod.pid&quot;</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定所有IP，有副作用，副本集初始化的时候，节点名字会自动设置为本地域名，而不是ip</span>
	<span class="token comment">#bindIpAll: true</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#bindIp</span>
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27018</span>
<span class="token key atrule">replication</span><span class="token punctuation">:</span>
	<span class="token comment">#副本集的名称</span>
	<span class="token key atrule">replSetName</span><span class="token punctuation">:</span> myshardrs01
<span class="token key atrule">sharding</span><span class="token punctuation">:</span>
	<span class="token comment">#分片角色</span>
	<span class="token key atrule">clusterRole</span><span class="token punctuation">:</span> shardsvr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>sharding.clusterRole：</p>`,191),An=n("thead",null,[n("tr",null,[n("th",null,"Value"),n("th",null,"Description")])],-1),xn=n("td",null,[n("code",null,"configsvr")],-1),wn={href:"https://docs.mongodb.com/manual/reference/glossary/#term-config-server",target:"_blank",rel:"noopener noreferrer"},Dn={href:"https://docs.mongodb.com/manual/reference/glossary/#term-config-server",target:"_blank",rel:"noopener noreferrer"},In={href:"https://docs.mongodb.com/manual/reference/glossary/#term-config-server",target:"_blank",rel:"noopener noreferrer"},Sn=n("code",null,"27019",-1),Tn=n("td",null,[n("code",null,"shardsvr")],-1),jn={href:"https://docs.mongodb.com/manual/reference/glossary/#term-shard",target:"_blank",rel:"noopener noreferrer"},Mn={href:"https://docs.mongodb.com/manual/reference/glossary/#term-shard",target:"_blank",rel:"noopener noreferrer"},Bn=e(`<p>注意：</p><p>设置sharding.clusterRole需要mongod实例运行复制。要将实例部署为副本集成员，请使用 replSetName设置并指定副本集的名称。</p><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /mongodb/sharded_cluster/myshardrs01_27118/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>myshardrs01_27118：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	<span class="token key atrule">destination</span><span class="token punctuation">:</span> file
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs01_27118/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
	<span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
	<span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs01_27118/data/db&quot;</span>
	<span class="token key atrule">journal</span><span class="token punctuation">:</span>
		<span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
		<span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs01_27118/log/mongod.pid&quot;</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定所有IP</span>
	<span class="token comment">#bindIpAll: true</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27118</span>
<span class="token key atrule">replication</span><span class="token punctuation">:</span>
	<span class="token key atrule">replSetName</span><span class="token punctuation">:</span> myshardrs01
<span class="token key atrule">sharding</span><span class="token punctuation">:</span>
	<span class="token key atrule">clusterRole</span><span class="token punctuation">:</span> shardsvr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /mongodb/sharded_cluster/myshardrs01_27218/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>myshardrs01_27218：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	<span class="token key atrule">destination</span><span class="token punctuation">:</span> file
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs01_27218/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
	<span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
	<span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs01_27218/data/db&quot;</span>
	<span class="token key atrule">journal</span><span class="token punctuation">:</span>
		<span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
		<span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs01_27218/log/mongod.pid&quot;</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27218</span>
<span class="token key atrule">replication</span><span class="token punctuation">:</span>
	<span class="token key atrule">replSetName</span><span class="token punctuation">:</span> myshardrs01
<span class="token key atrule">sharding</span><span class="token punctuation">:</span>
	<span class="token key atrule">clusterRole</span><span class="token punctuation">:</span> shardsvr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动第一套副本集：一主一副本一仲裁</p><p>依次启动三个mongod服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongod -f</span>
/mongodb/sharded_cluster/myshardrs01_27018/mongod.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">123223</span>
child process started successfully, parent exiting
<span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongod -f</span>
/mongodb/sharded_cluster/myshardrs01_27118/mongod.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">123292</span>
child process started successfully, parent exiting
<span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongod -f</span>
/mongodb/sharded_cluster/myshardrs01_27218/mongod.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">123326</span>
child process started successfully, parent exiting
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看服务是否启动：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># ps -ef |grep mongod</span>
polkitd <span class="token number">61622</span> <span class="token number">61604</span> <span class="token number">0</span> <span class="token number">7</span>月31 ? 00:04:29 mongod <span class="token parameter variable">--bind_ip_all</span>
root <span class="token number">123223</span> <span class="token number">1</span> <span class="token number">1</span> 01:10 ? 00:00:01 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/sharded_cluster/myshardrs01_27018/mongod.conf
root <span class="token number">123292</span> <span class="token number">1</span> <span class="token number">4</span> 01:11 ? 00:00:00 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/sharded_cluster/myshardrs01_27118/mongod.conf
root <span class="token number">123326</span> <span class="token number">1</span> <span class="token number">6</span> 01:11 ? 00:00:00 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/sharded_cluster/myshardrs01_27218/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（1）初始化副本集和创建主节点：</p><p>使用客户端命令连接任意一个节点，但这里尽量要连接主节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongo <span class="token parameter variable">--host</span> <span class="token number">180.76</span>.159.126 <span class="token parameter variable">--port</span> <span class="token number">27018</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行初始化副本集命令：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">&gt;</span> rs<span class="token punctuation">.</span><span class="token function">initiate</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string-property property">&quot;info2&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;no configuration specified. Using a default configuration for the set&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;me&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;180.76.159.126:27018&quot;</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;ok&quot;</span> <span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;operationTime&quot;</span> <span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1564593349</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
	<span class="token string-property property">&quot;$clusterTime&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&quot;clusterTime&quot;</span> <span class="token operator">:</span> <span class="token function">Timestamp</span><span class="token punctuation">(</span><span class="token number">1564593349</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
		<span class="token string-property property">&quot;signature&quot;</span> <span class="token operator">:</span> <span class="token punctuation">{</span>
			<span class="token string-property property">&quot;hash&quot;</span> <span class="token operator">:</span> <span class="token function">BinData</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
			<span class="token string-property property">&quot;keyId&quot;</span> <span class="token operator">:</span> <span class="token function">NumberLong</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token string">&quot;me&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;bobohost.localdomain:27018&quot;</span>,
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看副本集情况(节选内容)：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">myshardrs01</span><span class="token operator">:</span><span class="token constant">SECONDARY</span><span class="token operator">&gt;</span> rs<span class="token punctuation">.</span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token string-property property">&quot;set&quot;</span> <span class="token operator">:</span> <span class="token string">&quot;myshardrs01&quot;</span><span class="token punctuation">,</span>
<span class="token operator">...</span><span class="token operator">...</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）主节点配置查看：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01:PRIMARY<span class="token operator">&gt;</span> rs.<span class="token function-name function">conf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs01&quot;</span>,
	<span class="token string">&quot;version&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>,
	<span class="token string">&quot;protocolVersion&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>,
	<span class="token string">&quot;writeConcernMajorityJournalDefault&quot;</span> <span class="token builtin class-name">:</span> true,
	<span class="token string">&quot;members&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
		<span class="token punctuation">{</span>
			<span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">0</span>,
			<span class="token string">&quot;host&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;180.76.159.126:27018&quot;</span>,
			<span class="token string">&quot;arbiterOnly&quot;</span> <span class="token builtin class-name">:</span> false,
			<span class="token string">&quot;buildIndexes&quot;</span> <span class="token builtin class-name">:</span> true,
			<span class="token string">&quot;hidden&quot;</span> <span class="token builtin class-name">:</span> false,
			<span class="token string">&quot;priority&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>,
			<span class="token string">&quot;tags&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
			<span class="token punctuation">}</span>,
			<span class="token string">&quot;slaveDelay&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>,
			<span class="token string">&quot;votes&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）添加副本节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01:PRIMARY<span class="token operator">&gt;</span> rs.add<span class="token punctuation">(</span><span class="token string">&quot;180.76.159.126:27118&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>,
	<span class="token string">&quot;operationTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564593626</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
	<span class="token string">&quot;<span class="token variable">$clusterTime</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
		<span class="token string">&quot;clusterTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564593626</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
		<span class="token string">&quot;signature&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
			<span class="token string">&quot;hash&quot;</span> <span class="token builtin class-name">:</span> BinData<span class="token punctuation">(</span><span class="token number">0</span>,<span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span>,
			<span class="token string">&quot;keyId&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（4）添加仲裁节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01:PRIMARY<span class="token operator">&gt;</span> rs.addArb<span class="token punctuation">(</span><span class="token string">&quot;180.76.159.126:27218&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>,
	<span class="token string">&quot;operationTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564593675</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
	<span class="token string">&quot;<span class="token variable">$clusterTime</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
		<span class="token string">&quot;clusterTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564593675</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
		<span class="token string">&quot;signature&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
			<span class="token string">&quot;hash&quot;</span> <span class="token builtin class-name">:</span> BinData<span class="token punctuation">(</span><span class="token number">0</span>,<span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span>,
			<span class="token string">&quot;keyId&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看副本集的配置情况：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01: PRIMARY <span class="token operator">&gt;</span> rs.<span class="token function-name function">conf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs01&quot;</span>,
    <span class="token string">&quot;version&quot;</span><span class="token builtin class-name">:</span> <span class="token number">3</span>,
    <span class="token string">&quot;protocolVersion&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>,
    <span class="token string">&quot;writeConcernMajorityJournalDefault&quot;</span><span class="token builtin class-name">:</span> true,
    <span class="token string">&quot;members&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span> <span class="token number">0</span>,
            <span class="token string">&quot;host&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;180.76.159.126:27018&quot;</span>,
            <span class="token string">&quot;arbiterOnly&quot;</span><span class="token builtin class-name">:</span> false,
            <span class="token string">&quot;buildIndexes&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;hidden&quot;</span><span class="token builtin class-name">:</span> false,
            <span class="token string">&quot;priority&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
            <span class="token string">&quot;tags&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>,
            <span class="token string">&quot;slaveDelay&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;votes&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
            <span class="token string">&quot;host&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;180.76.159.126:27118&quot;</span>,
            <span class="token string">&quot;arbiterOnly&quot;</span><span class="token builtin class-name">:</span> false,
            <span class="token string">&quot;buildIndexes&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;hidden&quot;</span><span class="token builtin class-name">:</span> false,
            <span class="token string">&quot;priority&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
            <span class="token string">&quot;tags&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>,
            <span class="token string">&quot;slaveDelay&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;votes&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span> <span class="token number">2</span>,
            <span class="token string">&quot;host&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;180.76.159.126:27218&quot;</span>,
            <span class="token string">&quot;arbiterOnly&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;buildIndexes&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;hidden&quot;</span><span class="token builtin class-name">:</span> false,
            <span class="token string">&quot;priority&quot;</span><span class="token builtin class-name">:</span> <span class="token number">0</span>,
            <span class="token string">&quot;tags&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>,
            <span class="token string">&quot;slaveDelay&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;votes&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-4-2-第二套副本集" tabindex="-1"><a class="header-anchor" href="#_2-4-2-第二套副本集" aria-hidden="true">#</a> 2.4.2 第二套副本集</h3><p>准备存放数据和日志的目录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#-----------myshardrs02</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myshardrs02_27318/log <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myshardrs02_27318/data/db <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myshardrs02_27418/log <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myshardrs02_27418/data/db <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myshardrs02_27518/log <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myshardrs02_27518/data/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /mongodb/sharded_cluster/myshardrs02_27318/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>myshardrs02_27318：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
    <span class="token key atrule">destination</span><span class="token punctuation">:</span> file
    <span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs02_27318/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
	<span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
	<span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs02_27318/data/db&quot;</span>
	<span class="token key atrule">journal</span><span class="token punctuation">:</span>
		<span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
		<span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs02_27318/log/mongod.pid&quot;</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27318</span>
<span class="token key atrule">replication</span><span class="token punctuation">:</span>
	<span class="token key atrule">replSetName</span><span class="token punctuation">:</span> myshardrs02
<span class="token key atrule">sharding</span><span class="token punctuation">:</span>
	<span class="token key atrule">clusterRole</span><span class="token punctuation">:</span> shardsvr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /mongodb/sharded_cluster/myshardrs02_27418/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>myshardrs02_27418：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	<span class="token key atrule">destination</span><span class="token punctuation">:</span> file
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs02_27418/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
	<span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
	<span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs02_27418/data/db&quot;</span>
	<span class="token key atrule">journal</span><span class="token punctuation">:</span>
		<span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
		<span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs02_27418/log/mongod.pid&quot;</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定所有IP</span>
	<span class="token comment">#bindIpAll: true</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27418</span>
<span class="token key atrule">replication</span><span class="token punctuation">:</span>
	<span class="token key atrule">replSetName</span><span class="token punctuation">:</span> myshardrs02
<span class="token key atrule">sharding</span><span class="token punctuation">:</span>
	<span class="token key atrule">clusterRole</span><span class="token punctuation">:</span> shardsvr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /mongodb/sharded_cluster/myshardrs02_27518/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>myshardrs02_27518：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	<span class="token key atrule">destination</span><span class="token punctuation">:</span> file
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs02_27518/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
	<span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
	<span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs02_27518/data/db&quot;</span>
	<span class="token key atrule">journal</span><span class="token punctuation">:</span>
		<span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
		<span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myshardrs02_27518/log/mongod.pid&quot;</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定所有IP</span>
	<span class="token comment">#bindIpAll: true</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27518</span>
<span class="token key atrule">replication</span><span class="token punctuation">:</span>
	<span class="token key atrule">replSetName</span><span class="token punctuation">:</span> myshardrs02
<span class="token key atrule">sharding</span><span class="token punctuation">:</span>
	<span class="token key atrule">clusterRole</span><span class="token punctuation">:</span> shardsvr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动第二套副本集：一主一副本一仲裁</p><p>依次启动三个mongod服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongod -f</span>
/mongodb/sharded_cluster/myshardrs02_27318/mongod.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">123223</span>
child process started successfully, parent exiting
<span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongod -f</span>
/mongodb/sharded_cluster/myshardrs02_27418/mongod.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">123292</span>
child process started successfully, parent exiting
<span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongod -f</span>
/mongodb/sharded_cluster/myshardrs02_27518/mongod.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">123326</span>
child process started successfully, parent exiting
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看服务是否启动：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># ps -ef |grep mongod</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（1）初始化副本集和创建主节点：</p><p>使用客户端命令连接任意一个节点，但这里尽量要连接主节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongo <span class="token parameter variable">--host</span> <span class="token number">180.76</span>.159.126 <span class="token parameter variable">--port</span> <span class="token number">27318</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行初始化副本集命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> rs.initiate<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看副本集情况(节选内容)：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01:SECONDARY<span class="token operator">&gt;</span> rs.<span class="token function-name function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string">&quot;set&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs01&quot;</span>,
	<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）主节点配置查看：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01:PRIMARY<span class="token operator">&gt;</span> rs.conf<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（3）添加副本节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01:PRIMARY<span class="token operator">&gt;</span> rs.add<span class="token punctuation">(</span><span class="token string">&quot;180.76.159.126:27418&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>,
	<span class="token string">&quot;operationTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564593626</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
	<span class="token string">&quot;<span class="token variable">$clusterTime</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
		<span class="token string">&quot;clusterTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564593626</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
		<span class="token string">&quot;signature&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
			<span class="token string">&quot;hash&quot;</span> <span class="token builtin class-name">:</span> BinData<span class="token punctuation">(</span><span class="token number">0</span>,<span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span>,
			<span class="token string">&quot;keyId&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（4）添加仲裁节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01:PRIMARY<span class="token operator">&gt;</span> rs.addArb<span class="token punctuation">(</span><span class="token string">&quot;180.76.159.126:27518&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>,
	<span class="token string">&quot;operationTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564593675</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
	<span class="token string">&quot;<span class="token variable">$clusterTime</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
		<span class="token string">&quot;clusterTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564593675</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
		<span class="token string">&quot;signature&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
			<span class="token string">&quot;hash&quot;</span> <span class="token builtin class-name">:</span> BinData<span class="token punctuation">(</span><span class="token number">0</span>,<span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span>,
			<span class="token string">&quot;keyId&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看副本集的配置情况：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01:PRIMARY<span class="token operator">&gt;</span> rs.conf<span class="token punctuation">(</span><span class="token punctuation">)</span>
myshardrs01:PRIMARY<span class="token operator">&gt;</span> rs.status<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs02: PRIMARY <span class="token operator">&gt;</span> rs.<span class="token function-name function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string">&quot;set&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs02&quot;</span>,
    <span class="token string">&quot;date&quot;</span><span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-07-31T21:38:22.463Z&quot;</span><span class="token punctuation">)</span>,
    <span class="token string">&quot;myState&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
    <span class="token string">&quot;term&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>,
    <span class="token string">&quot;syncingTo&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&quot;</span>,
    <span class="token string">&quot;syncSourceHost&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&quot;</span>,
    <span class="token string">&quot;syncSourceId&quot;</span><span class="token builtin class-name">:</span> -1,
    <span class="token string">&quot;heartbeatIntervalMillis&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span>,
    <span class="token string">&quot;optimes&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;lastCommittedOpTime&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564609094</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;t&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>,
        <span class="token string">&quot;readConcernMajorityOpTime&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564609094</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;t&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>,
        <span class="token string">&quot;appliedOpTime&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564609094</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;t&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>,
        <span class="token string">&quot;durableOpTime&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564609094</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;t&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>,
    <span class="token string">&quot;lastStableCheckpointTimestamp&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564609074</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
    <span class="token string">&quot;members&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span> <span class="token number">0</span>,
            <span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;180.76.159.126:27318&quot;</span>,
            <span class="token string">&quot;health&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
            <span class="token string">&quot;state&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
            <span class="token string">&quot;stateStr&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;PRIMARY&quot;</span>,
            <span class="token string">&quot;uptime&quot;</span><span class="token builtin class-name">:</span> <span class="token number">5086</span>,
            <span class="token string">&quot;optime&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564609094</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
                <span class="token string">&quot;t&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>,
            <span class="token string">&quot;optimeDate&quot;</span><span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-07-31T21:38:14Z&quot;</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;syncingTo&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&quot;</span>,
            <span class="token string">&quot;syncSourceHost&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&quot;</span>,
            <span class="token string">&quot;syncSourceId&quot;</span><span class="token builtin class-name">:</span> -1,
            <span class="token string">&quot;infoMessage&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&quot;</span>,
            <span class="token string">&quot;electionTime&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564604032</span>, <span class="token number">2</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;electionDate&quot;</span><span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-07-31T20:13:52Z&quot;</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;configVersion&quot;</span><span class="token builtin class-name">:</span> <span class="token number">3</span>,
            <span class="token string">&quot;self&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;lastHeartbeatMessage&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&quot;</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
            <span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;180.76.159.126:27418&quot;</span>,
            <span class="token string">&quot;health&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
            <span class="token string">&quot;state&quot;</span><span class="token builtin class-name">:</span> <span class="token number">2</span>,
            <span class="token string">&quot;stateStr&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;SECONDARY&quot;</span>,
            <span class="token string">&quot;uptime&quot;</span><span class="token builtin class-name">:</span> <span class="token number">4452</span>,
            <span class="token string">&quot;optime&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564609094</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
                <span class="token string">&quot;t&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>,
            <span class="token string">&quot;optimeDurable&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564609094</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
                <span class="token string">&quot;t&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>,
            <span class="token string">&quot;optimeDate&quot;</span><span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-07-31T21:38:14Z&quot;</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;optimeDurableDate&quot;</span><span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-07-31T21:38:14Z&quot;</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;lastHeartbeat&quot;</span><span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-07-31T21:38:21.178Z&quot;</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;lastHeartbeatRecv&quot;</span><span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-07-31T21: 38: 20.483Z&quot;</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;pingMs&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;lastHeartbeatMessage&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&quot;</span>,
            <span class="token string">&quot;syncingTo&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;180.76.159.126:27518&quot;</span>,
            <span class="token string">&quot;syncSourceHost&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;180.76.159.126:27518&quot;</span>,
            <span class="token string">&quot;syncSourceId&quot;</span><span class="token builtin class-name">:</span> <span class="token number">2</span>,
            <span class="token string">&quot;infoMessage&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&quot;</span>,
            <span class="token string">&quot;configVersion&quot;</span><span class="token builtin class-name">:</span> <span class="token number">3</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span> <span class="token number">2</span>,
            <span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;180.76.159.126:27518&quot;</span>,
            <span class="token string">&quot;health&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
            <span class="token string">&quot;state&quot;</span><span class="token builtin class-name">:</span> <span class="token number">2</span>,
            <span class="token string">&quot;stateStr&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;SECONDARY&quot;</span>,
            <span class="token string">&quot;uptime&quot;</span><span class="token builtin class-name">:</span> <span class="token number">4448</span>,
            <span class="token string">&quot;optime&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564609094</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
                <span class="token string">&quot;t&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>,
            <span class="token string">&quot;optimeDurable&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
                <span class="token string">&quot;ts&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564609094</span>, <span class="token number">1</span><span class="token punctuation">)</span>,
                <span class="token string">&quot;t&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>,
            <span class="token string">&quot;optimeDate&quot;</span><span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-07-31T21:38:14Z&quot;</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;optimeDurableDate&quot;</span><span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-07-31T21:38:14Z&quot;</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;lastHeartbeat&quot;</span><span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-07-31T21:38:21.178Z&quot;</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;lastHeartbeatRecv&quot;</span><span class="token builtin class-name">:</span> ISODate<span class="token punctuation">(</span><span class="token string">&quot;2019-07-31T21: 38: 22.096Z&quot;</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;pingMs&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;lastHeartbeatMessage&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&quot;</span>,
            <span class="token string">&quot;syncingTo&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;180.76.159.126:27318&quot;</span>,
            <span class="token string">&quot;syncSourceHost&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;180.76.159.126:27318&quot;</span>,
            <span class="token string">&quot;syncSourceId&quot;</span><span class="token builtin class-name">:</span> <span class="token number">0</span>,
            <span class="token string">&quot;infoMessage&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;&quot;</span>,
            <span class="token string">&quot;configVersion&quot;</span><span class="token builtin class-name">:</span> <span class="token number">3</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>,
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-5-配置节点副本集的创建" tabindex="-1"><a class="header-anchor" href="#_2-5-配置节点副本集的创建" aria-hidden="true">#</a> 2.5 配置节点副本集的创建</h2><p>第一步：准备存放数据和日志的目录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#-----------configrs</span>
<span class="token comment">#建立数据节点data和日志目录</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myconfigrs_27019/log <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myconfigrs_27019/data/db <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myconfigrs_27119/log <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myconfigrs_27119/data/db <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myconfigrs_27219/log <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/myconfigrs_27219/data/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /mongodb/sharded_cluster/myconfigrs_27019/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>myconfigrs_27019：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemLog:
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	destination: <span class="token function">file</span>
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	path: <span class="token string">&quot;/mongodb/sharded_cluster/myconfigrs_27019/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	logAppend: <span class="token boolean">true</span>
storage:
	<span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
	dbPath: <span class="token string">&quot;/mongodb/sharded_cluster/myconfigrs_27019/data/db&quot;</span>
	journal:
		<span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
		enabled: <span class="token boolean">true</span>
processManagement:
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	fork: <span class="token boolean">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	pidFilePath: <span class="token string">&quot;/mongodb/sharded_cluster/myconfigrs_27019/log/mongod.pid&quot;</span>
net:
	<span class="token comment">#服务实例绑定所有IP</span>
	<span class="token comment">#bindIpAll: true</span>
	<span class="token comment">#服务实例绑定的IP</span>
	bindIp: localhost,192.168.0.2
	<span class="token comment">#绑定的端口</span>
	port: <span class="token number">27019</span>
replication:
	replSetName: myconfigrs
sharding:
	clusterRole: configsvr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /mongodb/sharded_cluster/myconfigrs_27119/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>myconfigrs_27119</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	<span class="token key atrule">destination</span><span class="token punctuation">:</span> file
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myconfigrs_27119/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
	<span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
	<span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myconfigrs_27119/data/db&quot;</span>
	<span class="token key atrule">journal</span><span class="token punctuation">:</span>
		<span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
		<span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myconfigrs_27119/log/mongod.pid&quot;</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定所有IP</span>
	<span class="token comment">#bindIpAll: true</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27119</span>
<span class="token key atrule">replication</span><span class="token punctuation">:</span>
	<span class="token key atrule">replSetName</span><span class="token punctuation">:</span> myconfigrs
<span class="token key atrule">sharding</span><span class="token punctuation">:</span>
	<span class="token key atrule">clusterRole</span><span class="token punctuation">:</span> configsvr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vim</span> /mongodb/sharded_cluster/myconfigrs_27219/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>myconfigrs_27219</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	<span class="token key atrule">destination</span><span class="token punctuation">:</span> file
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myconfigrs_27219/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
	<span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
	<span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myconfigrs_27219/data/db&quot;</span>
	<span class="token key atrule">journal</span><span class="token punctuation">:</span>
		<span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
		<span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/myconfigrs_27219/log/mongod.pid&quot;</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定所有IP</span>
	<span class="token comment">#bindIpAll: true</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27219</span>
<span class="token key atrule">replication</span><span class="token punctuation">:</span>
	<span class="token key atrule">replSetName</span><span class="token punctuation">:</span> myconfigrs
<span class="token key atrule">sharding</span><span class="token punctuation">:</span>
	<span class="token key atrule">clusterRole</span><span class="token punctuation">:</span> configsvr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动配置副本集：一主两副本</p><p>依次启动三个mongod服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongod -f</span>
/mongodb/sharded_cluster/myconfigrs_27019/mongod.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">123223</span>
child process started successfully, parent exiting
<span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongod -f</span>
/mongodb/sharded_cluster/myconfigrs_27119/mongod.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">123292</span>
child process started successfully, parent exiting
<span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongod -f</span>
/mongodb/sharded_cluster/myconfigrs_27219/mongod.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">123326</span>
child process started successfully, parent exiting
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看服务是否启动：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># ps -ef |grep mongod</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（1）初始化副本集和创建主节点：</p><p>使用客户端命令连接任意一个节点，但这里尽量要连接主节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongo <span class="token parameter variable">--host</span> <span class="token number">180.76</span>.159.126 <span class="token parameter variable">--port</span> <span class="token number">27019</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行初始化副本集命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> rs.initiate<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看副本集情况(节选内容)：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01:SECONDARY<span class="token operator">&gt;</span> rs.<span class="token function-name function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string">&quot;set&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs01&quot;</span>,
	<span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）主节点配置查看：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01: PRIMARY <span class="token operator">&gt;</span> rs.<span class="token function-name function">conf</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs01&quot;</span>,
    <span class="token string">&quot;version&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
    <span class="token string">&quot;protocolVersion&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>,
    <span class="token string">&quot;writeConcernMajorityJournalDefault&quot;</span><span class="token builtin class-name">:</span> true,
    <span class="token string">&quot;members&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string">&quot;_id&quot;</span><span class="token builtin class-name">:</span> <span class="token number">0</span>,
            <span class="token string">&quot;host&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;bobohost.localdomain:27018&quot;</span>,
            <span class="token string">&quot;arbiterOnly&quot;</span><span class="token builtin class-name">:</span> false,
            <span class="token string">&quot;buildIndexes&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;hidden&quot;</span><span class="token builtin class-name">:</span> false,
            <span class="token string">&quot;priority&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
            <span class="token string">&quot;tags&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token punctuation">}</span>,
            <span class="token string">&quot;slaveDelay&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;votes&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>,
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）添加两个副本节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01:PRIMARY<span class="token operator">&gt;</span> rs.add<span class="token punctuation">(</span><span class="token string">&quot;180.76.159.126:27119&quot;</span><span class="token punctuation">)</span>
myshardrs01:PRIMARY<span class="token operator">&gt;</span> rs.add<span class="token punctuation">(</span><span class="token string">&quot;180.76.159.126:27219&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查看副本集的配置情况：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01:PRIMARY<span class="token operator">&gt;</span> rs.conf<span class="token punctuation">(</span><span class="token punctuation">)</span>
myshardrs01:PRIMARY<span class="token operator">&gt;</span> rs.status<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-6-路由节点的创建和操作" tabindex="-1"><a class="header-anchor" href="#_2-6-路由节点的创建和操作" aria-hidden="true">#</a> 2.6 路由节点的创建和操作</h2><h3 id="_2-6-1-第一个路由节点的创建和连接" tabindex="-1"><a class="header-anchor" href="#_2-6-1-第一个路由节点的创建和连接" aria-hidden="true">#</a> 2.6.1 第一个路由节点的创建和连接</h3><p>第一步：准备存放数据和日志的目录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#-----------mongos01</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/mymongos_27017/log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>mymongos_27017节点：</p><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /mongodb/sharded_cluster/mymongos_27017/mongos.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>mongos.conf</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	<span class="token key atrule">destination</span><span class="token punctuation">:</span> file
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/mymongos_27017/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> /mongodb/sharded_cluster/mymongos_27017/log/mongod.pid&quot;
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定所有IP，有副作用，副本集初始化的时候，节点名字会自动设置为本地域名，而不是ip</span>
	<span class="token comment">#bindIpAll: true</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#bindIp</span>
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27017</span>
<span class="token key atrule">sharding</span><span class="token punctuation">:</span>
	<span class="token comment">#指定配置节点副本集</span>
	<span class="token key atrule">configDB</span><span class="token punctuation">:</span>
		myconfigrs/180.76.159.126<span class="token punctuation">:</span><span class="token number">27019</span><span class="token punctuation">,</span>180.76.159.126<span class="token punctuation">:</span><span class="token number">27119</span><span class="token punctuation">,</span>180.76.159.126<span class="token punctuation">:</span><span class="token number">27219</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动mongos：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongos -f</span>
/mongodb/sharded_cluster/mymongos_27017/mongos.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">129874</span>
child process started successfully, parent exiting
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：启动如果失败，可以查看log目录下的日志，查看失败原因。</p><p>客户端登录mongos，</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongo <span class="token parameter variable">--host</span> <span class="token number">180.76</span>.159.126 <span class="token parameter variable">--port</span> <span class="token number">27017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时，写不进去数据，如果写数据会报错：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span> use aadb
switched to db aadb
mongos<span class="token operator">&gt;</span> db.aa.insert<span class="token punctuation">(</span><span class="token punctuation">{</span>aa:<span class="token string">&quot;aa&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
WriteCommandError<span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">0</span>,
	<span class="token string">&quot;errmsg&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;unable to initialize targeter for write op for collection
	aa.aa :: caused by :: Database aa not found :: caused by :: No shards found&quot;</span>,
	<span class="token string">&quot;code&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">70</span>,
	<span class="token string">&quot;codeName&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;ShardNotFound&quot;</span>,
	<span class="token string">&quot;operationTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564600123</span>, <span class="token number">2</span><span class="token punctuation">)</span>,
	<span class="token string">&quot;<span class="token variable">$clusterTime</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
		<span class="token string">&quot;clusterTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564600123</span>, <span class="token number">2</span><span class="token punctuation">)</span>,
		<span class="token string">&quot;signature&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
			<span class="token string">&quot;hash&quot;</span> <span class="token builtin class-name">:</span> BinData<span class="token punctuation">(</span><span class="token number">0</span>,<span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span>,
			<span class="token string">&quot;keyId&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>原因：通过路由节点操作，现在只是连接了配置节点，还没有连接分片数据节点，因此无法写入业务数据。</p><p>properties配置文件参考：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">logpath</span><span class="token punctuation">=</span><span class="token value attr-value">/mongodb/sharded_cluster/mymongos_27017/log/mongos.log</span>
<span class="token key attr-name">logappend</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token key attr-name">bind_ip_all</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token key attr-name">port</span><span class="token punctuation">=</span><span class="token value attr-value">27017</span>
<span class="token key attr-name">fork</span><span class="token punctuation">=</span><span class="token value attr-value">true</span>
<span class="token key attr-name">configdb</span><span class="token punctuation">=</span><span class="token value attr-value">myconfigrs/180.76.159.126:27019,180.76.159.126:27119,180.76.159.126:27219</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-2-在路由节点上进行分片配置操作" tabindex="-1"><a class="header-anchor" href="#_2-6-2-在路由节点上进行分片配置操作" aria-hidden="true">#</a> 2.6.2 在路由节点上进行分片配置操作</h3><p>使用命令添加分片：</p><p>（1）添加分片：</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sh.addShard<span class="token punctuation">(</span><span class="token string">&quot;IP:Port&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将第一套分片副本集添加进来：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span>
sh.addShard<span class="token punctuation">(</span><span class="token string">&quot;myshardrs01/192.168.0.2:27018,180.76.159.126:27118,180.76.159.126:2
7218&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string">&quot;shardAdded&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs01&quot;</span>,
	<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>,
	<span class="token string">&quot;operationTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564611970</span>, <span class="token number">4</span><span class="token punctuation">)</span>,
	<span class="token string">&quot;<span class="token variable">$clusterTime</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
		<span class="token string">&quot;clusterTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564611970</span>, <span class="token number">4</span><span class="token punctuation">)</span>,
		<span class="token string">&quot;signature&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
			<span class="token string">&quot;hash&quot;</span> <span class="token builtin class-name">:</span> BinData<span class="token punctuation">(</span><span class="token number">0</span>,<span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span>,
			<span class="token string">&quot;keyId&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看分片状态情况：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span> sh.status<span class="token punctuation">(</span><span class="token punctuation">)</span>
--- Sharding Status ---
	sharding version: <span class="token punctuation">{</span>
		<span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>,
		<span class="token string">&quot;minCompatibleVersion&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">5</span>,
		<span class="token string">&quot;currentVersion&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">6</span>,
		<span class="token string">&quot;clusterId&quot;</span> <span class="token builtin class-name">:</span> ObjectId<span class="token punctuation">(</span><span class="token string">&quot;5d4211b798f3f9a48522c68b&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	shards:
		<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs01&quot;</span>, <span class="token string">&quot;host&quot;</span> <span class="token builtin class-name">:</span><span class="token string">&quot;myshardrs01/180.76.159.126:27018,180.76.159.126:27118&quot;</span>, <span class="token string">&quot;state&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
	active mongoses:
		<span class="token string">&quot;4.0.10&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>
	autosplit:
		Currently enabled: <span class="token function">yes</span>
	balancer:
		Currently enabled: <span class="token function">yes</span>
		Currently running: no
		Failed balancer rounds <span class="token keyword">in</span> last <span class="token number">5</span> attempts: <span class="token number">0</span>
		Migration Results <span class="token keyword">for</span> the last <span class="token number">24</span> hours: 
				No recent migrations
	databases:
		<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;config&quot;</span>, <span class="token string">&quot;primary&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;config&quot;</span>, <span class="token string">&quot;partitioned&quot;</span> <span class="token builtin class-name">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>继续将第二套分片副本集添加进来：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span>
sh.addShard<span class="token punctuation">(</span><span class="token string">&quot;myshardrs02/192.168.0.2:27318,180.76.159.126:27418,180.76.159.126:2
7518&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string">&quot;shardAdded&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs02&quot;</span>,
	<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>,
	<span class="token string">&quot;operationTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564612147</span>, <span class="token number">5</span><span class="token punctuation">)</span>,
	<span class="token string">&quot;<span class="token variable">$clusterTime</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
		<span class="token string">&quot;clusterTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564612147</span>, <span class="token number">5</span><span class="token punctuation">)</span>,
		<span class="token string">&quot;signature&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
			<span class="token string">&quot;hash&quot;</span> <span class="token builtin class-name">:</span> BinData<span class="token punctuation">(</span><span class="token number">0</span>,<span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span>,
			<span class="token string">&quot;keyId&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看分片状态：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span> sh.status<span class="token punctuation">(</span><span class="token punctuation">)</span>
--- Sharding Status ---
	sharding version: <span class="token punctuation">{</span>
		<span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>,
		<span class="token string">&quot;minCompatibleVersion&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">5</span>,
		<span class="token string">&quot;currentVersion&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">6</span>,
		<span class="token string">&quot;clusterId&quot;</span> <span class="token builtin class-name">:</span> ObjectId<span class="token punctuation">(</span><span class="token string">&quot;5d4211b798f3f9a48522c68b&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
shards:
	<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs01&quot;</span>, <span class="token string">&quot;host&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs01/180.76.159.126:27018,180.76.159.126:27118&quot;</span>, <span class="token string">&quot;state&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
	<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs02&quot;</span>, <span class="token string">&quot;host&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs02/180.76.159.126:27318,180.76.159.126:27418&quot;</span>, <span class="token string">&quot;state&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
	active mongoses:
		<span class="token string">&quot;4.0.10&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>
	autosplit:
		Currently enabled: <span class="token function">yes</span>
	balancer:
		Currently enabled: <span class="token function">yes</span>
		Currently running: no
		Failed balancer rounds <span class="token keyword">in</span> last <span class="token number">5</span> attempts: <span class="token number">0</span>
		Migration Results <span class="token keyword">for</span> the last <span class="token number">24</span> hours:
				No recent migrations
	databases:
		<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;config&quot;</span>, <span class="token string">&quot;primary&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;config&quot;</span>, <span class="token string">&quot;partitioned&quot;</span> <span class="token builtin class-name">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：如果添加分片失败，需要先手动移除分片，检查添加分片的信息的正确性后，再次添加分片。</p><p>移除分片参考(了解)：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>use admin
db.runCommand<span class="token punctuation">(</span> <span class="token punctuation">{</span> removeShard: <span class="token string">&quot;myshardrs02&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：如果只剩下最后一个shard，是无法删除的</p><p>移除时会自动转移分片数据，需要一个时间过程。</p><p>完成后，再次执行删除分片命令才能真正删除。</p><p>（2）开启分片功能：sh.enableSharding(&quot;库名&quot;)、sh.shardCollection(&quot;库名.集合名&quot;,{&quot;key&quot;:1}) 在mongos上的articledb数据库配置sharding:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span> sh.enableSharding<span class="token punctuation">(</span><span class="token string">&quot;articledb&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>,
	<span class="token string">&quot;operationTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564612296</span>, <span class="token number">5</span><span class="token punctuation">)</span>,
	<span class="token string">&quot;<span class="token variable">$clusterTime</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
		<span class="token string">&quot;clusterTime&quot;</span> <span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564612296</span>, <span class="token number">5</span><span class="token punctuation">)</span>,
		<span class="token string">&quot;signature&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
			<span class="token string">&quot;hash&quot;</span> <span class="token builtin class-name">:</span> BinData<span class="token punctuation">(</span><span class="token number">0</span>,<span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span>,
			<span class="token string">&quot;keyId&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看分片状态：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span> sh.status<span class="token punctuation">(</span><span class="token punctuation">)</span>
--- Sharding Status ---
	sharding version: <span class="token punctuation">{</span>
		<span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>,
		<span class="token string">&quot;minCompatibleVersion&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">5</span>,
		<span class="token string">&quot;currentVersion&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">6</span>,
		<span class="token string">&quot;clusterId&quot;</span> <span class="token builtin class-name">:</span> ObjectId<span class="token punctuation">(</span><span class="token string">&quot;5d4211b798f3f9a48522c68b&quot;</span><span class="token punctuation">)</span>
	<span class="token punctuation">}</span>
	shards:
		<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs01&quot;</span>, <span class="token string">&quot;host&quot;</span> <span class="token builtin class-name">:</span>
<span class="token string">&quot;myshardrs01/180.76.159.126:27018,180.76.159.126:27118&quot;</span>, <span class="token string">&quot;state&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
		<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs02&quot;</span>, <span class="token string">&quot;host&quot;</span> <span class="token builtin class-name">:</span>
<span class="token string">&quot;myshardrs02/180.76.159.126:27318,180.76.159.126:27418&quot;</span>, <span class="token string">&quot;state&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
	active mongoses:
		<span class="token string">&quot;4.0.10&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span>
	autosplit:
		Currently enabled: <span class="token function">yes</span>
	balancer:
		Currently enabled: <span class="token function">yes</span>
		Currently running: no
		Failed balancer rounds <span class="token keyword">in</span> last <span class="token number">5</span> attempts: <span class="token number">0</span>
		Migration Results <span class="token keyword">for</span> the last <span class="token number">24</span> hours:
				No recent migrations
	databases:
		<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;articledb&quot;</span>, <span class="token string">&quot;primary&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs02&quot;</span>, <span class="token string">&quot;partitioned&quot;</span> :true, <span class="token string">&quot;version&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;uuid&quot;</span> <span class="token builtin class-name">:</span> UUID<span class="token punctuation">(</span><span class="token string">&quot;788c9a3b-bb6a-4cc2-a597-974694772986&quot;</span><span class="token punctuation">)</span>,
<span class="token string">&quot;lastMod&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
		<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;config&quot;</span>, <span class="token string">&quot;primary&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;config&quot;</span>, <span class="token string">&quot;partitioned&quot;</span> <span class="token builtin class-name">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
			config.system.sessions
					shard key: <span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
					unique: <span class="token boolean">false</span>
					balancing: <span class="token boolean">true</span>
					chunks:
						myshardrs01 <span class="token number">1</span>
					<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;<span class="token variable">$minKey</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> --<span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;<span class="token variable">$maxKey</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> on <span class="token builtin class-name">:</span> myshardrs01 Timestamp<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（3）集合分片</p><p>对集合分片，你必须使用 sh.shardCollection() 方法指定集合和分片键。</p><p>语法：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>sh.shardCollection<span class="token punctuation">(</span>namespace, key, unique<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>参数：</p><table><thead><tr><th>Parameter</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>namespace</code></td><td>string</td><td>要（分片）共享的目标集合的命名空间，格式：<code>&lt;database&gt;. &lt;collection&gt;</code></td></tr><tr><td><code>key</code></td><td>document</td><td>用作分片键的索引规范文档。shard键决定MongoDB如何在 shard之间分发文档。除非集合为空，否则索引必须在shard collection命令之前存在。如果集合为空，则MongoDB在对集合进行分片之前创建索引，前提是支持分片键的索引不存在。简单的说：由包含字段和该字段的索引遍历方向的文档组成。</td></tr><tr><td><code>unique</code></td><td>boolean</td><td>当值为true情况下，片键字段上会限制为确保是唯一索引。哈希策略片键不支持唯一索引。默认是false。</td></tr></tbody></table><p>对集合进行分片时,你需要选择一个 片键（Shard Key） , shard key 是每条记录都必须包含的,且建立了 索引的单个字段或复合字段,MongoDB按照片键将数据划分到不同的 数据块 中,并将 数据块 均衡地分布 到所有分片中.为了按照片键划分数据块,MongoDB使用 基于哈希的分片方式（随机平均分配）或者基 于范围的分片方式（数值大小分配） 。</p><p>用什么字段当片键都可以，如：nickname作为片键，但一定是必填字段。</p><p>分片规则一：哈希策略</p><p>对于 基于哈希的分片 ,MongoDB计算一个字段的哈希值,并用这个哈希值来创建数据块.</p><p>在使用基于哈希分片的系统中,拥有”相近”片键的文档 很可能不会 存储在同一个数据块中,因此数据的分 离性更好一些.</p><p>使用nickname作为片键，根据其值的哈希值进行数据分片</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos <span class="token operator">&gt;</span> sh.shardCollection<span class="token punctuation">(</span><span class="token string">&quot;articledb.comment&quot;</span>, <span class="token punctuation">{</span> <span class="token string">&quot;nickname&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;hashed&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string">&quot;collectionsharded&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;articledb.comment&quot;</span>,
    <span class="token string">&quot;collectionUUID&quot;</span><span class="token builtin class-name">:</span> UUID<span class="token punctuation">(</span><span class="token string">&quot;ddea6ed8-ee61-4693-bd16-196acc3a45e8&quot;</span><span class="token punctuation">)</span>,
    <span class="token string">&quot;ok&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
    <span class="token string">&quot;operationTime&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564612840</span>, <span class="token number">28</span><span class="token punctuation">)</span>,
    <span class="token string">&quot;<span class="token variable">$clusterTime</span>&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;clusterTime&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1564612840</span>, <span class="token number">28</span><span class="token punctuation">)</span>,
        <span class="token string">&quot;signature&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;hash&quot;</span><span class="token builtin class-name">:</span> BinData<span class="token punctuation">(</span><span class="token number">0</span>, <span class="token string">&quot;AAAAAAAAAAAAAAAAAAAAAAAAAAA=&quot;</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;keyId&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看分片状态：sh.status()</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>databases:
	<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;articledb&quot;</span>, <span class="token string">&quot;primary&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myshardrs02&quot;</span>, <span class="token string">&quot;partitioned&quot;</span> <span class="token builtin class-name">:</span> true, <span class="token string">&quot;version&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;uuid&quot;</span> <span class="token builtin class-name">:</span> UUID<span class="token punctuation">(</span><span class="token string">&quot;251436b7-86c2-4cd8-9a88-70874af29364&quot;</span><span class="token punctuation">)</span>, <span class="token string">&quot;lastMod&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
			articledb.comment
				shard key: <span class="token punctuation">{</span> <span class="token string">&quot;nickname&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;hashed&quot;</span> <span class="token punctuation">}</span>
				unique: <span class="token boolean">false</span>
				balancing: <span class="token boolean">true</span>
				chunks:
					myshardrs01 <span class="token number">2</span>
					myshardrs02 <span class="token number">2</span>
				<span class="token punctuation">{</span> <span class="token string">&quot;nickname&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;<span class="token variable">$minKey</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> --<span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span> <span class="token string">&quot;nickname&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token string">&quot;-4611686018427387902&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> on <span class="token builtin class-name">:</span> myshardrs01 Timestamp<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">0</span><span class="token punctuation">)</span>
				<span class="token punctuation">{</span> <span class="token string">&quot;nickname&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token string">&quot;-4611686018427387902&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> --<span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span> <span class="token string">&quot;nickname&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> on <span class="token builtin class-name">:</span> myshardrs01 Timestamp<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">1</span><span class="token punctuation">)</span>
				<span class="token punctuation">{</span> <span class="token string">&quot;nickname&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> --<span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span> <span class="token string">&quot;nickname&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token string">&quot;4611686018427387902&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> on <span class="token builtin class-name">:</span> myshardrs02 Timestamp<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">2</span><span class="token punctuation">)</span>
				<span class="token punctuation">{</span> <span class="token string">&quot;nickname&quot;</span> <span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token string">&quot;4611686018427387902&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span> --<span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span> <span class="token string">&quot;nickname&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;<span class="token variable">$maxKey</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> on <span class="token builtin class-name">:</span> myshardrs02 Timestamp<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">3</span><span class="token punctuation">)</span>
		<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;config&quot;</span>, <span class="token string">&quot;primary&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;config&quot;</span>, <span class="token string">&quot;partitioned&quot;</span> <span class="token builtin class-name">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span>
			config.system.sessions
				shard key: <span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
				unique: <span class="token boolean">false</span>
				balancing: <span class="token boolean">true</span>
				chunks:
					myshardrs01 <span class="token number">1</span>
					<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;<span class="token variable">$minKey</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> --<span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;<span class="token variable">$maxKey</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> on <span class="token builtin class-name">:</span> myshardrs01 Timestamp<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">0</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分片规则二：范围策略</p><p>对于 基于范围的分片 ,MongoDB按照片键的范围把数据分成不同部分.假设有一个数字的片键:想象一个 从负无穷到正无穷的直线,每一个片键的值都在直线上画了一个点.MongoDB把这条直线划分为更短的不 重叠的片段,并称之为 数据块 ,每个数据块包含了片键在一定范围内的数据.</p><p>在使用片键做范围划分的系统中,拥有”相近”片键的文档很可能存储在同一个数据块中,因此也会存储在同 一个分片中.</p><p>如使用作者年龄字段作为片键，按照点赞数的值进行分片：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos <span class="token operator">&gt;</span> sh.shardCollection<span class="token punctuation">(</span><span class="token string">&quot;articledb.author&quot;</span>, <span class="token punctuation">{</span> <span class="token string">&quot;age&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string">&quot;collectionsharded&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;articledb.author&quot;</span>,
    <span class="token string">&quot;collectionUUID&quot;</span><span class="token builtin class-name">:</span> UUID<span class="token punctuation">(</span><span class="token string">&quot;9a47bdaa-213a-4039-9c18-e70bfc369df7&quot;</span><span class="token punctuation">)</span>,
    <span class="token string">&quot;ok&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>,
    <span class="token string">&quot;operationTime&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1567512803</span>, <span class="token number">13</span><span class="token punctuation">)</span>,
    <span class="token string">&quot;<span class="token variable">$clusterTime</span>&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;clusterTime&quot;</span><span class="token builtin class-name">:</span> Timestamp<span class="token punctuation">(</span><span class="token number">1567512803</span>, <span class="token number">13</span><span class="token punctuation">)</span>,
        <span class="token string">&quot;signature&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">{</span>
            <span class="token string">&quot;hash&quot;</span><span class="token builtin class-name">:</span> BinData<span class="token punctuation">(</span><span class="token number">0</span>, <span class="token string">&quot;eE9QT5yE5sL1Tyr7+3U8GRy5+5Q=&quot;</span><span class="token punctuation">)</span>,
            <span class="token string">&quot;keyId&quot;</span><span class="token builtin class-name">:</span> NumberLong<span class="token punctuation">(</span><span class="token string">&quot;6732061237309341726&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意的是：</p><p>1）一个集合只能指定一个片键，否则报错。</p><p>2）一旦对一个集合分片，分片键和分片值就不可改变。 如：不能给集合选择不同的分片键、不能更新 分片键的值。</p><p>3）根据age索引进行分配数据。</p><p>查看分片状态：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>articledb.author
	shard key: <span class="token punctuation">{</span> <span class="token string">&quot;age&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
	unique: <span class="token boolean">false</span>
	balancing: <span class="token boolean">true</span>
	chunks:
		myshardrs01 <span class="token number">1</span>
		<span class="token punctuation">{</span> <span class="token string">&quot;age&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;<span class="token variable">$minKey</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> --<span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span> <span class="token string">&quot;age&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;<span class="token variable">$maxKey</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> on <span class="token builtin class-name">:</span> myshardrs01 Timestamp<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">0</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>基于范围的分片方式与基于哈希的分片方式性能对比：</p><p>基于范围的分片方式提供了更高效的范围查询,给定一个片键的范围,分发路由可以很简单地确定哪个数据块存储了请求需要的数据,并将请求转发到相应的分片中.</p><p>不过,基于范围的分片会导致数据在不同分片上的不均衡,有时候,带来的消极作用会大于查询性能的积极作用.比如,如果片键所在的字段是线性增长的,一定时间内的所有请求都会落到某个固定的数据块中,最终导致分布在同一个分片中.在这种情况下,一小部分分片承载了集群大部分的数据,系统并不能很好地进行扩展.</p><p>与此相比,基于哈希的分片方式以范围查询性能的损失为代价,保证了集群中数据的均衡.哈希值的随机性使数据随机分布在每个数据块中,因此也随机分布在不同分片中.但是也正由于随机性,一个范围查询很难确定应该请求哪些分片,通常为了返回需要的结果,需要请求所有分片.</p><p>如无特殊情况，一般推荐使用 Hash Sharding。</p><p>而使用<sub>_id</sub>作为片键是一个不错的选择，因为它是必有的，你可以使用数据文档<sub>_id</sub>的哈希作为片键。这个方案能够是的读和写都能够平均分布，并且它能够保证每个文档都有不同的片键所以数据块能够很精细。</p><p>似乎还是不够完美，因为这样的话对多个文档的查询必将命中所有的分片。虽说如此，这也是一种比较好的方案了。</p><p>理想化的 shard key 可以让 documents 均匀地在集群中分布：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230301094705664.png" alt="image-20230301094705664" tabindex="0" loading="lazy"><figcaption>image-20230301094705664</figcaption></figure><p>显示集群的详细信息：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span> db.printShardingStatus<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看均衡器是否工作（需要重新均衡时系统才会自动启动，不用管它）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span> sh.isBalancerRunning<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>查看当前Balancer状态：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span> sh.getBalancerState<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-6-3-分片后插入数据测试" tabindex="-1"><a class="header-anchor" href="#_2-6-3-分片后插入数据测试" aria-hidden="true">#</a> 2.6.3 分片后插入数据测试</h3><p>测试一（哈希规则）：登录mongs后，向comment循环插入1000条数据做测试：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span> use articledb
switched to db articledb
mongos<span class="token operator">&gt;</span> for<span class="token punctuation">(</span>var <span class="token assign-left variable">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">1000</span><span class="token punctuation">;</span>i++<span class="token punctuation">)</span>
<span class="token punctuation">{</span>db.comment.insert<span class="token punctuation">(</span><span class="token punctuation">{</span>_id:i+<span class="token string">&quot;&quot;</span>,nickname:<span class="token string">&quot;BoBo&quot;</span>+i<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
WriteResult<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;nInserted&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
mongos<span class="token operator">&gt;</span> db.comment.count<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token number">1000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：js的语法，因为mongo的shell是一个JavaScript的shell。</p><p>注意：从路由上插入的数据，必须包含片键，否则无法插入。</p><p>分别登陆两个片的主节点，统计文档数量</p><p>第一个分片副本集：</p><p>/usr/local/mongodb/bin/mongo --host 180.76.159.126 --port 27018</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs01:PRIMARY<span class="token operator">&gt;</span> use articledb
switched to db articledb
myshardrs01:PRIMARY<span class="token operator">&gt;</span> db.comment.count<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token number">508</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第二个分片副本集：</p><p>/usr/local/mongodb/bin/mongo --host 180.76.159.126 --port 27318</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myshardrs02:PRIMARY<span class="token operator">&gt;</span> use articledb
switched to db articledb
myshardrs02:PRIMARY<span class="token operator">&gt;</span> db.comment.count<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token number">493</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，1000条数据近似均匀的分布到了2个shard上。是根据片键的哈希值分配的。</p><p>这种分配方式非常易于水平扩展：一旦数据存储需要更大空间，可以直接再增加分片即可，同时提升了性能。</p><p>使用db.comment.stats()查看单个集合的完整情况，mongos执行该命令可以查看该集合的数据分片的情况。使用sh.status()查看本库内所有集合的分片信息。</p><p>测试二（范围规则）：登录mongs后，向comment循环插入1000条数据做测试：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span> use articledb
switched to db articledb
mongos<span class="token operator">&gt;</span> for<span class="token punctuation">(</span>var <span class="token assign-left variable">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">20000</span><span class="token punctuation">;</span>i++<span class="token punctuation">)</span>
<span class="token punctuation">{</span>db.author.save<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;name&quot;</span><span class="token builtin class-name">:</span><span class="token string">&quot;BoBoBoBoBoBoBoBoBoBoBoBoBoBoBoBoBoBoBoBoBoBoBoBoBoBoBoB
oBoBoBoBoBoBoBoBo&quot;</span>+i,<span class="token string">&quot;age&quot;</span>:NumberInt<span class="token punctuation">(</span>i%120<span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
WriteResult<span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token string">&quot;nInserted&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
mongos<span class="token operator">&gt;</span> db.comment.count<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token number">20000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>插入成功后，仍然要分别查看两个分片副本集的数据情况。</p><p>分片效果：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>articledb.author
					shard key: <span class="token punctuation">{</span> <span class="token string">&quot;age&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
					unique: <span class="token boolean">false</span>
					balancing: <span class="token boolean">true</span>
					chunks:
						myshardrs01 <span class="token number">2</span>
						myshardrs02 <span class="token number">1</span>
					<span class="token punctuation">{</span> <span class="token string">&quot;age&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;<span class="token variable">$minKey</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> --<span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span> <span class="token string">&quot;age&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> on <span class="token builtin class-name">:</span> myshardrs02 Timestamp<span class="token punctuation">(</span><span class="token number">2</span>, <span class="token number">0</span><span class="token punctuation">)</span>
					<span class="token punctuation">{</span> <span class="token string">&quot;age&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">0</span> <span class="token punctuation">}</span> --<span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span> <span class="token string">&quot;age&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">112</span> <span class="token punctuation">}</span> on <span class="token builtin class-name">:</span> myshardrs01 Timestamp<span class="token punctuation">(</span><span class="token number">2</span>, <span class="token number">1</span><span class="token punctuation">)</span>
					<span class="token punctuation">{</span> <span class="token string">&quot;age&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">112</span> <span class="token punctuation">}</span> --<span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span> <span class="token string">&quot;age&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;<span class="token variable">$maxKey</span>&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> on <span class="token builtin class-name">:</span> myshardrs01 Timestamp<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token number">3</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><p>如果查看状态发现没有分片，则可能是由于以下原因造成了：</p><p>1）系统繁忙，正在分片中。</p><p>2）数据块（chunk）没有填满，默认的数据块尺寸（chunksize）是64M，填满后才会考虑向其他片的 数据块填充数据，因此，为了测试，可以将其改小，这里改为1M，操作如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>use config
db.settings.save<span class="token punctuation">(</span> <span class="token punctuation">{</span> _id:<span class="token string">&quot;chunksize&quot;</span>, value: <span class="token number">1</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>测试完改回来：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>db.settings.save<span class="token punctuation">(</span> <span class="token punctuation">{</span> _id:<span class="token string">&quot;chunksize&quot;</span>, value: <span class="token number">64</span> <span class="token punctuation">}</span> <span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>注意：要先改小，再设置分片。为了测试，可以先删除集合，重新建立集合的分片策略，再插入数据测试即可。</p><h3 id="_2-6-4-再增加一个路由节点" tabindex="-1"><a class="header-anchor" href="#_2-6-4-再增加一个路由节点" aria-hidden="true">#</a> 2.6.4 再增加一个路由节点</h3><p>文件夹：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#-----------mongos02</span>
<span class="token function">mkdir</span> <span class="token parameter variable">-p</span> /mongodb/sharded_cluster/mymongos_27117/log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>新建或修改配置文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /mongodb/sharded_cluster/mymongos_27117/mongos.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>mongos.conf</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	<span class="token key atrule">destination</span><span class="token punctuation">:</span> file
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/sharded_cluster/mymongos_27117/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> /mongodb/sharded_cluster/mymongos_27117/log/mongod.pid&quot;
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定所有IP，有副作用，副本集初始化的时候，节点名字会自动设置为本地域名，而不是ip</span>
	<span class="token comment">#bindIpAll: true</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#bindIp</span>
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27117</span>
<span class="token key atrule">sharding</span><span class="token punctuation">:</span>
	<span class="token key atrule">configDB</span><span class="token punctuation">:</span>
		myconfigrs/180.76.159.126<span class="token punctuation">:</span><span class="token number">27019</span><span class="token punctuation">,</span>180.76.159.126<span class="token punctuation">:</span><span class="token number">27119</span><span class="token punctuation">,</span>180.76.159.126<span class="token punctuation">:</span><span class="token number">27219</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动mongos2：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongos -f</span>
/mongodb/sharded_cluster/mymongos_27117/mongos.conf
about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections.
forked process: <span class="token number">129874</span>
child process started successfully, parent exiting
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用mongo客户端登录27117，发现，第二个路由无需配置，因为分片配置都保存到了配置服务器中了。</p><h2 id="_2-7-compass连接分片集群" tabindex="-1"><a class="header-anchor" href="#_2-7-compass连接分片集群" aria-hidden="true">#</a> 2.7 Compass连接分片集群</h2><p>compass连接：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230301095319358.png" alt="image-20230301095319358" tabindex="0" loading="lazy"><figcaption>image-20230301095319358</figcaption></figure><p>提示：和连接单机mongod一样。</p><p>连接成功后，上方有mongos和分片集群的提示：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230301095335877.png" alt="image-20230301095335877" tabindex="0" loading="lazy"><figcaption>image-20230301095335877</figcaption></figure><h2 id="_2-8-springdatamongdb连接分片集群" tabindex="-1"><a class="header-anchor" href="#_2-8-springdatamongdb连接分片集群" aria-hidden="true">#</a> 2.8 SpringDataMongDB连接分片集群</h2><p>Java客户端常用的是SpringDataMongoDB，其连接的是mongs路由，配置和单机mongod的配置是一样的。</p><p>多个路由的时候的SpringDataMongoDB的客户端配置参考如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>spring:
	<span class="token comment">#数据源配置</span>
	data:
	mongodb:
		<span class="token comment"># 主机地址</span>
		<span class="token comment"># host: 180.76.159.126</span>
		<span class="token comment"># 数据库</span>
		<span class="token comment"># database: articledb</span>
		<span class="token comment"># 默认端口是27017</span>
		<span class="token comment"># port: 27017</span>
		<span class="token comment">#也可以使用uri连接</span>
		<span class="token comment"># uri: mongodb://192.168.40.134:28017/articledb</span>
		<span class="token comment"># 连接副本集字符串</span>
		<span class="token comment"># uri: mongodb://180.76.159.126:27017,180.76.159.126:27018,180.76.159.126:27019/articledb?connect=replicaSet&amp;slaveOk=true&amp;replicaSet=myrs</span>
		<span class="token comment">#连接路由字符串</span>
		uri: mongodb://180.76.159.126:27017,180.76.159.126:27117/articledb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过日志发现，写入数据的时候，会选择一个路由写入：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token number">2019</span>-09-03 <span class="token number">11</span>:04:09.166 INFO <span class="token number">11816</span> --- <span class="token punctuation">[</span><span class="token number">68.40</span>.141:27117<span class="token punctuation">]</span>
org.mongodb.driver.connection <span class="token builtin class-name">:</span> Opened connection
<span class="token punctuation">[</span>connectionId<span class="token punctuation">{</span>localValue:2<span class="token punctuation">}</span><span class="token punctuation">]</span> to <span class="token number">180.76</span>.159.126:27117
<span class="token number">2019</span>-09-03 <span class="token number">11</span>:04:09.166 INFO <span class="token number">11816</span> --- <span class="token punctuation">[</span><span class="token number">68.40</span>.141:27017<span class="token punctuation">]</span>
org.mongodb.driver.connection <span class="token builtin class-name">:</span> Opened connection
<span class="token punctuation">[</span>connectionId<span class="token punctuation">{</span>localValue:1<span class="token punctuation">}</span><span class="token punctuation">]</span> to <span class="token number">180.76</span>.159.126:27017
<span class="token number">2019</span>-09-03 <span class="token number">11</span>:04:09.529 INFO <span class="token number">11816</span> --- <span class="token punctuation">[</span> main<span class="token punctuation">]</span>
org.mongodb.driver.connection <span class="token builtin class-name">:</span> Opened connection
<span class="token punctuation">[</span>connectionId<span class="token punctuation">{</span>localValue:3<span class="token punctuation">}</span><span class="token punctuation">]</span> to <span class="token number">180.76</span>.159.126:27117
<span class="token number">2019</span>-09-03 <span class="token number">11</span>:04:09.826 INFO <span class="token number">11816</span> --- <span class="token punctuation">[</span> main<span class="token punctuation">]</span>
c.i.article.service.CommentServiceTest <span class="token builtin class-name">:</span> Started CommentServiceTest <span class="token keyword">in</span> <span class="token number">7.009</span>
seconds <span class="token punctuation">(</span>JVM running <span class="token keyword">for</span> <span class="token number">8.043</span><span class="token punctuation">)</span>
<span class="token number">2019</span>-09-03 <span class="token number">11</span>:04:10.173 INFO <span class="token number">11816</span> --- <span class="token punctuation">[</span> Thread-2<span class="token punctuation">]</span>
org.mongodb.driver.connection <span class="token builtin class-name">:</span> Closed connection
<span class="token punctuation">[</span>connectionId<span class="token punctuation">{</span>localValue:3<span class="token punctuation">}</span><span class="token punctuation">]</span> to <span class="token number">180.76</span>.159.126:27117 because the
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-9-清除所有的节点数据-备用" tabindex="-1"><a class="header-anchor" href="#_2-9-清除所有的节点数据-备用" aria-hidden="true">#</a> 2.9 清除所有的节点数据（备用）</h2><p>如果在搭建分片的时候有操作失败或配置有问题，需要重新来过的，可以进行如下操作：</p><p>第一步：查询出所有的测试服务节点的进程：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost sharded_cluster<span class="token punctuation">]</span><span class="token comment"># ps -ef |grep mongo</span>
root <span class="token number">10184</span> <span class="token number">1</span> <span class="token number">0</span> 06:04 ? 00:01:25 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/sharded_cluster/myshardrs01_27018/mongod.conf
root <span class="token number">10219</span> <span class="token number">1</span> <span class="token number">0</span> 06:04 ? 00:01:25 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/sharded_cluster/myshardrs01_27118/mongod.conf
root <span class="token number">10253</span> <span class="token number">1</span> <span class="token number">0</span> 06:04 ? 00:00:46 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/sharded_cluster/myshardrs01_27218/mongod.conf
root <span class="token number">10312</span> <span class="token number">1</span> <span class="token number">0</span> 06:04 ? 00:01:23 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/sharded_cluster/myshardrs02_27318/mongod.conf
root <span class="token number">10346</span> <span class="token number">1</span> <span class="token number">0</span> 06:05 ? 00:01:23 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/sharded_cluster/myshardrs02_27418/mongod.conf
root <span class="token number">10380</span> <span class="token number">1</span> <span class="token number">0</span> 06:05 ? 00:00:44 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/sharded_cluster/myshardrs02_27518/mongod.conf
root <span class="token number">10414</span> <span class="token number">1</span> <span class="token number">1</span> 06:05 ? 00:01:36 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/sharded_cluster/myconfigrs_27019/mongod.conf
root <span class="token number">10453</span> <span class="token number">1</span> <span class="token number">1</span> 06:05 ? 00:01:37 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/sharded_cluster/myconfigrs_27119/mongod.conf
root <span class="token number">10492</span> <span class="token number">1</span> <span class="token number">1</span> 06:05 ? 00:01:38 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/sharded_cluster/myconfigrs_27219/mongod.conf
root <span class="token number">11392</span> <span class="token number">1</span> <span class="token number">0</span> 06:15 ? 00:00:24 /usr/local/mongodb/bin/mongos
<span class="token parameter variable">--config</span> /mongodb/sharded_cluster/mymongos_27017/mongos.cfg
root <span class="token number">14829</span> <span class="token number">1</span> <span class="token number">0</span> 07:15 ? 00:00:13 /usr/local/mongodb/bin/mongos
<span class="token parameter variable">--config</span> /mongodb/sharded_cluster/mymongos_27117/mongos.cfg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>根据上述的进程编号，依次中断进程：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">kill</span> <span class="token parameter variable">-2</span> 进程编号
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第二步：清除所有的节点的数据：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-rf</span> /mongodb/sharded_cluster/myconfigrs_27019/data/db/*.* <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /mongodb/sharded_cluster/myconfigrs_27119/data/db/*.* <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /mongodb/sharded_cluster/myconfigrs_27219/data/db/*.* <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /mongodb/sharded_cluster/myshardrs01_27018/data/db/*.* <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /mongodb/sharded_cluster/myshardrs01_27118/data/db/*.* <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /mongodb/sharded_cluster/myshardrs01_27218/data/db/*.* <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /mongodb/sharded_cluster/myshardrs02_27318/data/db/*.* <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /mongodb/sharded_cluster/myshardrs02_27418/data/db/*.* <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /mongodb/sharded_cluster/myshardrs02_27518/data/db/*.* <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /mongodb/sharded_cluster/mymongos_27017/data/db/*.* <span class="token punctuation">\\</span> <span class="token operator">&amp;</span>
<span class="token function">rm</span> <span class="token parameter variable">-rf</span> /mongodb/sharded_cluster/mymongos_27117/data/db/*.*
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第三步：查看或修改有问题的配置</p><p>第四步：依次启动所有节点，不包括路由节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myshardrs01_27018/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myshardrs01_27118/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myshardrs01_27218/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myshardrs02_27318/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myshardrs02_27418/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myshardrs02_27518/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myconfigrs_27019/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myconfigrs_27119/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myconfigrs_27219/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第五步：对两个数据分片副本集和一个配置副本集进行初始化和相关配置</p><p>第六步：检查路由mongos的配置，并启动mongos</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/mymongos_27017/mongos.cfg
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/mymongos_27017/mongos.cfg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>第七步：mongo登录mongos，在其上进行相关操作。</p><h1 id="_3-安全认证" tabindex="-1"><a class="header-anchor" href="#_3-安全认证" aria-hidden="true">#</a> 3. 安全认证</h1><h2 id="_3-1-mongodb的用户和角色权限简介" tabindex="-1"><a class="header-anchor" href="#_3-1-mongodb的用户和角色权限简介" aria-hidden="true">#</a> 3.1 MongoDB的用户和角色权限简介</h2><p>默认情况下，MongoDB实例启动运行时是没有启用用户访问权限控制的，也就是说，在实例本机服务器上都可以随意连接到实例进行各种操作，MongoDB不会对连接客户端进行用户验证，这是非常危险的。</p><p>mongodb官网上说，为了能保障mongodb的安全可以做以下几个步骤：</p><p>1）使用新的端口，默认的27017端口如果一旦知道了ip就能连接上，不太安全。</p><p>2）设置mongodb的网络环境，最好将mongodb部署到公司服务器内网，这样外网是访问不到的。公司内部访问使用vpn等。</p><p>3）开启安全认证。认证要同时设置服务器之间的内部认证方式，同时要设置客户端连接到集群的账号 密码认证方式。</p><p>为了强制开启用户访问控制(用户验证)，则需要在MongoDB实例启动时使用选项 <code>--auth</code> 或在指定启动配置文件中添加选项<code>auth=true</code>。</p><p>在开始之前需要了解一下概念</p><p>1）启用访问控制：</p><p>MongoDB使用的是基于角色的访问控制(Role-Based Access Control,RBAC)来管理用户对实例的访问。通过对用户授予一个或多个角色来控制用户访问数据库资源的权限和数据库操作的权限，在对用户分配角色之前，用户无法访问实例。</p><p>在实例启动时添加选项 <code>--auth</code> 或指定启动配置文件中添加选项<code>auth=true</code>。</p><p>2）角色：</p><p>在MongoDB中通过角色对用户授予相应数据库资源的操作权限，每个角色当中的权限可以显式指定，也可以通过继承其他角色的权限，或者两都都存在的权限。</p><p>3）权限：</p><p>权限由指定的数据库资源(resource)以及允许在指定资源上进行的操作(action)组成。</p><ol><li><p>资源(resource)包括：数据库、集合、部分集合和集群；</p></li><li><p>操作(action)包括：对资源进行的增、删、改、查(CRUD)操作。</p></li></ol><p>在角色定义时可以包含一个或多个已存在的角色，新创建的角色会继承包含的角色所有的权限。在同一个数据库中，新创建角色可以继承其他角色的权限，在<sub>admin</sub>数据库中创建的角色可以继承在其它任意数据库中角色的权限。</p><p>关于角色权限的查看，可以通过如下命令查询（了解）：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>// 查询所有角色权限<span class="token punctuation">(</span>仅用户自定义角色<span class="token punctuation">)</span>
<span class="token operator">&gt;</span> db.runCommand<span class="token punctuation">(</span><span class="token punctuation">{</span> rolesInfo: <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
// 查询所有角色权限<span class="token punctuation">(</span>包含内置角色<span class="token punctuation">)</span>
<span class="token operator">&gt;</span> db.runCommand<span class="token punctuation">(</span><span class="token punctuation">{</span> rolesInfo: <span class="token number">1</span>, showBuiltinRoles: <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
// 查询当前数据库中的某角色的权限
<span class="token operator">&gt;</span> db.runCommand<span class="token punctuation">(</span><span class="token punctuation">{</span> rolesInfo: <span class="token string">&quot;&lt;rolename&gt;&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
// 查询其它数据库中指定的角色权限
<span class="token operator">&gt;</span> db.runCommand<span class="token punctuation">(</span><span class="token punctuation">{</span> rolesInfo: <span class="token punctuation">{</span> role: <span class="token string">&quot;&lt;rolename&gt;&quot;</span>, db: <span class="token string">&quot;&lt;database&gt;&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
// 查询多个角色权限
<span class="token operator">&gt;</span> db.runCommand<span class="token punctuation">(</span>
	<span class="token punctuation">{</span>
		rolesInfo: <span class="token punctuation">[</span>
			<span class="token string">&quot;&lt;rolename&gt;&quot;</span>,
			<span class="token punctuation">{</span> role: <span class="token string">&quot;&lt;rolename&gt;&quot;</span>, db: <span class="token string">&quot;&lt;database&gt;&quot;</span> <span class="token punctuation">}</span>,
			<span class="token punctuation">..</span>.
		<span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例：</p><p>查看所有内置角色：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> db.runCommand<span class="token punctuation">(</span><span class="token punctuation">{</span> rolesInfo: <span class="token number">1</span>, showBuiltinRoles: <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;__queryableBackup&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;__system&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;backup&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;clusterAdmin&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;clusterManager&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;clusterMonitor&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;dbAdmin&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;dbAdminAnyDatabase&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;dbOwner&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;enableSharding&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;hostManager&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;read&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;readAnyDatabase&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;readWrite&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;readWriteAnyDatabase&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;restore&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;root&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;userAdmin&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>,
        <span class="token punctuation">{</span>
            <span class="token string">&quot;role&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;userAdminAnyDatabase&quot;</span>,
            <span class="token string">&quot;db&quot;</span><span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>,
            <span class="token string">&quot;isBuiltin&quot;</span><span class="token builtin class-name">:</span> true,
            <span class="token string">&quot;roles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>,
            <span class="token string">&quot;inheritedRoles&quot;</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>,
    <span class="token string">&quot;ok&quot;</span><span class="token builtin class-name">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常用的内置角色：</p><ul><li>数据库用户角色：read、readWrite;</li><li>所有数据库用户角色：readAnyDatabase、readWriteAnyDatabase、 userAdminAnyDatabase、dbAdminAnyDatabase</li><li>数据库管理角色：dbAdmin、dbOwner、userAdmin；</li><li>集群管理角色：clusterAdmin、clusterManager、clusterMonitor、hostManager；</li><li>备份恢复角色：backup、restore；</li><li>超级用户角色：root</li><li>内部角色：system</li></ul><p>角色说明：</p><table><thead><tr><th>角色</th><th>权限描述</th></tr></thead><tbody><tr><td>read</td><td>可以读取指定数据库中任何数据。</td></tr><tr><td>readWrite</td><td>可以读写指定数据库中任何数据，包括创建、重命名、删除集合。</td></tr><tr><td>readAnyDatabase</td><td>可以读取所有数据库中任何数据(除了数据库config和local之外)。</td></tr><tr><td>readWriteAnyDatabase</td><td>可以读写所有数据库中任何数据(除了数据库config和local之外)。</td></tr><tr><td>userAdminAnyDatabase</td><td>可以在指定数据库创建和修改用户(除了数据库config和local之外)。</td></tr><tr><td>dbAdminAnyDatabase</td><td>可以读取任何数据库以及对数据库进行清理、修改、压缩、获取统计信息、执行检查等操作(除了数据库config和local之外)。</td></tr><tr><td>dbAdmin</td><td>可以读取指定数据库以及对数据库进行清理、修改、压缩、获取统计信息、执行检查等操作。</td></tr><tr><td>userAdmin</td><td>可以在指定数据库创建和修改用户。</td></tr><tr><td>clusterAdmin</td><td>可以对整个集群或数据库系统进行管理操作。</td></tr><tr><td>backup</td><td>备份MongoDB数据最小的权限。</td></tr><tr><td>restore</td><td>从备份文件中还原恢复MongoDB数据(除了system.profile集合)的权限。</td></tr><tr><td>root</td><td>超级账号，超级权限</td></tr></tbody></table><h2 id="_3-2-单实例环境" tabindex="-1"><a class="header-anchor" href="#_3-2-单实例环境" aria-hidden="true">#</a> 3.2 单实例环境</h2><p>目标：对单实例的MongoDB服务开启安全认证，这里的单实例指的是未开启副本集或分片的MongoDB 实例。</p><h3 id="_3-2-1-关闭已开启的服务-可选" tabindex="-1"><a class="header-anchor" href="#_3-2-1-关闭已开启的服务-可选" aria-hidden="true">#</a> 3.2.1 关闭已开启的服务（可选）</h3><p>增加mongod的单实例的安全认证功能，可以在服务搭建的时候直接添加，也可以在之前搭建好的服务上添加。</p><p>本文使用之前搭建好的服务，因此，先停止之前的服务</p><p>停止服务的方式有两种：快速关闭和标准关闭，下面依次说明：</p><p>（1）快速关闭方法（快速，简单，数据可能会出错）</p><p>目标：通过系统的kill命令直接杀死进程：杀完要检查一下，避免有的没有杀掉。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#通过进程编号关闭节点</span>
<span class="token function">kill</span> <span class="token parameter variable">-2</span> <span class="token number">54410</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>【补充】</p><p>如果一旦是因为数据损坏，则需要进行如下操作（了解）：</p><p>1）删除lock文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-f</span> /mongodb/single/data/db/*.lock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2）修复数据：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> <span class="token parameter variable">--dbpath</span><span class="token operator">=</span>/mongodb/single/data/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（2）标准的关闭方法（数据不容易出错，但麻烦）：</p><p>目标：通过mongo客户端中的shutdownServer命令来关闭服务</p><p>主要的操作步骤参考如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//客户端登录服务，注意，这里通过localhost登录，如果需要远程登录，必须先登录认证才行。
mongo <span class="token parameter variable">--port</span> <span class="token number">27017</span>
//<span class="token comment">#切换到admin库</span>
use admin
//关闭服务
db.shutdownServer<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-2-2-添加用户和权限" tabindex="-1"><a class="header-anchor" href="#_3-2-2-添加用户和权限" aria-hidden="true">#</a> 3.2.2 添加用户和权限</h3><p>（1）先按照普通无授权认证的配置，来配置服务端的配置文件<code>/mongodb/single/mongod.conf</code>：（参考，复用之前课程的）</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">systemLog</span><span class="token punctuation">:</span>
	<span class="token comment">#MongoDB发送所有日志输出的目标指定为文件</span>
	<span class="token key atrule">destination</span><span class="token punctuation">:</span> file
	<span class="token comment">#mongod或mongos应向其发送所有诊断日志记录信息的日志文件的路径</span>
	<span class="token key atrule">path</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/single/log/mongod.log&quot;</span>
	<span class="token comment">#当mongos或mongod实例重新启动时，mongos或mongod会将新条目附加到现有日志文件的末尾。</span>
	<span class="token key atrule">logAppend</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">storage</span><span class="token punctuation">:</span>
	<span class="token comment">#mongod实例存储其数据的目录。storage.dbPath设置仅适用于mongod。</span>
	<span class="token key atrule">dbPath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/single/data/db&quot;</span>
	<span class="token key atrule">journal</span><span class="token punctuation">:</span>
		<span class="token comment">#启用或禁用持久性日志以确保数据文件保持有效和可恢复。</span>
		<span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
<span class="token key atrule">processManagement</span><span class="token punctuation">:</span>
	<span class="token comment">#启用在后台运行mongos或mongod进程的守护进程模式。</span>
	<span class="token key atrule">fork</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
	<span class="token comment">#指定用于保存mongos或mongod进程的进程ID的文件位置，其中mongos或mongod将写入其PID</span>
	<span class="token key atrule">pidFilePath</span><span class="token punctuation">:</span> <span class="token string">&quot;/mongodb/single/log/mongod.pid&quot;</span>
<span class="token key atrule">net</span><span class="token punctuation">:</span>
	<span class="token comment">#服务实例绑定的IP</span>
	<span class="token key atrule">bindIp</span><span class="token punctuation">:</span> localhost<span class="token punctuation">,</span>192.168.0.2
	<span class="token comment">#绑定的端口</span>
	<span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">27017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）按之前未开启认证的方式（不添加 --auth 参数）来启动MongoDB服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span> /mongodb/single/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>提示：</p><p>在操作用户时，启动mongod服务时尽量不要开启授权。</p><p>（3）使用Mongo客户端登录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongo <span class="token parameter variable">--host</span> <span class="token number">180.76</span>.159.126 <span class="token parameter variable">--port</span> <span class="token number">27017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（4）创建两个管理员用户，一个是系统的超级管理员 <code>myroot</code> ，一个是admin库的管理用户 <code>myadmin</code> ：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//切换到admin库
<span class="token operator">&gt;</span> use admin
//创建系统超级用户 myroot,设置密码123456，设置角色root
//<span class="token operator">&gt;</span> db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user:<span class="token string">&quot;myroot&quot;</span>,pwd:<span class="token string">&quot;123456&quot;</span>,roles:<span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token string">&quot;role&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;root&quot;</span>, <span class="token string">&quot;db&quot;</span> <span class="token builtin class-name">:</span>
<span class="token string">&quot;admin&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
//或
<span class="token operator">&gt;</span> db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user:<span class="token string">&quot;myroot&quot;</span>,pwd:<span class="token string">&quot;123456&quot;</span>,roles:<span class="token punctuation">[</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Successfully added user: <span class="token punctuation">{</span> <span class="token string">&quot;user&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myroot&quot;</span>, <span class="token string">&quot;roles&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;root&quot;</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>
//创建专门用来管理admin库的账号myadmin，只用来作为用户权限的管理
<span class="token operator">&gt;</span> db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user:<span class="token string">&quot;myadmin&quot;</span>,pwd:<span class="token string">&quot;123456&quot;</span>,roles:
<span class="token punctuation">[</span><span class="token punctuation">{</span>role:<span class="token string">&quot;userAdminAnyDatabase&quot;</span>,db:<span class="token string">&quot;admin&quot;</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Successfully added user: <span class="token punctuation">{</span>
		<span class="token string">&quot;user&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myadmin&quot;</span>,
		<span class="token string">&quot;roles&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
				<span class="token punctuation">{</span>
						<span class="token string">&quot;role&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;userAdminAnyDatabase&quot;</span>,
						<span class="token string">&quot;db&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>
				<span class="token punctuation">}</span>
		<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
//查看已经创建了的用户的情况：
<span class="token operator">&gt;</span> db.system.users.<span class="token function-name function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;admin.myroot&quot;</span>, <span class="token string">&quot;userId&quot;</span> <span class="token builtin class-name">:</span> UUID<span class="token punctuation">(</span><span class="token string">&quot;9a0a698c-73ad-4c45-8f33-
e8a90d3ad689&quot;</span><span class="token punctuation">)</span>, <span class="token string">&quot;user&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myroot&quot;</span>, <span class="token string">&quot;db&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>, <span class="token string">&quot;credentials&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;SCRAM-SHA1&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;iterationCount&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">10000</span>, <span class="token string">&quot;salt&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;4tXXi9g9wMlrR32e+NleyA==&quot;</span>,
<span class="token string">&quot;storedKey&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;78EXQoWeA6lLYTTzcQrtJuWLcmg=&quot;</span>, <span class="token string">&quot;serverKey&quot;</span> <span class="token builtin class-name">:</span>
<span class="token string">&quot;xwze/lGcQ7FI5cSFoilY4CW4Wks=&quot;</span> <span class="token punctuation">}</span>, <span class="token string">&quot;SCRAM-SHA-256&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;iterationCount&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">15000</span>,
<span class="token string">&quot;salt&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;+Hq2Y6PiNFkDEBYFertTaZSWI9FqbkYGdHaFkg==&quot;</span>, <span class="token string">&quot;storedKey&quot;</span> <span class="token builtin class-name">:</span>
<span class="token string">&quot;gUZ5Wyl7dsjtu77Isw2dsJ+Ck4fKiKZteUh/CuJoQj4=&quot;</span>, <span class="token string">&quot;serverKey&quot;</span> <span class="token builtin class-name">:</span>
<span class="token string">&quot;4WiBApuB435LNPP49DxKwJ+YGcRaWZNvEq/Ibkr5Lxo=&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>, <span class="token string">&quot;roles&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token string">&quot;role&quot;</span> <span class="token builtin class-name">:</span>
<span class="token string">&quot;root&quot;</span>, <span class="token string">&quot;db&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>
<span class="token punctuation">{</span> <span class="token string">&quot;_id&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;admin.myadmin&quot;</span>, <span class="token string">&quot;userId&quot;</span> <span class="token builtin class-name">:</span> UUID<span class="token punctuation">(</span><span class="token string">&quot;be9c832e-f894-4ffd-b76b62940707aab2&quot;</span><span class="token punctuation">)</span>, <span class="token string">&quot;user&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myadmin&quot;</span>, <span class="token string">&quot;db&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span>, <span class="token string">&quot;credentials&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;SCRAMSHA-1&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;iterationCount&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">10000</span>, <span class="token string">&quot;salt&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;KIIoSNfp5kTgpUExtTKDTA==&quot;</span>,
<span class="token string">&quot;storedKey&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;39509XHQiWi8HWLc6qMDf13WcSs=&quot;</span>, <span class="token string">&quot;serverKey&quot;</span> <span class="token builtin class-name">:</span>
<span class="token string">&quot;zKkJAKH3HgPL35/a6hkhBaCD1WE=&quot;</span> <span class="token punctuation">}</span>, <span class="token string">&quot;SCRAM-SHA-256&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">{</span> <span class="token string">&quot;iterationCount&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">15000</span>,
<span class="token string">&quot;salt&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;v76GZgBAKsWNewB7mo6dhSE59ME3HFJ5T9UXlQ==&quot;</span>, <span class="token string">&quot;storedKey&quot;</span> <span class="token builtin class-name">:</span>
<span class="token string">&quot;CwHtBiww04Y0hycHKqq4VIS5QnnuAne59+iPFooIhkk=&quot;</span>, <span class="token string">&quot;serverKey&quot;</span> <span class="token builtin class-name">:</span>
<span class="token string">&quot;HQk3RTSWDABGwxYPEiEC2+iK/rGTL6ROAD0HQEJI0F8=&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>, <span class="token string">&quot;roles&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token string">&quot;role&quot;</span> <span class="token builtin class-name">:</span>
<span class="token string">&quot;userAdminAnyDatabase&quot;</span>, <span class="token string">&quot;db&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;admin&quot;</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>
//删除用户
<span class="token operator">&gt;</span> db.dropUser<span class="token punctuation">(</span><span class="token string">&quot;myadmin&quot;</span><span class="token punctuation">)</span>
<span class="token boolean">true</span>
<span class="token operator">&gt;</span> db.system.users.find<span class="token punctuation">(</span><span class="token punctuation">)</span>
//修改密码
<span class="token operator">&gt;</span> db.changeUserPassword<span class="token punctuation">(</span><span class="token string">&quot;myroot&quot;</span>, <span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><p>1）本案例创建了两个用户，分别对应超管和专门用来管理用户的角色，事实上，你只需要一个用户即 可。如果你对安全要求很高，防止超管泄漏，则不要创建超管用户。</p><p>2）和其它数据库（MySQL）一样，权限的管理都差不多一样，也是将用户和权限信息保存到数据库对 应的表中。Mongodb存储所有的用户信息在admin 数据库的集合system.users中，保存用户名、密码 和数据库信息。</p><p>3）如果不指定数据库，则创建的指定的权限的用户在所有的数据库上有效，如 <code>{role: userAdminAnyDatabase&quot;, db:&quot;&quot;}</code></p><p>（5）认证测试</p><p>测试添加的用户是否正确</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//切换到admin
<span class="token operator">&gt;</span> use admin
//密码输错
<span class="token operator">&gt;</span> db.auth<span class="token punctuation">(</span><span class="token string">&quot;myroot&quot;</span>,<span class="token string">&quot;12345&quot;</span><span class="token punctuation">)</span>
Error: Authentication failed.
<span class="token number">0</span>
//密码正确
<span class="token operator">&gt;</span> db.auth<span class="token punctuation">(</span><span class="token string">&quot;myroot&quot;</span>,<span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
<span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（6）创建普通用户</p><p>创建普通用户可以在没有开启认证的时候添加，也可以在开启认证之后添加，但开启认证之后，必须使 用有操作admin库的用户登录认证后才能操作。底层都是将用户信息保存在了admin数据库的集合 system.users中。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//创建<span class="token punctuation">(</span>切换<span class="token punctuation">)</span>将来要操作的数据库articledb,
<span class="token operator">&gt;</span> use articledb
switched to db articledb
//创建用户，拥有articledb数据库的读写权限readWrite，密码是123456
<span class="token operator">&gt;</span> db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user: <span class="token string">&quot;bobo&quot;</span>, pwd: <span class="token string">&quot;123456&quot;</span>, roles: <span class="token punctuation">[</span><span class="token punctuation">{</span> role: <span class="token string">&quot;readWrite&quot;</span>, db:
<span class="token string">&quot;articledb&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
//<span class="token operator">&gt;</span> db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user: <span class="token string">&quot;bobo&quot;</span>, pwd: <span class="token string">&quot;123456&quot;</span>, roles: <span class="token punctuation">[</span><span class="token string">&quot;readWrite&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Successfully added user: <span class="token punctuation">{</span>
		<span class="token string">&quot;user&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;bobo&quot;</span>,
		<span class="token string">&quot;roles&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
				<span class="token punctuation">{</span>
						<span class="token string">&quot;role&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;readWrite&quot;</span>,
						<span class="token string">&quot;db&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;articledb&quot;</span>
				<span class="token punctuation">}</span>
		<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
//测试是否可用
<span class="token operator">&gt;</span> db.auth<span class="token punctuation">(</span><span class="token string">&quot;bobo&quot;</span>,<span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
<span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><p>如果开启了认证后，登录的客户端的用户必须使用admin库的角色，如拥有root角色的myadmin用户，再通过myadmin用户去创建其他角色的用户</p><h3 id="_3-2-3-服务端开启认证和客户端连接登录" tabindex="-1"><a class="header-anchor" href="#_3-2-3-服务端开启认证和客户端连接登录" aria-hidden="true">#</a> 3.2.3 服务端开启认证和客户端连接登录</h3><p>（1）关闭已经启动的服务</p><p>1）使用linux命令杀死进程：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost single<span class="token punctuation">]</span><span class="token comment"># ps -ef |grep mongo</span>
root <span class="token number">23482</span> <span class="token number">1</span> <span class="token number">0</span> 08:08 ? 00:00:55 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/single/mongod.conf
<span class="token punctuation">[</span>root@bobohost single<span class="token punctuation">]</span><span class="token comment"># kill -2 23482</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）在mongo客户端中使用shutdownServer命令来关闭。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> db.shutdownServer<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token function">shutdown</span> <span class="token builtin class-name">command</span> only works with the admin database<span class="token punctuation">;</span> try <span class="token string">&#39;use admin&#39;</span>
<span class="token operator">&gt;</span> use admin
switched to db admin
<span class="token operator">&gt;</span> db.shutdownServer<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token number">2019</span>-08-14T11:20:16.450+0800 E QUERY <span class="token punctuation">[</span>js<span class="token punctuation">]</span> Error: shutdownServer failed: <span class="token punctuation">{</span>
<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">0</span>,
<span class="token string">&quot;errmsg&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;shutdown must run from localhost when running db without
auth&quot;</span>,
<span class="token string">&quot;code&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">13</span>,
<span class="token string">&quot;codeName&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;Unauthorized&quot;</span>
<span class="token punctuation">}</span> <span class="token builtin class-name">:</span>
_getErrorWithCode@src/mongo/shell/utils.js:25:13
DB.prototype.shutdownServer@src/mongo/shell/db.js:453:1
@<span class="token punctuation">(</span>shell<span class="token punctuation">)</span>:1:1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要几个条件：</p><ul><li>必须是在admin库下执行该关闭服务命令。</li><li>如果没有开启认证，必须是从localhost登陆的，才能执行关闭服务命令。</li><li>非localhost的、通过远程登录的，必须有登录且必须登录用户有对admin操作权限才可以。</li></ul><p>（2）以开启认证的方式启动服务</p><p>有两种方式开启权限认证启动服务：一种是参数方式，一种是配置文件方式。</p><p>1）参数方式</p><p>在启动时指定参数 <code>--auth</code> ，如：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span> /mongodb/single/mongod.conf <span class="token parameter variable">--auth</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>2）配置文件方式</p><p>在mongod.conf配置文件中加入：</p><p><code>vim /mongodb/single/mongod.conf</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>security:
	<span class="token comment">#开启授权认证</span>
	authorization: enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>启动时可不加 <code>--auth</code> 参数：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span> /mongodb/single/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>（3）开启了认证的情况下的客户端登录</p><p>有两种认证方式，一种是先登录，在mongo shell中认证；一种是登录时直接认证。</p><p>1）先连接再认证</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongo --host 180.76.159.126 --port</span>
<span class="token number">27017</span>
MongoDB shell version v4.0.10
connecting to: mongodb://180.76.159.126:27017/?gssapiServiceName<span class="token operator">=</span>mongodb
Implicit session: session <span class="token punctuation">{</span> <span class="token string">&quot;id&quot;</span> <span class="token builtin class-name">:</span> UUID<span class="token punctuation">(</span><span class="token string">&quot;53fef661-35d6-4d29-b07c-020291d62e1a&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
MongoDB server version: <span class="token number">4.0</span>.10
<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><p>开启认证后再登录，发现打印的日志比较少了。</p><p>相关操作需要认证才可以：</p><p>查询admin库中的system.users集合的用户：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> use admin
switched to db admin
<span class="token operator">&gt;</span> db.system.users.find<span class="token punctuation">(</span><span class="token punctuation">)</span>
Error: error: <span class="token punctuation">{</span>
	<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">0</span>,
	<span class="token string">&quot;errmsg&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;command find requires authentication&quot;</span>,
	<span class="token string">&quot;code&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">13</span>,
	<span class="token string">&quot;codeName&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;Unauthorized&quot;</span>
<span class="token punctuation">}</span>
<span class="token operator">&gt;</span> db.auth<span class="token punctuation">(</span><span class="token string">&quot;myroot&quot;</span>,<span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
<span class="token number">1</span>
<span class="token operator">&gt;</span> db.system.users.find<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查询articledb库中的comment集合的内容：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> use articledb
switched to db articledb
<span class="token operator">&gt;</span> db.comment.find<span class="token punctuation">(</span><span class="token punctuation">)</span>
Error: error: <span class="token punctuation">{</span>
		<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">0</span>,
		<span class="token string">&quot;errmsg&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;not authorized on articledb to execute command { find: <span class="token entity" title="\\&quot;">\\&quot;</span>comment<span class="token entity" title="\\&quot;">\\&quot;</span>, filter: {}, lsid: { id: UUID(<span class="token entity" title="\\&quot;">\\&quot;</span>53fef661-35d6-4d29-b07c020291d62e1a<span class="token entity" title="\\&quot;">\\&quot;</span>) }, <span class="token variable">$db</span>: <span class="token entity" title="\\&quot;">\\&quot;</span>articledb<span class="token entity" title="\\&quot;">\\&quot;</span> }&quot;</span>,
		<span class="token string">&quot;code&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">13</span>,
		<span class="token string">&quot;codeName&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;Unauthorized&quot;</span>
<span class="token punctuation">}</span>
<span class="token operator">&gt;</span> db.auth<span class="token punctuation">(</span><span class="token string">&quot;bobo&quot;</span>,<span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
<span class="token number">1</span>
<span class="token operator">&gt;</span> db.comment.find<span class="token punctuation">(</span><span class="token punctuation">)</span>
Error: error: <span class="token punctuation">{</span>
		<span class="token string">&quot;ok&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">0</span>,
		<span class="token string">&quot;errmsg&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;too many users are authenticated&quot;</span>,
		<span class="token string">&quot;code&quot;</span> <span class="token builtin class-name">:</span> <span class="token number">13</span>,
		<span class="token string">&quot;codeName&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;Unauthorized&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><p>这里可能出现错误，说是太多的用户正在认证了。因为我们确实连续登录了两个用户了。</p><p>解决方案：退出shell，重新进来登录认证。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> <span class="token builtin class-name">exit</span>
bye
<span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># ./mongo --host 180.76.159.126 --port 27017</span>
MongoDB shell version v4.0.10
connecting to: mongodb://180.76.159.126:27017/?gssapiServiceName<span class="token operator">=</span>mongodb
Implicit session: session <span class="token punctuation">{</span> <span class="token string">&quot;id&quot;</span> <span class="token builtin class-name">:</span> UUID<span class="token punctuation">(</span><span class="token string">&quot;329c1897-566d-4231-bcb3-b2acda301863&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
MongoDB server version: <span class="token number">4.0</span>.10
<span class="token operator">&gt;</span> db.auth<span class="token punctuation">(</span><span class="token string">&quot;bobo&quot;</span>,<span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
Error: Authentication failed.
<span class="token number">0</span>
<span class="token operator">&gt;</span> use articledb
switched to db articledb
<span class="token operator">&gt;</span> db.auth<span class="token punctuation">(</span><span class="token string">&quot;bobo&quot;</span>,<span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
<span class="token number">1</span>
<span class="token operator">&gt;</span> db.comment.find<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）连接时直接认证</p><p>对admin数据库进行登录认证和相关操作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost ~<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongo --host 180.76.159.126 --port</span>
<span class="token number">27017</span> <span class="token parameter variable">--authenticationDatabase</span> admin <span class="token parameter variable">-u</span> myroot <span class="token parameter variable">-p</span> <span class="token number">123456</span>
MongoDB shell version v4.0.10
connecting to: mongodb://180.76.159.126:27017/?
<span class="token assign-left variable">authSource</span><span class="token operator">=</span>admin<span class="token operator">&amp;</span><span class="token assign-left variable">gssapiServiceName</span><span class="token operator">=</span>mongodb
Implicit session: session <span class="token punctuation">{</span> <span class="token string">&quot;id&quot;</span> <span class="token builtin class-name">:</span> UUID<span class="token punctuation">(</span><span class="token string">&quot;f959b8d6-6994-44bc-9d35-09fc7cd00ba6&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
MongoDB server version: <span class="token number">4.0</span>.10
Server has startup warnings:
<span class="token number">2019</span>-09-10T15:23:40.102+0800 I CONTROL <span class="token punctuation">[</span>initandlisten<span class="token punctuation">]</span> ** WARNING: You are
running this process as the root user, <span class="token function">which</span> is not recommended.
<span class="token number">2019</span>-09-10T15:23:40.102+0800 I CONTROL <span class="token punctuation">[</span>initandlisten<span class="token punctuation">]</span>
<span class="token number">2019</span>-09-10T15:23:40.102+0800 I CONTROL <span class="token punctuation">[</span>initandlisten<span class="token punctuation">]</span>
<span class="token number">2019</span>-09-10T15:23:40.102+0800 I CONTROL <span class="token punctuation">[</span>initandlisten<span class="token punctuation">]</span> ** WARNING:
/sys/kernel/mm/transparent_hugepage/enabled is <span class="token string">&#39;always&#39;</span><span class="token builtin class-name">.</span>
<span class="token number">2019</span>-09-10T15:23:40.102+0800 I CONTROL <span class="token punctuation">[</span>initandlisten<span class="token punctuation">]</span> ** We suggest
setting it to <span class="token string">&#39;never&#39;</span>
<span class="token number">2019</span>-09-10T15:23:40.102+0800 I CONTROL <span class="token punctuation">[</span>initandlisten<span class="token punctuation">]</span>
<span class="token number">2019</span>-09-10T15:23:40.102+0800 I CONTROL <span class="token punctuation">[</span>initandlisten<span class="token punctuation">]</span> ** WARNING:
/sys/kernel/mm/transparent_hugepage/defrag is <span class="token string">&#39;always&#39;</span><span class="token builtin class-name">.</span>
<span class="token number">2019</span>-09-10T15:23:40.102+0800 I CONTROL <span class="token punctuation">[</span>initandlisten<span class="token punctuation">]</span> ** We suggest
setting it to <span class="token string">&#39;never&#39;</span>
<span class="token number">2019</span>-09-10T15:23:40.102+0800 I CONTROL <span class="token punctuation">[</span>initandlisten<span class="token punctuation">]</span>
<span class="token operator">&gt;</span> show dbs<span class="token punctuation">;</span>
admin <span class="token number">0</span>.000GB
articledb <span class="token number">0</span>.000GB
config <span class="token number">0</span>.000GB
<span class="token builtin class-name">local</span> <span class="token number">0</span>.000GB
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对articledb数据库进行登录认证和相关操作：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost bin<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongo --host 180.76.159.126 --port</span>
<span class="token number">27017</span> <span class="token parameter variable">--authenticationDatabase</span> articledb <span class="token parameter variable">-u</span> bobo <span class="token parameter variable">-p</span> <span class="token number">123456</span>
MongoDB shell version v4.0.10
connecting to: mongodb://180.76.159.126:27017/?
<span class="token assign-left variable">authSource</span><span class="token operator">=</span>articledb<span class="token operator">&amp;</span><span class="token assign-left variable">gssapiServiceName</span><span class="token operator">=</span>mongodb
Implicit session: session <span class="token punctuation">{</span> <span class="token string">&quot;id&quot;</span> <span class="token builtin class-name">:</span> UUID<span class="token punctuation">(</span><span class="token string">&quot;e5d4148f-373b-45b8-9cff-a927ce617100&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
MongoDB server version: <span class="token number">4.0</span>.10
<span class="token operator">&gt;</span> use articledb
switched to db articledb
<span class="token operator">&gt;</span> db.comment.find<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><ul><li><code>-u</code> ：用户名</li><li><code>-p</code> ：密码</li><li><code>--authenticationDatabase</code> ：指定连接到哪个库。当登录是指定用户名密码时，必须指定对应的 数据库！</li></ul><h3 id="_3-2-4-springdatamongodb连接认证" tabindex="-1"><a class="header-anchor" href="#_3-2-4-springdatamongodb连接认证" aria-hidden="true">#</a> 3.2.4 SpringDataMongoDB连接认证</h3><p>使用用户名和密码连接到 MongoDB 服务器，你必须使用<code>&#39;username:password@hostname/dbname&#39;</code> 格式，<code>&#39;username&#39;</code>为用户名，<code>&#39;password&#39;</code> 为密码。</p><p>目标：使用用户bobo使用密码 123456 连接到MongoDB 服务上。</p><p>application.yml：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
	<span class="token comment">#数据源配置</span>
	<span class="token key atrule">data</span><span class="token punctuation">:</span>
		<span class="token key atrule">mongodb</span><span class="token punctuation">:</span>
			<span class="token comment"># 主机地址</span>
			<span class="token comment"># host: 180.76.159.126</span>
			<span class="token comment"># 数据库</span>
			<span class="token comment"># database: articledb</span>
			<span class="token comment"># 默认端口是27017</span>
			<span class="token comment"># port: 27017</span>
			<span class="token comment">#帐号</span>
			<span class="token comment"># username: bobo</span>
			<span class="token comment">#密码</span>
        	<span class="token comment"># password: 123456</span>
        	<span class="token comment">#单机有认证的情况下，也使用字符串连接</span>
			<span class="token key atrule">uri</span><span class="token punctuation">:</span> mongodb<span class="token punctuation">:</span>//bobo<span class="token punctuation">:</span>123456@180.76.159.126<span class="token punctuation">:</span>27017/articledb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：分别测试用户名密码正确以及不正确的情况。</p><h2 id="_3-3-副本集环境" tabindex="-1"><a class="header-anchor" href="#_3-3-副本集环境" aria-hidden="true">#</a> 3.3 副本集环境</h2><h3 id="_3-3-1-前言" tabindex="-1"><a class="header-anchor" href="#_3-3-1-前言" aria-hidden="true">#</a> 3.3.1 前言</h3><p>对于搭建好的mongodb副本集，为了安全，启动安全认证，使用账号密码登录。</p><p>副本集环境使用之前搭建好的，架构如下：</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230301102123836.png" alt="image-20230301102123836" tabindex="0" loading="lazy"><figcaption>image-20230301102123836</figcaption></figure><p>对副本集执行访问控制需要配置两个方面:</p><p>1）副本集和共享集群的各个节点成员之间使用内部身份验证，可以使用密钥文件或x.509证书。密钥文 件比较简单，本文使用密钥文件，官方推荐如果是测试环境可以使用密钥文件，但是正式环境，官方推 荐x.509证书。原理就是，集群中每一个实例彼此连接的时候都检验彼此使用的证书的内容是否相同。 只有证书相同的实例彼此才可以访问</p><p>2）使用客户端连接到mongodb集群时，开启访问授权。对于集群外部的访问。如通过可视化客户端， 或者通过代码连接的时候，需要开启授权。</p><p>在keyfile身份验证中，副本集中的每个mongod实例都使用keyfile的内容作为共享密码，只有具有正确密钥文件的mongod或者mongos实例可以连接到副本集。密钥文件的内容必须在6到1024个字符之间，并且在unix/linux系统中文件所有者必须有对文件至少有读的权限。</p><h3 id="_3-3-2-关闭已开启的副本集服务-可选" tabindex="-1"><a class="header-anchor" href="#_3-3-2-关闭已开启的副本集服务-可选" aria-hidden="true">#</a> 3.3.2 关闭已开启的副本集服务（可选）</h3><p>增加副本集的安全认证和服务鉴权功能，可以在副本集搭建的时候直接添加，也可以在之前搭建好的副本集服务上添加。</p><p>本文使用之前搭建好的副本集服务，因此，先停止之前的集群服务停止服务的方式有两种：快速关闭和标准关闭，下面依次说明：</p><p>（1）快速关闭方法（快速，简单，数据可能会出错）</p><p>目标：通过系统的kill命令直接杀死进程：</p><p>依次杀死仲裁者、副本节点、主节点，直到所有成员都离线。建议主节点最后kill，以避免潜在的回滚。</p><p>杀完要检查一下，避免有的没有杀掉。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#通过进程编号关闭节点</span>
<span class="token function">kill</span> <span class="token parameter variable">-2</span> <span class="token number">54410</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>【补充】</p><p>如果一旦是因为数据损坏，则需要进行如下操作（了解）：</p><p>1）删除lock文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-f</span> /mongodb/replica_sets/myrs_27017/data/db/*.lock <span class="token punctuation">\\</span>
/mongodb/replica_sets/myrs_27018/data/db/*.lock <span class="token punctuation">\\</span>
/mongodb/replica_sets/myrs_27019/data/db/mongod.lock <span class="token punctuation">\\</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）依次修复数据：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/replica_sets/myrs_27017/data/db
/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/replica_sets/myrs_27018/data/db
/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/replica_sets/myrs_27019/data/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）标准的关闭方法（数据不容易出错，但麻烦）：</p><p>目标：通过mongo客户端中的shutdownServer命令来依次关闭各个服务</p><p>关闭副本集中的服务，建议依次关闭仲裁节点、副本节点、主节点。主要的操作步骤参考如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//客户端登录服务，注意，这里通过localhost登录，如果需要远程登录，必须先登录认证才行。
mongo <span class="token parameter variable">--port</span> <span class="token number">27017</span>
//告知副本集说本机要下线
rs.stepDown<span class="token punctuation">(</span><span class="token punctuation">)</span>
//<span class="token comment">#切换到admin库</span>
use admin
//关闭服务
db.shutdownServer<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-3-通过主节点添加一个管理员帐号" tabindex="-1"><a class="header-anchor" href="#_3-3-3-通过主节点添加一个管理员帐号" aria-hidden="true">#</a> 3.3.3 通过主节点添加一个管理员帐号</h3><p>只需要在主节点上添加用户，副本集会自动同步。</p><p>开启认证之前，创建超管用户：myroot，密码：123456</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>myrs:PRIMARY<span class="token operator">&gt;</span> use admin
switched to db admin
myrs:PRIMARY<span class="token operator">&gt;</span> db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user:<span class="token string">&quot;myroot&quot;</span>,pwd:<span class="token string">&quot;123456&quot;</span>,roles:<span class="token punctuation">[</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Successfully added user: <span class="token punctuation">{</span> <span class="token string">&quot;user&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myroot&quot;</span>, <span class="token string">&quot;roles&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;root&quot;</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>详细操作详见单实例环境的<code>添加用户和权限</code>的相关操作。</p><p>提示：</p><p>该步骤也可以在开启认证之后，但需要通过localhost登录才允许添加用户，用户数据也会自动同步到副本集。</p><p>后续再创建其他用户，都可以使用该超管用户创建。</p><h3 id="_3-3-4-创建副本集认证的key文件" tabindex="-1"><a class="header-anchor" href="#_3-3-4-创建副本集认证的key文件" aria-hidden="true">#</a> 3.3.4 创建副本集认证的key文件</h3><p>第一步：生成一个key文件到当前文件夹中。</p><p>可以使用任何方法生成密钥文件。例如，以下操作使用openssl生成密码文件，然后使用chmod来更改文件权限，仅为文件所有者提供读取权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost ~<span class="token punctuation">]</span><span class="token comment"># openssl rand -base64 90 -out ./mongo.keyfile</span>
<span class="token punctuation">[</span>root@bobohost ~<span class="token punctuation">]</span><span class="token comment"># chmod 400 ./mongo.keyfile</span>
<span class="token punctuation">[</span>root@bobohost ~<span class="token punctuation">]</span><span class="token comment"># ll mongo.keyfile</span>
-r--------. <span class="token number">1</span> root root <span class="token number">122</span> <span class="token number">8</span>月 <span class="token number">14</span> <span class="token number">14</span>:23 mongo.keyfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><p>所有副本集节点都必须要用同一份keyfile，一般是在一台机器上生成，然后拷贝到其他机器上，且必须有读的权限，否则将来会报错：<code>permissions on /mongodb/replica_sets/myrs_27017/mongo.keyfile are too open</code></p><p>一定要保证密钥文件一致，文件位置随便。但是为了方便查找，建议每台机器都放到一个固定的位置，都放到和配置文件一起的目录中。这里将该文件分别拷贝到多个目录中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost ~<span class="token punctuation">]</span><span class="token comment"># cp mongo.keyfile /mongodb/replica_sets/myrs_27017</span>
<span class="token punctuation">[</span>root@bobohost ~<span class="token punctuation">]</span><span class="token comment"># cp mongo.keyfile /mongodb/replica_sets/myrs_27018</span>
<span class="token punctuation">[</span>root@bobohost ~<span class="token punctuation">]</span><span class="token comment"># cp mongo.keyfile /mongodb/replica_sets/myrs_27019</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-5-修改配置文件指定keyfile" tabindex="-1"><a class="header-anchor" href="#_3-3-5-修改配置文件指定keyfile" aria-hidden="true">#</a> 3.3.5 修改配置文件指定keyfile</h3><p>分别编辑几个服务的mongod.conf文件，添加相关内容：</p><p>/mongodb/replica_sets/myrs_27017/mongod.conf</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>security:
	<span class="token comment">#KeyFile鉴权文件</span>
	keyFile: /mongodb/replica_sets/myrs_27017/mongo.keyfile
	<span class="token comment">#开启认证方式运行</span>
	authorization: enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/mongodb/replica_sets/myrs_27018/mongod.conf</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">security</span><span class="token punctuation">:</span>
	<span class="token comment">#KeyFile鉴权文件</span>
	<span class="token key atrule">keyFile</span><span class="token punctuation">:</span> /mongodb/replica_sets/myrs_27018/mongo.keyfile
	<span class="token comment">#开启认证方式运行</span>
	<span class="token key atrule">authorization</span><span class="token punctuation">:</span> enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/mongodb/replica_sets/myrs_27019/mongod.conf</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">security</span><span class="token punctuation">:</span>
	<span class="token comment">#KeyFile鉴权文件</span>
	<span class="token key atrule">keyFile</span><span class="token punctuation">:</span> /mongodb/replica_sets/myrs_27019/mongo.keyfile
	<span class="token comment">#开启认证方式运行</span>
	<span class="token key atrule">authorization</span><span class="token punctuation">:</span> enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-6-重新启动副本集" tabindex="-1"><a class="header-anchor" href="#_3-3-6-重新启动副本集" aria-hidden="true">#</a> 3.3.6 重新启动副本集</h3><p>如果副本集是开启状态，则先分别关闭关闭复本集中的每个mongod，从次节点开始。直到副本集的所有成员都离线，包括任何仲裁者。主节点必须是最后一个成员关闭以避免潜在的回滚。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#通过进程编号关闭三个节点</span>
<span class="token function">kill</span> <span class="token parameter variable">-2</span> <span class="token number">54410</span> <span class="token number">54361</span> <span class="token number">54257</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>分别启动副本集节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span> /mongodb/replica_sets/myrs_27017/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span> /mongodb/replica_sets/myrs_27018/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span> /mongodb/replica_sets/myrs_27019/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看进程情况：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost replica_sets<span class="token punctuation">]</span><span class="token comment"># ps -ef |grep mongod</span>
root <span class="token number">62425</span> <span class="token number">1</span> <span class="token number">5</span> <span class="token number">14</span>:43 ? 00:00:01 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/replica_sets/myrs_27017/mongod.conf
root <span class="token number">62495</span> <span class="token number">1</span> <span class="token number">7</span> <span class="token number">14</span>:43 ? 00:00:01 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/replica_sets/myrs_27018/mongod.conf
root <span class="token number">62567</span> <span class="token number">1</span> <span class="token number">11</span> <span class="token number">14</span>:43 ? 00:00:01 /usr/local/mongodb/bin/mongod
<span class="token parameter variable">-f</span> /mongodb/replica_sets/myrs_27019/mongod.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-7-在主节点上添加普通账号" tabindex="-1"><a class="header-anchor" href="#_3-3-7-在主节点上添加普通账号" aria-hidden="true">#</a> 3.3.7 在主节点上添加普通账号</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#先用管理员账号登录</span>
<span class="token comment">#切换到admin库</span>
use admin
<span class="token comment">#管理员账号认证</span>
db.auth<span class="token punctuation">(</span><span class="token string">&quot;myroot&quot;</span>,<span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
<span class="token comment">#切换到要认证的库</span>
use articledb
<span class="token comment">#添加普通用户</span>
db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user: <span class="token string">&quot;bobo&quot;</span>, pwd: <span class="token string">&quot;123456&quot;</span>, roles: <span class="token punctuation">[</span><span class="token string">&quot;readWrite&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重新连接，使用普通用户bobo重新登录，查看数据。</p><p>注意：也要使用rs.status()命令查看副本集是否健康。</p><h3 id="_3-3-8-springdatamongodb连接副本集" tabindex="-1"><a class="header-anchor" href="#_3-3-8-springdatamongodb连接副本集" aria-hidden="true">#</a> 3.3.8 SpringDataMongoDB连接副本集</h3><p>使用用户名和密码连接到 MongoDB 服务器，你必须使用<code>&#39;username:password@hostname/dbname&#39;</code> 格式，<code>&#39;username&#39;</code>为用户名，<code>&#39;password&#39;</code> 为密码。</p><p>目标：使用用户bobo使用密码 123456 连接到MongoDB 服务上。</p><p>application.yml：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
	<span class="token comment">#数据源配置</span>
	<span class="token key atrule">data</span><span class="token punctuation">:</span>
		<span class="token key atrule">mongodb</span><span class="token punctuation">:</span>
		<span class="token comment">#副本集有认证的情况下，字符串连接</span>
		<span class="token key atrule">uri</span><span class="token punctuation">:</span> mongodb<span class="token punctuation">:</span>//bobo<span class="token punctuation">:</span>123456@180.76.159.126<span class="token punctuation">:</span><span class="token number">27017</span><span class="token punctuation">,</span>180.76.159.126<span class="token punctuation">:</span><span class="token number">27018</span><span class="token punctuation">,</span>180.76.159.126<span class="token punctuation">:</span><span class="token number">2</span>
7019/articledb<span class="token punctuation">?</span>connect=replicaSet<span class="token important">&amp;slaveOk=true&amp;replicaSet=myrs</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-4-分片集群环境-扩展" tabindex="-1"><a class="header-anchor" href="#_3-4-分片集群环境-扩展" aria-hidden="true">#</a> 3.4 分片集群环境(扩展)</h2><h3 id="_3-3-1-关闭已开启的集群服务-可选" tabindex="-1"><a class="header-anchor" href="#_3-3-1-关闭已开启的集群服务-可选" aria-hidden="true">#</a> 3.3.1 关闭已开启的集群服务（可选）</h3><p>分片集群环境下的安全认证和副本集环境下基本上一样。</p><p>但分片集群的服务器环境和架构较为复杂，建议在搭建分片集群的时候，直接加入安全认证和服务器间的鉴权，如果之前有数据，可先将之前的数据备份出来，再还原回去。</p><p>本文使用之前搭建好的集群服务，因此，先停止之前的集群服务停止服务的方式有两种：快速关闭和标准关闭，下面依次说明：</p><p>（1）快速关闭方法（快速，简单，数据可能会出错）</p><p>目标：通过系统的kill命令直接杀死进程：</p><p>依次杀死mongos路由、配置副本集服务，分片副本集服务，从次节点开始。直到所有成员都离线。副本集杀的时候，建议先杀仲裁者，再杀副本节点，最后是主节点，以避免潜在的回滚。杀完要检查一下，避免有的没有杀掉。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#通过进程编号关闭节点</span>
<span class="token function">kill</span> <span class="token parameter variable">-2</span> <span class="token number">54410</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>【补充】</p><p>如果一旦是因为数据损坏，则需要进行如下操作（了解）：</p><p>1）删除lock文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rm</span> <span class="token parameter variable">-f</span> /mongodb/sharded_cluster/myshardrs01_27018/data/db/*.lock <span class="token punctuation">\\</span>
/mongodb/sharded_cluster/myshardrs01_27118/data/db/*.lock <span class="token punctuation">\\</span>
/mongodb/sharded_cluster/myshardrs01_27218/data/db/mongod.lock <span class="token punctuation">\\</span>
/mongodb/sharded_cluster/myshardrs02_27318/data/db/mongod.lock <span class="token punctuation">\\</span>
/mongodb/sharded_cluster/myshardrs02_27418/data/db/mongod.lock <span class="token punctuation">\\</span>
/mongodb/sharded_cluster/myshardrs02_27518/data/db/mongod.lock <span class="token punctuation">\\</span>
/mongodb/sharded_cluster/myconfigrs_27019/data/db/mongod.lock <span class="token punctuation">\\</span>
/mongodb/sharded_cluster/myconfigrs_27119/data/db/mongod.lock <span class="token punctuation">\\</span>
/mongodb/sharded_cluster/myconfigrs_27219/data/db/mongod.lock
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>2）依次修复数据：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/sharded_cluster/myshardrs01_27018/data/db
/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/sharded_cluster/myshardrs01_27118/data/db
/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/sharded_cluster/myshardrs01_27218/data/db
/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/sharded_cluster/myshardrs02_27318/data/db
/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/sharded_cluster/myshardrs02_27418/data/db
/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/sharded_cluster/myshardrs02_27518/data/db
/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/sharded_cluster/myconfigrs_27019/data/db
/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/sharded_cluster/myconfigrs_27119/data/db
/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/sharded_cluster/myconfigrs_27219/data/db
/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/sharded_cluster/mymongos_27017/data/db
/usr/local/mongodb/bin/mongod <span class="token parameter variable">--repair</span> --
<span class="token assign-left variable">dbpath</span><span class="token operator">=</span>/mongodb/sharded_cluster/mymongos_27117/data/db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>（2）标准的关闭方法（数据不容易出错，但麻烦）：</p><p>目标：通过mongo客户端中的shutdownServer命令来依次关闭各个服务</p><p>关闭分片服务器副本集中的服务，建议依次关闭仲裁节点、副本节点、主节点。主要的操作步骤参考如 下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//客户端登录服务，注意，这里通过localhost登录，如果需要远程登录，必须先登录认证才行。
mongo <span class="token parameter variable">--port</span> <span class="token number">27018</span>
//告知副本集说本机要下线
rs.stepDown<span class="token punctuation">(</span><span class="token punctuation">)</span>
//<span class="token comment">#切换到admin库</span>
use admin
//关闭服务
db.shutdownServer<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关闭配置服务器副本集的服务，建议依次关闭副本节点、主节点。主要的操作步骤参考如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//客户端登录服务，注意，这里通过localhost登录，如果需要远程登录，必须先登录认证才行。
mongo <span class="token parameter variable">--port</span> <span class="token number">27019</span>
//告知副本集说本机要下线
rs.stepDown<span class="token punctuation">(</span><span class="token punctuation">)</span>
//<span class="token comment">#切换到admin库</span>
use admin
//关闭服务
db.shutdownServer<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>关闭路由服务器的服务，建议依次关闭两个路由节点。主要的操作步骤参考如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>//客户端登录服务，注意，这里通过localhost登录，如果需要远程登录，必须先登录认证才行。
mongo <span class="token parameter variable">--port</span> <span class="token number">27017</span>
//告知副本集说本机要下线
rs.stepDown<span class="token punctuation">(</span><span class="token punctuation">)</span>
//<span class="token comment">#切换到admin库</span>
use admin
//关闭服务
db.shutdownServer<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-2-创建副本集认证的key文件" tabindex="-1"><a class="header-anchor" href="#_3-3-2-创建副本集认证的key文件" aria-hidden="true">#</a> 3.3.2 创建副本集认证的key文件</h3><p>第一步：生成一个key文件到当前文件夹中。</p><p>可以使用任何方法生成密钥文件。例如，以下操作使用openssl生成密码文件，然后使用chmod来更改文件权限，仅为文件所有者提供读取权限</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost ~<span class="token punctuation">]</span><span class="token comment"># openssl rand -base64 90 -out ./mongo.keyfile</span>
<span class="token punctuation">[</span>root@bobohost ~<span class="token punctuation">]</span><span class="token comment"># chmod 400 ./mongo.keyfile</span>
<span class="token punctuation">[</span>root@bobohost ~<span class="token punctuation">]</span><span class="token comment"># ll mongo.keyfile</span>
-r--------. <span class="token number">1</span> root root <span class="token number">122</span> <span class="token number">8</span>月 <span class="token number">14</span> <span class="token number">14</span>:23 mongo.keyfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><p>所有副本集节点都必须要用同一份keyfile，一般是在一台机器上生成，然后拷贝到其他机器上，且必须有读的权限，否则将来会报错：<code>permissions on /mongodb/replica_sets/myrs_27017/mongo.keyfile are too open</code></p><p>一定要保证密钥文件一致，文件位置随便。但是为了方便查找，建议每台机器都放到一个固定的位置，都放到和配置文件一起的目录中。</p><p>这里将该文件分别拷贝到多个目录中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&#39;/mongodb/sharded_cluster/myshardrs01_27018/mongo.keyfile
/mongodb/sharded_cluster/myshardrs01_27118/mongo.keyfile
/mongodb/sharded_cluster/myshardrs01_27218/mongo.keyfile
/mongodb/sharded_cluster/myshardrs02_27318/mongo.keyfile
/mongodb/sharded_cluster/myshardrs02_27418/mongo.keyfile
/mongodb/sharded_cluster/myshardrs02_27518/mongo.keyfile
/mongodb/sharded_cluster/myconfigrs_27019/mongo.keyfile
/mongodb/sharded_cluster/myconfigrs_27119/mongo.keyfile
/mongodb/sharded_cluster/myconfigrs_27219/mongo.keyfile
/mongodb/sharded_cluster/mymongos_27017/mongo.keyfile
/mongodb/sharded_cluster/mymongos_27117/mongo.keyfile&#39;</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token parameter variable">-n</span> <span class="token number">1</span> <span class="token function">cp</span> <span class="token parameter variable">-v</span>
/root/mongo.keyfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-3-修改配置文件指定keyfile" tabindex="-1"><a class="header-anchor" href="#_3-3-3-修改配置文件指定keyfile" aria-hidden="true">#</a> 3.3.3 修改配置文件指定keyfile</h3><p>分别编辑几个服务的mongod.conf文件，添加相关内容：</p><p>/mongodb/sharded_cluster/myshardrs01_27018/mongod.conf</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">security</span><span class="token punctuation">:</span>
	<span class="token comment">#KeyFile鉴权文件</span>
	<span class="token key atrule">keyFile</span><span class="token punctuation">:</span> /mongodb/sharded_cluster/myshardrs01_27018/mongo.keyfile
	<span class="token comment">#开启认证方式运行</span>
	<span class="token key atrule">authorization</span><span class="token punctuation">:</span> enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/mongodb/sharded_cluster/myshardrs01_27118/mongod.conf</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">security</span><span class="token punctuation">:</span>
	<span class="token comment">#KeyFile鉴权文件</span>
	<span class="token key atrule">keyFile</span><span class="token punctuation">:</span> /mongodb/sharded_cluster/myshardrs01_27118/mongo.keyfile
	<span class="token comment">#开启认证方式运行</span>
	<span class="token key atrule">authorization</span><span class="token punctuation">:</span> enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/mongodb/sharded_cluster/myshardrs01_27218/mongod.conf</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">security</span><span class="token punctuation">:</span>
	<span class="token comment">#KeyFile鉴权文件</span>
	<span class="token key atrule">keyFile</span><span class="token punctuation">:</span> /mongodb/sharded_cluster/myshardrs01_27218/mongo.keyfile
	<span class="token comment">#开启认证方式运行</span>
	<span class="token key atrule">authorization</span><span class="token punctuation">:</span> enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/mongodb/sharded_cluster/myshardrs02_27318/mongod.conf</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">security</span><span class="token punctuation">:</span>
	<span class="token comment">#KeyFile鉴权文件</span>
	<span class="token key atrule">keyFile</span><span class="token punctuation">:</span> /mongodb/sharded_cluster/myshardrs02_27318/mongo.keyfile
	<span class="token comment">#开启认证方式运行</span>
	<span class="token key atrule">authorization</span><span class="token punctuation">:</span> enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/mongodb/sharded_cluster/myshardrs02_27418/mongod.conf</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">security</span><span class="token punctuation">:</span>
	<span class="token comment">#KeyFile鉴权文件</span>
	<span class="token key atrule">keyFile</span><span class="token punctuation">:</span> /mongodb/sharded_cluster/myshardrs02_27418/mongo.keyfile
	<span class="token comment">#开启认证方式运行</span>
	<span class="token key atrule">authorization</span><span class="token punctuation">:</span> enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/mongodb/sharded_cluster/myshardrs02_27518/mongod.conf</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">security</span><span class="token punctuation">:</span>
	<span class="token comment">#KeyFile鉴权文件</span>
	<span class="token key atrule">keyFile</span><span class="token punctuation">:</span> /mongodb/sharded_cluster/myshardrs02_27518/mongo.keyfile
	<span class="token comment">#开启认证方式运行</span>
	<span class="token key atrule">authorization</span><span class="token punctuation">:</span> enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/mongodb/sharded_cluster/myconfigrs_27019/mongod.conf</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">security</span><span class="token punctuation">:</span>
	<span class="token comment">#KeyFile鉴权文件</span>
	<span class="token key atrule">keyFile</span><span class="token punctuation">:</span> /mongodb/sharded_cluster/myconfigrs_27019/mongo.keyfile
	<span class="token comment">#开启认证方式运行</span>
	<span class="token key atrule">authorization</span><span class="token punctuation">:</span> enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/mongodb/sharded_cluster/myconfigrs_27119/mongod.conf</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">security</span><span class="token punctuation">:</span>
	<span class="token comment">#KeyFile鉴权文件</span>
	<span class="token key atrule">keyFile</span><span class="token punctuation">:</span> /mongodb/sharded_cluster/myconfigrs_27119/mongo.keyfile
	<span class="token comment">#开启认证方式运行</span>
	<span class="token key atrule">authorization</span><span class="token punctuation">:</span> enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/mongodb/sharded_cluster/myconfigrs_27219/mongod.conf</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">security</span><span class="token punctuation">:</span>
	<span class="token comment">#KeyFile鉴权文件</span>
    <span class="token key atrule">keyFile</span><span class="token punctuation">:</span> /mongodb/sharded_cluster/myconfigrs_27219/mongo.keyfile
	<span class="token comment">#开启认证方式运行</span>
	<span class="token key atrule">authorization</span><span class="token punctuation">:</span> enabled
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/mongodb/sharded_cluster/mymongos_27017/mongos.conf</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>security:
	<span class="token comment">#KeyFile鉴权文件</span>
	keyFile: /mongodb/sharded_cluster/mymongos_27017/mongo.keyfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/mongodb/sharded_cluster/mymongos_27117/mongos.conf</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>security:
	<span class="token comment">#KeyFile鉴权文件</span>
	keyFile: /mongodb/sharded_cluster/mymongos_27117/mongo.keyfile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>mongos比mongod少了authorization：enabled的配置。原因是，副本集加分片的安全认证需要配置两方面的，副本集各个节点之间使用内部身份验证，用于内部各个mongo实例的通信，只有相同keyfile 才能相互访问。所以都要开启<code> keyFile: /mongodb/sharded_cluster/mymongos_27117/mongo.keyfile 。</code></p><p>然而对于所有的mongod，才是真正的保存数据的分片。mongos只做路由，不保存数据。所以所有的 mongod开启访问数据的授权authorization:enabled。这样用户只有账号密码正确才能访问到数据。</p><h3 id="_3-3-4-重新启动节点" tabindex="-1"><a class="header-anchor" href="#_3-3-4-重新启动节点" aria-hidden="true">#</a> 3.3.4 重新启动节点</h3><p>必须依次启动配置节点、分片节点、路由节点：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myconfigrs_27019/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myconfigrs_27119/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myconfigrs_27219/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myshardrs01_27018/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myshardrs01_27118/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myshardrs01_27218/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myshardrs02_27318/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myshardrs02_27418/mongod.conf
/usr/local/mongodb/bin/mongod <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/myshardrs02_27518/mongod.conf
/usr/local/mongodb/bin/mongos <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/mymongos_27017/mongos.conf
/usr/local/mongodb/bin/mongos <span class="token parameter variable">-f</span>
/mongodb/sharded_cluster/mymongos_27117/mongos.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：</p><p>这里有个非常特别的情况，就是启动顺序。先启动配置节点，再启动分片节点，最后启动路由节点。</p><p>如果先启动分片节点，会卡住，提示：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>about to fork child process, waiting <span class="token keyword">until</span> server is ready <span class="token keyword">for</span> connections
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这也许是个bug。原因未知。</p><h3 id="_3-3-5-创建帐号和认证" tabindex="-1"><a class="header-anchor" href="#_3-3-5-创建帐号和认证" aria-hidden="true">#</a> 3.3.5 创建帐号和认证</h3><p>客户端mongo，通过localhost登录任意一个mongos路由，</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost db<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongo --port 27017</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>提示：相当于一个后门，只能在admin下添加用户。</p><p>创建一个管理员帐号：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span> use admin
switched to db admin
mongos<span class="token operator">&gt;</span> db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user:<span class="token string">&quot;myroot&quot;</span>,pwd:<span class="token string">&quot;123456&quot;</span>,roles:<span class="token punctuation">[</span><span class="token string">&quot;root&quot;</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Successfully added user: <span class="token punctuation">{</span> <span class="token string">&quot;user&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;myroot&quot;</span>, <span class="token string">&quot;roles&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">[</span> <span class="token string">&quot;root&quot;</span> <span class="token punctuation">]</span> <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：如果在开启认证之前已经创建了管理员账号，这里可以忽略</p><p>创建一个普通权限帐号：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span> use admin
switched to db admin
mongos<span class="token operator">&gt;</span> db.auth<span class="token punctuation">(</span><span class="token string">&quot;myroot&quot;</span>,<span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
<span class="token number">1</span>
mongos<span class="token operator">&gt;</span> use articledb
switched to db articledb
mongos<span class="token operator">&gt;</span> db.createUser<span class="token punctuation">(</span><span class="token punctuation">{</span>user: <span class="token string">&quot;bobo&quot;</span>, pwd: <span class="token string">&quot;123456&quot;</span>, roles: <span class="token punctuation">[</span><span class="token punctuation">{</span> role: <span class="token string">&quot;readWrite&quot;</span>,
db: <span class="token string">&quot;articledb&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
Successfully added user: <span class="token punctuation">{</span>
	<span class="token string">&quot;user&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;bobo&quot;</span>,
	<span class="token string">&quot;roles&quot;</span> <span class="token builtin class-name">:</span> <span class="token punctuation">[</span>
		<span class="token punctuation">{</span>
			<span class="token string">&quot;role&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;readWrite&quot;</span>,
			<span class="token string">&quot;db&quot;</span> <span class="token builtin class-name">:</span> <span class="token string">&quot;articledb&quot;</span>
		<span class="token punctuation">}</span>
	<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
mongos<span class="token operator">&gt;</span> db.auth<span class="token punctuation">(</span><span class="token string">&quot;bobo&quot;</span>,<span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
<span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>提示：</p><p>通过mongos添加的账号信息，只会保存到配置节点的服务中，具体的数据节点不保存账号信息，因此，分片中的账号信息不涉及到同步问题。</p><p>mongo客户端登录mongos路由，用管理员帐号登录可查看分片情况：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>mongos<span class="token operator">&gt;</span> use admin
switched to db admin
mongos<span class="token operator">&gt;</span> db.auth<span class="token punctuation">(</span><span class="token string">&quot;myroot&quot;</span>,<span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
<span class="token number">1</span>
mongos<span class="token operator">&gt;</span> sh.status<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>退出连接，重新连接服务，使用普通权限帐号访问数据：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@bobohost db<span class="token punctuation">]</span><span class="token comment"># /usr/local/mongodb/bin/mongo --host 180.76.159.126 --port</span>
<span class="token number">27017</span>
MongoDB shell version v4.0.10
connecting to: mongodb://180.76.159.126:27017/?gssapiServiceName<span class="token operator">=</span>mongodb
Implicit session: session <span class="token punctuation">{</span> <span class="token string">&quot;id&quot;</span> <span class="token builtin class-name">:</span> UUID<span class="token punctuation">(</span><span class="token string">&quot;6f84fa91-2414-407e-b3ab-c0b7eedde825&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
MongoDB server version: <span class="token number">4.0</span>.10
mongos<span class="token operator">&gt;</span> use articledb
switched to db articledb
mongos<span class="token operator">&gt;</span> db.auth<span class="token punctuation">(</span><span class="token string">&quot;bobo&quot;</span>,<span class="token string">&quot;123456&quot;</span><span class="token punctuation">)</span>
<span class="token number">1</span>
mongos<span class="token operator">&gt;</span> show collections
comment
comment2
mongos<span class="token operator">&gt;</span> db.comment.count<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token number">10001</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-3-6-springdatamongodb连接认证" tabindex="-1"><a class="header-anchor" href="#_3-3-6-springdatamongodb连接认证" aria-hidden="true">#</a> 3.3.6 SpringDataMongoDB连接认证</h3><p>使用用户名和密码连接到 MongoDB 服务器，你必须使用<code>&#39;username:password@hostname/dbname&#39;</code> 格式，<code>&#39;username&#39;</code>为用户名，<code>&#39;password&#39;</code> 为密码。</p><p>目标：使用用户bobo使用密码 123456 连接到MongoDB 服务上。</p><p>application.yml：</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">spring</span><span class="token punctuation">:</span>
	<span class="token comment">#数据源配置</span>
	<span class="token key atrule">data</span><span class="token punctuation">:</span>
	<span class="token key atrule">mongodb</span><span class="token punctuation">:</span>
	<span class="token comment"># 分片集群有认证的情况下，字符串连接</span>
	<span class="token key atrule">uri</span><span class="token punctuation">:</span> mongodb<span class="token punctuation">:</span>//bobo<span class="token punctuation">:</span>123456@180.76.159.126<span class="token punctuation">:</span><span class="token number">27017</span><span class="token punctuation">,</span>180.76.159.126<span class="token punctuation">:</span>27117/articledb
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,517);function Cn(Nn,Rn){const a=o("ExternalLinkIcon");return i(),l("div",null,[u,r,n("p",null,[s("官方文档： "),n("a",d,[s("What is MongoDB? — MongoDB Manual"),t(a)])]),n("p",null,[s("下载中心："),n("a",k,[s("Try MongoDB Tools - Download Free Here | MongoDB"),t(a)])]),m,v,b,g,n("p",null,[s("~~MongoDB 提供了可用于 32 位和 64位系统的预编译二进制包，~~你可以从MongoDB官网下载安装，MongoDB预编译二进制包下载地址："),n("a",q,[s("Download MongoDB Community Server | MongoDB"),t(a)])]),h,y,f,_,A,n("p",null,[s("详情："),n("a",x,[s("Release Notes — MongoDB Manual"),t(a)])]),w,n("p",null,[s("详细配置项内容可以参考官方文档："),n("a",D,[s("Configuration File Options — MongoDB Manual"),t(a)])]),I,n("p",null,[n("a",S,[s("Connect to a Deployment on a Remote Host"),t(a)])]),T,n("ul",null,[n("li",null,[s("A "),n("a",j,[s("connection string"),t(a)]),s(" with the chosen host and port.")]),M]),B,n("p",null,[s("官方文档： "),n("a",C,[s("What is MongoDB Compass? — MongoDB Compass"),t(a)])]),n("p",null,[s("下载地址："),n("a",N,[s("MongoDB Compass Download | MongoDB"),t(a)])]),R,n("table",null,[O,n("tbody",null,[P,n("tr",null,[L,z,n("td",null,[s("Optional. A document expressing the "),n("a",E,[s("write concern"),t(a)]),n("a",F,[s("."),t(a)]),s(" Omit to use the default write concern. See "),n("a",$,[s("Write Concern"),t(a)]),s(".Do not explicitly set the write concern for the operation if run in a transaction. To use write concern with transactions, see "),n("a",U,[s("Transactions and Write Concern"),t(a)]),s(".")])]),Y])]),W,n("table",null,[H,n("tbody",null,[V,n("tr",null,[Z,K,n("td",null,[s("Optional. A document expressing the "),n("a",J,[s("write concern"),t(a)]),n("a",Q,[s("."),t(a)]),s(" Omit to use the default write concern.Do not explicitly set the write concern for the operation if run in a transaction. To use write concern with transactions, see "),n("a",G,[s("Transactions and Write Concern"),t(a)]),n("a",X,[s("."),t(a)])])]),nn])]),sn,n("p",null,[s("官网文档："),n("a",an,[s("Indexes — MongoDB Manual"),t(a)]),s(" 了解：MongoDB索引使用B树数据结构（确切的说是B-Tree，MySQL是B+Tree）")]),tn,n("p",null,[s("更多："),n("a",en,[s("Query Optimization — MongoDB Manual"),t(a)])]),pn,n("p",null,[s("文章示例参考："),n("a",on,[s("早晨空腹喝水，是对还是错？-今日头条 (toutiao.com)"),t(a)]),s(" 需要实现以下功能：")]),ln,n("p",null,[s("官方驱动说明和下载："),n("a",cn,[s("MongoDB Java Drivers"),t(a)]),s(" 官方驱动示例文档： "),n("a",un,[s("Quick Start (mongodb.github.io)"),t(a)])]),rn,dn,n("p",null,[s("官网主页： "),n("a",kn,[s("Spring Data MongoDB"),t(a)])]),n("p",null,[s("官方文档："),n("a",mn,[s("Spring Data MongoDB - Reference Documentation"),t(a)])]),vn,n("table",null,[bn,n("tbody",null,[n("tr",null,[gn,qn,n("td",null,[s("Optional. A document that specifies "),n("a",hn,[s("confi"),t(a)]),n("a",yn,[s("g"),t(a)]),n("a",fn,[s("uration"),t(a)]),s(" for the new replica set. If a configuration is not specified, MongoDB uses a default replica set configuration.")])])])]),_n,n("table",null,[An,n("tbody",null,[n("tr",null,[xn,n("td",null,[s("Start this instance as a "),n("a",wn,[s("confi"),t(a)]),n("a",Dn,[s("g"),t(a)]),n("a",In,[s(" server"),t(a)]),s(". The instance starts on port "),Sn,s(" by default.")])]),n("tr",null,[Tn,n("td",null,[s("Start this instance as a "),n("a",jn,[s("shard"),t(a)]),n("a",Mn,[s("."),t(a)]),s(" The instance starts on port 27018 by default.")])])])]),Bn])}const Ln=p(c,[["render",Cn],["__file","mongodb.html.vue"]]);export{Ln as default};
