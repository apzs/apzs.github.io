const l=JSON.parse('{"key":"v-484df59c","path":"/back-base/1.Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/","title":"初始java","lang":"zh-CN","frontmatter":{"description":"初始java Java : 一个帝国的诞生 1、C语言帝国的统治 现在是公元1995年， C语言帝国已经统治了我们20多年， 实在是太久了。 1972年， 随着C语言的诞生和Unix的问世， 帝国迅速建立统治， 从北美到欧洲， 从欧洲到亚洲， 无数程序员臣服在他的脚下。 帝国给我们提供了极好的福利：贴近硬件， 运行极快， 效率极高。 使用这些福利， 程序员们用C 开发了很多系统级软件，操作系统， 编译器， 数据库，网络系统..... 但是帝国也给我们安上了两个沉重的枷锁： 指针和内存管理","head":[["meta",{"property":"og:url","content":"https://apzs.github.io/back-base/1.Java%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"}],["meta",{"property":"og:site_name","content":"apzs"}],["meta",{"property":"og:title","content":"初始java"}],["meta",{"property":"og:description","content":"初始java Java : 一个帝国的诞生 1、C语言帝国的统治 现在是公元1995年， C语言帝国已经统治了我们20多年， 实在是太久了。 1972年， 随着C语言的诞生和Unix的问世， 帝国迅速建立统治， 从北美到欧洲， 从欧洲到亚洲， 无数程序员臣服在他的脚下。 帝国给我们提供了极好的福利：贴近硬件， 运行极快， 效率极高。 使用这些福利， 程序员们用C 开发了很多系统级软件，操作系统， 编译器， 数据库，网络系统..... 但是帝国也给我们安上了两个沉重的枷锁： 指针和内存管理"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-10T05:52:06.000Z"}],["meta",{"property":"article:author","content":"apzs"}],["meta",{"property":"article:modified_time","content":"2024-03-10T05:52:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"初始java\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-10T05:52:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"apzs\\",\\"url\\":\\"https://apzs.eu.org\\"}]}"]]},"headers":[{"level":2,"title":"Java : 一个帝国的诞生","slug":"java-一个帝国的诞生","link":"#java-一个帝国的诞生","children":[{"level":3,"title":"1、C语言帝国的统治","slug":"_1、c语言帝国的统治","link":"#_1、c语言帝国的统治","children":[]},{"level":3,"title":"2、反抗","slug":"_2、反抗","link":"#_2、反抗","children":[]},{"level":3,"title":"3、一鸣惊人","slug":"_3、一鸣惊人","link":"#_3、一鸣惊人","children":[]},{"level":3,"title":"4、开拓疆土","slug":"_4、开拓疆土","link":"#_4、开拓疆土","children":[]},{"level":3,"title":"5、帝国的诞生","slug":"_5、帝国的诞生","link":"#_5、帝国的诞生","children":[]}]},{"level":2,"title":"Java的特性和优势","slug":"java的特性和优势","link":"#java的特性和优势","children":[{"level":3,"title":"八大特性","slug":"八大特性","link":"#八大特性","children":[]},{"level":3,"title":"核心优势","slug":"核心优势","link":"#核心优势","children":[]}]},{"level":2,"title":"Java三大版本","slug":"java三大版本","link":"#java三大版本","children":[]},{"level":2,"title":"JDK 和 JRE","slug":"jdk-和-jre","link":"#jdk-和-jre","children":[]},{"level":2,"title":"初识JVM","slug":"初识jvm","link":"#初识jvm","children":[]},{"level":2,"title":"JAVA程序运行机制","slug":"java程序运行机制","link":"#java程序运行机制","children":[{"level":3,"title":"编译型语言","slug":"编译型语言","link":"#编译型语言","children":[]},{"level":3,"title":"解释型语言","slug":"解释型语言","link":"#解释型语言","children":[]},{"level":3,"title":"二者的区别","slug":"二者的区别","link":"#二者的区别","children":[]},{"level":3,"title":"Java的运行机制","slug":"java的运行机制","link":"#java的运行机制","children":[]}]},{"level":2,"title":"Hello World","slug":"hello-world","link":"#hello-world","children":[]},{"level":2,"title":"注释","slug":"注释","link":"#注释","children":[]},{"level":2,"title":"标识符","slug":"标识符","link":"#标识符","children":[]},{"level":2,"title":"数据类型","slug":"数据类型","link":"#数据类型","children":[{"level":3,"title":"1、强弱类型语言","slug":"_1、强弱类型语言","link":"#_1、强弱类型语言","children":[]},{"level":3,"title":"2、数据类型","slug":"_2、数据类型","link":"#_2、数据类型","children":[]},{"level":3,"title":"3、整型拓展","slug":"_3、整型拓展","link":"#_3、整型拓展","children":[]},{"level":3,"title":"4、浮点型拓展","slug":"_4、浮点型拓展","link":"#_4、浮点型拓展","children":[]},{"level":3,"title":"5、字符型拓展","slug":"_5、字符型拓展","link":"#_5、字符型拓展","children":[]},{"level":3,"title":"6、布尔型拓展","slug":"_6、布尔型拓展","link":"#_6、布尔型拓展","children":[]}]},{"level":2,"title":"类型转换","slug":"类型转换","link":"#类型转换","children":[{"level":3,"title":"1、自动类型转换","slug":"_1、自动类型转换","link":"#_1、自动类型转换","children":[]},{"level":3,"title":"2、强制类型转换","slug":"_2、强制类型转换","link":"#_2、强制类型转换","children":[]},{"level":3,"title":"3、常见错误和问题","slug":"_3、常见错误和问题","link":"#_3、常见错误和问题","children":[]},{"level":3,"title":"4、JDK7扩展","slug":"_4、jdk7扩展","link":"#_4、jdk7扩展","children":[]}]},{"level":2,"title":"变量，常量","slug":"变量-常量","link":"#变量-常量","children":[{"level":3,"title":"1、变量（variable）","slug":"_1、变量-variable","link":"#_1、变量-variable","children":[]},{"level":3,"title":"2、变量作用域","slug":"_2、变量作用域","link":"#_2、变量作用域","children":[]},{"level":3,"title":"3、常量","slug":"_3、常量","link":"#_3、常量","children":[]},{"level":3,"title":"4、变量的命名规范","slug":"_4、变量的命名规范","link":"#_4、变量的命名规范","children":[]}]},{"level":2,"title":"运算符","slug":"运算符","link":"#运算符","children":[{"level":3,"title":"1、二元运算符","slug":"_1、二元运算符","link":"#_1、二元运算符","children":[]},{"level":3,"title":"2、取模运算","slug":"_2、取模运算","link":"#_2、取模运算","children":[]},{"level":3,"title":"3、一元运算符","slug":"_3、一元运算符","link":"#_3、一元运算符","children":[]},{"level":3,"title":"4、逻辑运算符","slug":"_4、逻辑运算符","link":"#_4、逻辑运算符","children":[]},{"level":3,"title":"5、位运算符","slug":"_5、位运算符","link":"#_5、位运算符","children":[]},{"level":3,"title":"6、扩展运算符","slug":"_6、扩展运算符","link":"#_6、扩展运算符","children":[]},{"level":3,"title":"7、字符串连接符","slug":"_7、字符串连接符","link":"#_7、字符串连接符","children":[]},{"level":3,"title":"8、三目条件运算符","slug":"_8、三目条件运算符","link":"#_8、三目条件运算符","children":[]},{"level":3,"title":"9、运算符优先级","slug":"_9、运算符优先级","link":"#_9、运算符优先级","children":[]}]},{"level":2,"title":"1、问题发现","slug":"_1、问题发现","link":"#_1、问题发现","children":[]},{"level":2,"title":"2、包的作用","slug":"_2、包的作用","link":"#_2、包的作用","children":[]},{"level":2,"title":"3、创建包","slug":"_3、创建包","link":"#_3、创建包","children":[]},{"level":2,"title":"4、import 关键字","slug":"_4、import-关键字","link":"#_4、import-关键字","children":[]},{"level":2,"title":"JavaDoc","slug":"javadoc","link":"#javadoc","children":[{"level":3,"title":"1、简介","slug":"_1、简介","link":"#_1、简介","children":[]},{"level":3,"title":"2、命令行生成Doc","slug":"_2、命令行生成doc","link":"#_2、命令行生成doc","children":[]}]},{"level":2,"title":"用户交互Scanner","slug":"用户交互scanner","link":"#用户交互scanner","children":[{"level":3,"title":"1、Scanner对象","slug":"_1、scanner对象","link":"#_1、scanner对象","children":[]},{"level":3,"title":"2、next & nextLine","slug":"_2、next-nextline","link":"#_2、next-nextline","children":[]},{"level":3,"title":"3、其他方法","slug":"_3、其他方法","link":"#_3、其他方法","children":[]}]},{"level":2,"title":"顺序结构","slug":"顺序结构","link":"#顺序结构","children":[]},{"level":2,"title":"选择结构","slug":"选择结构","link":"#选择结构","children":[{"level":3,"title":"1、if单选择结构","slug":"_1、if单选择结构","link":"#_1、if单选择结构","children":[]},{"level":3,"title":"2、if双选择结构","slug":"_2、if双选择结构","link":"#_2、if双选择结构","children":[]},{"level":3,"title":"3、if多选择结构","slug":"_3、if多选择结构","link":"#_3、if多选择结构","children":[]},{"level":3,"title":"4、嵌套的if结构","slug":"_4、嵌套的if结构","link":"#_4、嵌套的if结构","children":[]},{"level":3,"title":"5、switch多选择结构","slug":"_5、switch多选择结构","link":"#_5、switch多选择结构","children":[]}]},{"level":2,"title":"循环结构","slug":"循环结构","link":"#循环结构","children":[{"level":3,"title":"1、while 循环","slug":"_1、while-循环","link":"#_1、while-循环","children":[]},{"level":3,"title":"2、do…while 循环","slug":"_2、do-while-循环","link":"#_2、do-while-循环","children":[]},{"level":3,"title":"3、For循环","slug":"_3、for循环","link":"#_3、for循环","children":[]},{"level":3,"title":"4、练习","slug":"_4、练习","link":"#_4、练习","children":[]},{"level":3,"title":"5、增强for循环","slug":"_5、增强for循环","link":"#_5、增强for循环","children":[]}]},{"level":2,"title":"break & continue","slug":"break-continue","link":"#break-continue","children":[{"level":3,"title":"1、break 关键字","slug":"_1、break-关键字","link":"#_1、break-关键字","children":[]},{"level":3,"title":"2、continue 关键字","slug":"_2、continue-关键字","link":"#_2、continue-关键字","children":[]},{"level":3,"title":"3、两者区别","slug":"_3、两者区别","link":"#_3、两者区别","children":[]},{"level":3,"title":"4、带标签的continue","slug":"_4、带标签的continue","link":"#_4、带标签的continue","children":[]}]},{"level":2,"title":"1、何谓方法？","slug":"_1、何谓方法","link":"#_1、何谓方法","children":[]},{"level":2,"title":"2、方法的定义","slug":"_2、方法的定义","link":"#_2、方法的定义","children":[]},{"level":2,"title":"3、方法调用","slug":"_3、方法调用","link":"#_3、方法调用","children":[]},{"level":2,"title":"4、方法的重载","slug":"_4、方法的重载","link":"#_4、方法的重载","children":[]},{"level":2,"title":"5、拓展命令行传参","slug":"_5、拓展命令行传参","link":"#_5、拓展命令行传参","children":[]},{"level":2,"title":"6、可变参数","slug":"_6、可变参数","link":"#_6、可变参数","children":[]},{"level":2,"title":"7、递归","slug":"_7、递归","link":"#_7、递归","children":[]},{"level":2,"title":"数组概述","slug":"数组概述","link":"#数组概述","children":[]},{"level":2,"title":"数组声明创建","slug":"数组声明创建","link":"#数组声明创建","children":[{"level":3,"title":"1、声明数组","slug":"_1、声明数组","link":"#_1、声明数组","children":[]},{"level":3,"title":"2、创建数组","slug":"_2、创建数组","link":"#_2、创建数组","children":[]},{"level":3,"title":"3、内存分析","slug":"_3、内存分析","link":"#_3、内存分析","children":[]},{"level":3,"title":"4、三种初始化","slug":"_4、三种初始化","link":"#_4、三种初始化","children":[]},{"level":3,"title":"5、数组边界","slug":"_5、数组边界","link":"#_5、数组边界","children":[]},{"level":3,"title":"6、小结","slug":"_6、小结","link":"#_6、小结","children":[]}]},{"level":2,"title":"数组使用","slug":"数组使用","link":"#数组使用","children":[{"level":3,"title":"1、For-Each 循环","slug":"_1、for-each-循环","link":"#_1、for-each-循环","children":[]},{"level":3,"title":"2、数组作方法入参","slug":"_2、数组作方法入参","link":"#_2、数组作方法入参","children":[]},{"level":3,"title":"3、数组作返回值","slug":"_3、数组作返回值","link":"#_3、数组作返回值","children":[]}]},{"level":2,"title":"多维数组","slug":"多维数组","link":"#多维数组","children":[]},{"level":2,"title":"Arrays 类","slug":"arrays-类","link":"#arrays-类","children":[{"level":3,"title":"1、打印数组","slug":"_1、打印数组","link":"#_1、打印数组","children":[]},{"level":3,"title":"2、数组排序","slug":"_2、数组排序","link":"#_2、数组排序","children":[]},{"level":3,"title":"3、二分法查找","slug":"_3、二分法查找","link":"#_3、二分法查找","children":[]},{"level":3,"title":"4、元素填充","slug":"_4、元素填充","link":"#_4、元素填充","children":[]},{"level":3,"title":"5、数组转换为List集合","slug":"_5、数组转换为list集合","link":"#_5、数组转换为list集合","children":[]}]},{"level":2,"title":"常见排序算法","slug":"常见排序算法","link":"#常见排序算法","children":[{"level":3,"title":"1、冒泡排序","slug":"_1、冒泡排序","link":"#_1、冒泡排序","children":[]},{"level":3,"title":"2、选择排序","slug":"_2、选择排序","link":"#_2、选择排序","children":[]},{"level":3,"title":"3、直接插入排序","slug":"_3、直接插入排序","link":"#_3、直接插入排序","children":[]},{"level":3,"title":"4、希尔排序","slug":"_4、希尔排序","link":"#_4、希尔排序","children":[]},{"level":3,"title":"5、快速排序","slug":"_5、快速排序","link":"#_5、快速排序","children":[]},{"level":3,"title":"6、归并排序","slug":"_6、归并排序","link":"#_6、归并排序","children":[]},{"level":3,"title":"7、基数排序","slug":"_7、基数排序","link":"#_7、基数排序","children":[]},{"level":3,"title":"8、堆排序","slug":"_8、堆排序","link":"#_8、堆排序","children":[]}]},{"level":2,"title":"稀疏数组","slug":"稀疏数组","link":"#稀疏数组","children":[]},{"level":2,"title":"异常概念","slug":"异常概念","link":"#异常概念","children":[]},{"level":2,"title":"异常体系结构","slug":"异常体系结构","link":"#异常体系结构","children":[]},{"level":2,"title":"异常之间的区别与联系","slug":"异常之间的区别与联系","link":"#异常之间的区别与联系","children":[{"level":3,"title":"1、Error","slug":"_1、error","link":"#_1、error","children":[]},{"level":3,"title":"2、Exception","slug":"_2、exception","link":"#_2、exception","children":[]},{"level":3,"title":"3、检查异常和不受检查异常","slug":"_3、检查异常和不受检查异常","link":"#_3、检查异常和不受检查异常","children":[]}]},{"level":2,"title":"Java异常处理机制","slug":"java异常处理机制","link":"#java异常处理机制","children":[{"level":3,"title":"1、抛出异常","slug":"_1、抛出异常","link":"#_1、抛出异常","children":[]},{"level":3,"title":"2、捕获异常","slug":"_2、捕获异常","link":"#_2、捕获异常","children":[]},{"level":3,"title":"3、异常处理五个关键字","slug":"_3、异常处理五个关键字","link":"#_3、异常处理五个关键字","children":[]}]},{"level":2,"title":"处理异常","slug":"处理异常","link":"#处理异常","children":[{"level":3,"title":"1、try -catch","slug":"_1、try-catch","link":"#_1、try-catch","children":[]},{"level":3,"title":"2、thorw","slug":"_2、thorw","link":"#_2、thorw","children":[]},{"level":3,"title":"3、throws","slug":"_3、throws","link":"#_3、throws","children":[]},{"level":3,"title":"4、finally","slug":"_4、finally","link":"#_4、finally","children":[]},{"level":3,"title":"执行顺序","slug":"执行顺序","link":"#执行顺序","children":[]}]},{"level":2,"title":"自定义异常","slug":"自定义异常","link":"#自定义异常","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"面向过程&面向对象","slug":"面向过程-面向对象","link":"#面向过程-面向对象","children":[]},{"level":2,"title":"OOP详解","slug":"oop详解","link":"#oop详解","children":[{"level":3,"title":"1、什么是面向对象","slug":"_1、什么是面向对象","link":"#_1、什么是面向对象","children":[]},{"level":3,"title":"2、类与对象的关系","slug":"_2、类与对象的关系","link":"#_2、类与对象的关系","children":[]},{"level":3,"title":"3、对象和引用的关系","slug":"_3、对象和引用的关系","link":"#_3、对象和引用的关系","children":[]}]},{"level":2,"title":"方法回顾及加深","slug":"方法回顾及加深","link":"#方法回顾及加深","children":[{"level":3,"title":"1、方法的定义","slug":"_1、方法的定义","link":"#_1、方法的定义","children":[]},{"level":3,"title":"2、方法调用","slug":"_2、方法调用","link":"#_2、方法调用","children":[]},{"level":3,"title":"3、调用方法时的传参","slug":"_3、调用方法时的传参","link":"#_3、调用方法时的传参","children":[]},{"level":3,"title":"4、this关键字","slug":"_4、this关键字","link":"#_4、this关键字","children":[]}]},{"level":2,"title":"创建与初始化对象","slug":"创建与初始化对象","link":"#创建与初始化对象","children":[]},{"level":2,"title":"构造器","slug":"构造器","link":"#构造器","children":[]},{"level":2,"title":"内存分析","slug":"内存分析","link":"#内存分析","children":[]},{"level":2,"title":"封装","slug":"封装","link":"#封装","children":[{"level":3,"title":"1、封装的步骤","slug":"_1、封装的步骤","link":"#_1、封装的步骤","children":[]},{"level":3,"title":"2、作用和意义","slug":"_2、作用和意义","link":"#_2、作用和意义","children":[]},{"level":3,"title":"3、方法重载","slug":"_3、方法重载","link":"#_3、方法重载","children":[]}]},{"level":2,"title":"继承","slug":"继承","link":"#继承","children":[{"level":3,"title":"1、继承","slug":"_1、继承","link":"#_1、继承","children":[]},{"level":3,"title":"2、Object类","slug":"_2、object类","link":"#_2、object类","children":[]},{"level":3,"title":"3、Super关键字","slug":"_3、super关键字","link":"#_3、super关键字","children":[]},{"level":3,"title":"4、方法重写","slug":"_4、方法重写","link":"#_4、方法重写","children":[]}]},{"level":2,"title":"多态","slug":"多态","link":"#多态","children":[{"level":3,"title":"1、认识多态","slug":"_1、认识多态","link":"#_1、认识多态","children":[]},{"level":3,"title":"2、重写、重载和多态的关系","slug":"_2、重写、重载和多态的关系","link":"#_2、重写、重载和多态的关系","children":[]},{"level":3,"title":"3、多态的注意事项","slug":"_3、多态的注意事项","link":"#_3、多态的注意事项","children":[]},{"level":3,"title":"4、多态存在的条件","slug":"_4、多态存在的条件","link":"#_4、多态存在的条件","children":[]},{"level":3,"title":"5、方法绑定(method binding)","slug":"_5、方法绑定-method-binding","link":"#_5、方法绑定-method-binding","children":[]},{"level":3,"title":"6、instanceof和类型转换","slug":"_6、instanceof和类型转换","link":"#_6、instanceof和类型转换","children":[]}]},{"level":2,"title":"修饰符","slug":"修饰符","link":"#修饰符","children":[{"level":3,"title":"1、static修饰符","slug":"_1、static修饰符","link":"#_1、static修饰符","children":[]},{"level":3,"title":"2、final修饰符","slug":"_2、final修饰符","link":"#_2、final修饰符","children":[]},{"level":3,"title":"3、abstract修饰符","slug":"_3、abstract修饰符","link":"#_3、abstract修饰符","children":[]},{"level":3,"title":"3、特点及作用","slug":"_3、特点及作用","link":"#_3、特点及作用","children":[]}]},{"level":2,"title":"接口","slug":"接口","link":"#接口","children":[{"level":3,"title":"1、接口的本质","slug":"_1、接口的本质","link":"#_1、接口的本质","children":[]},{"level":3,"title":"2、接口与抽象类的区别","slug":"_2、接口与抽象类的区别","link":"#_2、接口与抽象类的区别","children":[]},{"level":3,"title":"3、接口中的方法都是抽象方法","slug":"_3、接口中的方法都是抽象方法","link":"#_3、接口中的方法都是抽象方法","children":[]},{"level":3,"title":"4、接口中的变量都是静态常量","slug":"_4、接口中的变量都是静态常量","link":"#_4、接口中的变量都是静态常量","children":[]},{"level":3,"title":"5、一个类可以实现多个接口","slug":"_5、一个类可以实现多个接口","link":"#_5、一个类可以实现多个接口","children":[]},{"level":3,"title":"6、一个接口可以继承多个父接口","slug":"_6、一个接口可以继承多个父接口","link":"#_6、一个接口可以继承多个父接口","children":[]},{"level":3,"title":"7、接口的作用","slug":"_7、接口的作用","link":"#_7、接口的作用","children":[]}]},{"level":2,"title":"内部类","slug":"内部类","link":"#内部类","children":[{"level":3,"title":"1、内部类概述","slug":"_1、内部类概述","link":"#_1、内部类概述","children":[]},{"level":3,"title":"2、成员内部类","slug":"_2、成员内部类","link":"#_2、成员内部类","children":[]},{"level":3,"title":"3、静态内部类","slug":"_3、静态内部类","link":"#_3、静态内部类","children":[]},{"level":3,"title":"4、局部内部类","slug":"_4、局部内部类","link":"#_4、局部内部类","children":[]},{"level":3,"title":"5、匿名内部类","slug":"_5、匿名内部类","link":"#_5、匿名内部类","children":[]}]}],"git":{"createdTime":1709618715000,"updatedTime":1710049926000,"contributors":[{"name":"zhaoshuo","email":"apzs@foxmaill.com","commits":2}]},"readingTime":{"minutes":182.35,"words":54705},"filePathRelative":"back-base/1.Java基础语法/README.md","localizedDate":"2024年3月5日","excerpt":"<h1> 初始java</h1>\\n<h2> Java : 一个帝国的诞生</h2>\\n<h3> 1、C语言帝国的统治</h3>\\n<p>现在是公元1995年， C语言帝国已经统治了我们20多年， 实在是太久了。</p>\\n<p>1972年， 随着C语言的诞生和Unix的问世， 帝国迅速建立统治， 从北美到欧洲， 从欧洲到亚洲，  无数程序员臣服在他的脚下。</p>\\n<p>帝国给我们提供了极好的福利：贴近硬件，  运行极快， 效率极高。</p>\\n<p>使用这些福利， 程序员们用C 开发了很多系统级软件，操作系统， 编译器， 数据库，网络系统.....</p>\\n<p>但是帝国也给我们安上了两个沉重的枷锁： 指针和内存管理</p>","autoDesc":true}');export{l as data};
