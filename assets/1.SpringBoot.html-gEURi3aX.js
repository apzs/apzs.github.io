const n=JSON.parse('{"key":"v-33e7ab65","path":"/CommonFunctions/1.SpringBoot.html","title":"一、SpringBoot相关","lang":"zh-CN","frontmatter":{"description":"一、SpringBoot相关 1.1、SpringBoot自定义注解实现接口限流 在高并发系统中，保护系统的三种方式分别为：缓存，降级和限流。 限流的目的是通过对并发访问请求进行限速或者一个时间窗口内的的请求数量进行限速来保护系统，一旦达到限制速率则可以拒绝服务、排队或等待。 1. 自定义限流注解 import com.asurplus.common.enums.LimitType; import java.lang.annotation.*; /** * 限流注解 * * @author Lizhou */ @Target(ElementType.METHOD) @Retention(RetentionPolicy.RUNTIME) @Documented public @interface Limit { /** * 限流key前缀 */ String prefix() default \\"limit:\\"; /** * 限流时间,单位秒 */ int time() default 60; /** * 限流次数 */ int count() default 10; /** * 限流类型 */ LimitType type() default LimitType.DEFAULT; }","head":[["meta",{"property":"og:url","content":"https://apzs.github.io/CommonFunctions/1.SpringBoot.html"}],["meta",{"property":"og:site_name","content":"apzs"}],["meta",{"property":"og:title","content":"一、SpringBoot相关"}],["meta",{"property":"og:description","content":"一、SpringBoot相关 1.1、SpringBoot自定义注解实现接口限流 在高并发系统中，保护系统的三种方式分别为：缓存，降级和限流。 限流的目的是通过对并发访问请求进行限速或者一个时间窗口内的的请求数量进行限速来保护系统，一旦达到限制速率则可以拒绝服务、排队或等待。 1. 自定义限流注解 import com.asurplus.common.enums.LimitType; import java.lang.annotation.*; /** * 限流注解 * * @author Lizhou */ @Target(ElementType.METHOD) @Retention(RetentionPolicy.RUNTIME) @Documented public @interface Limit { /** * 限流key前缀 */ String prefix() default \\"limit:\\"; /** * 限流时间,单位秒 */ int time() default 60; /** * 限流次数 */ int count() default 10; /** * 限流类型 */ LimitType type() default LimitType.DEFAULT; }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-05T06:05:15.000Z"}],["meta",{"property":"article:author","content":"apzs"}],["meta",{"property":"article:modified_time","content":"2024-03-05T06:05:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"一、SpringBoot相关\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-05T06:05:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"apzs\\",\\"url\\":\\"https://apzs.eu.org\\"}]}"]]},"headers":[{"level":2,"title":"1.1、SpringBoot自定义注解实现接口限流","slug":"_1-1、springboot自定义注解实现接口限流","link":"#_1-1、springboot自定义注解实现接口限流","children":[{"level":3,"title":"1. 自定义限流注解","slug":"_1-自定义限流注解","link":"#_1-自定义限流注解","children":[]},{"level":3,"title":"2. 限流类型枚举类","slug":"_2-限流类型枚举类","link":"#_2-限流类型枚举类","children":[]},{"level":3,"title":"3. 限流 Lua 脚本","slug":"_3-限流-lua-脚本","link":"#_3-限流-lua-脚本","children":[]},{"level":3,"title":"4. 限流切面处理类","slug":"_4-限流切面处理类","link":"#_4-限流切面处理类","children":[]},{"level":3,"title":"5. 使用与测试","slug":"_5-使用与测试","link":"#_5-使用与测试","children":[]}]},{"level":2,"title":"1.2、注解编程 之 注解合并","slug":"_1-2、注解编程-之-注解合并","link":"#_1-2、注解编程-之-注解合并","children":[{"level":3,"title":"1. 组合注解","slug":"_1-组合注解","link":"#_1-组合注解","children":[]},{"level":3,"title":"2. 自定义注解","slug":"_2-自定义注解","link":"#_2-自定义注解","children":[]},{"level":3,"title":"3. 自定义注解合并","slug":"_3-自定义注解合并","link":"#_3-自定义注解合并","children":[]},{"level":3,"title":"4. 组合注解实现属性值覆盖","slug":"_4-组合注解实现属性值覆盖","link":"#_4-组合注解实现属性值覆盖","children":[]}]},{"level":2,"title":"1.3、Spring @Value 设置默认值","slug":"_1-3、spring-value-设置默认值","link":"#_1-3、spring-value-设置默认值","children":[{"level":3,"title":"1. String 默认值","slug":"_1-string-默认值","link":"#_1-string-默认值","children":[]},{"level":3,"title":"2. 原始类型","slug":"_2-原始类型","link":"#_2-原始类型","children":[]},{"level":3,"title":"3. 数组","slug":"_3-数组","link":"#_3-数组","children":[]},{"level":3,"title":"4. 使用SpEL表达式","slug":"_4-使用spel表达式","link":"#_4-使用spel表达式","children":[]}]},{"level":2,"title":"1.4、WebSocket实现三种模式发送消息","slug":"_1-4、websocket实现三种模式发送消息","link":"#_1-4、websocket实现三种模式发送消息","children":[{"level":3,"title":"1. 自己给自己发送消息","slug":"_1-自己给自己发送消息","link":"#_1-自己给自己发送消息","children":[]}]}],"git":{"createdTime":1709618715000,"updatedTime":1709618715000,"contributors":[{"name":"zhaoshuo","email":"apzs@foxmaill.com","commits":1}]},"readingTime":{"minutes":11.15,"words":3345},"filePathRelative":"CommonFunctions/1.SpringBoot.md","localizedDate":"2024年3月5日","excerpt":"<h1> 一、SpringBoot相关</h1>\\n<h2> 1.1、<a href=\\"https://www.jb51.net/article/250646.htm\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">SpringBoot自定义注解实现接口限流</a></h2>\\n<p>在高并发系统中，保护系统的三种方式分别为：缓存，降级和限流。</p>\\n<p>限流的目的是通过对并发访问请求进行限速或者一个时间窗口内的的请求数量进行限速来保护系统，一旦达到限制速率则可以拒绝服务、排队或等待。</p>\\n<h3> 1. 自定义限流注解</h3>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">com<span class=\\"token punctuation\\">.</span>asurplus<span class=\\"token punctuation\\">.</span>common<span class=\\"token punctuation\\">.</span>enums<span class=\\"token punctuation\\">.</span></span><span class=\\"token class-name\\">LimitType</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token import\\"><span class=\\"token namespace\\">java<span class=\\"token punctuation\\">.</span>lang<span class=\\"token punctuation\\">.</span>annotation<span class=\\"token punctuation\\">.</span></span><span class=\\"token operator\\">*</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token doc-comment comment\\">/**\\n * 限流注解\\n *\\n * <span class=\\"token keyword\\">@author</span> Lizhou\\n */</span>\\n<span class=\\"token annotation punctuation\\">@Target</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ElementType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">METHOD</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token annotation punctuation\\">@Retention</span><span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">RetentionPolicy</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">RUNTIME</span><span class=\\"token punctuation\\">)</span>\\n<span class=\\"token annotation punctuation\\">@Documented</span>\\n<span class=\\"token keyword\\">public</span> <span class=\\"token annotation punctuation\\">@interface</span> <span class=\\"token class-name\\">Limit</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 限流key前缀\\n     */</span>\\n    <span class=\\"token class-name\\">String</span> <span class=\\"token function\\">prefix</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token string\\">\\"limit:\\"</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 限流时间,单位秒\\n     */</span>\\n    <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">time</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token number\\">60</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 限流次数\\n     */</span>\\n    <span class=\\"token keyword\\">int</span> <span class=\\"token function\\">count</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token number\\">10</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token doc-comment comment\\">/**\\n     * 限流类型\\n     */</span>\\n    <span class=\\"token class-name\\">LimitType</span> <span class=\\"token function\\">type</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token keyword\\">default</span> <span class=\\"token class-name\\">LimitType</span><span class=\\"token punctuation\\">.</span><span class=\\"token constant\\">DEFAULT</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
