const n=JSON.parse(`{"key":"v-bf4ebec0","path":"/front-project/%E5%B0%8F%E5%85%94%E9%B2%9CPC%20(Vue3_Pinia_js)/10.%20%E8%B4%AD%E7%89%A9%E8%BD%A6.html","title":"本地购物车","lang":"zh-CN","frontmatter":{"description":"本地购物车 1. 添加购物车 基础思想：如果已经添加过相同的商品，就在其数量count上加一，如果没有添加过，就直接push到购物车列表中 // 封装购物车模块 import { defineStore } from 'pinia' import { ref } from 'vue' export const useCartStore = defineStore('cart', () =&gt; { // 1. 定义state - cartList const cartList = ref([]) // 2. 定义action - addCart const addCart = (goods) =&gt; { console.log('添加', goods) // 添加购物车操作 // 已添加过 - count + 1 // 没有添加过 - 直接push // 思路：通过匹配传递过来的商品对象中的skuId能不能在cartList中找到，找到了就是添加过 const item = cartList.value.find((item) =&gt; goods.skuId === item.skuId) if (item) { // 找到了 item.count++ } else { // 没找到 cartList.value.push(goods) } } return { cartList, addCart } }, { persist: true, })","head":[["meta",{"property":"og:url","content":"https://apzs.github.io/front-project/%E5%B0%8F%E5%85%94%E9%B2%9CPC%20(Vue3_Pinia_js)/10.%20%E8%B4%AD%E7%89%A9%E8%BD%A6.html"}],["meta",{"property":"og:site_name","content":"apzs"}],["meta",{"property":"og:title","content":"本地购物车"}],["meta",{"property":"og:description","content":"本地购物车 1. 添加购物车 基础思想：如果已经添加过相同的商品，就在其数量count上加一，如果没有添加过，就直接push到购物车列表中 // 封装购物车模块 import { defineStore } from 'pinia' import { ref } from 'vue' export const useCartStore = defineStore('cart', () =&gt; { // 1. 定义state - cartList const cartList = ref([]) // 2. 定义action - addCart const addCart = (goods) =&gt; { console.log('添加', goods) // 添加购物车操作 // 已添加过 - count + 1 // 没有添加过 - 直接push // 思路：通过匹配传递过来的商品对象中的skuId能不能在cartList中找到，找到了就是添加过 const item = cartList.value.find((item) =&gt; goods.skuId === item.skuId) if (item) { // 找到了 item.count++ } else { // 没找到 cartList.value.push(goods) } } return { cartList, addCart } }, { persist: true, })"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-05T06:05:15.000Z"}],["meta",{"property":"article:author","content":"apzs"}],["meta",{"property":"article:modified_time","content":"2024-03-05T06:05:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"本地购物车\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-05T06:05:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"apzs\\",\\"url\\":\\"https://apzs.eu.org\\"}]}"]]},"headers":[{"level":2,"title":"1. 添加购物车","slug":"_1-添加购物车","link":"#_1-添加购物车","children":[]},{"level":2,"title":"2. 头部购物车","slug":"_2-头部购物车","link":"#_2-头部购物车","children":[{"level":3,"title":"2.1. 头部购物车组件模版","slug":"_2-1-头部购物车组件模版","link":"#_2-1-头部购物车组件模版","children":[]},{"level":3,"title":"2.2 渲染头部购物车数据","slug":"_2-2-渲染头部购物车数据","link":"#_2-2-渲染头部购物车数据","children":[]},{"level":3,"title":"2.3 删除功能实现","slug":"_2-3-删除功能实现","link":"#_2-3-删除功能实现","children":[]}]},{"level":2,"title":"3. 列表购物车-基础内容渲染","slug":"_3-列表购物车-基础内容渲染","link":"#_3-列表购物车-基础内容渲染","children":[{"level":3,"title":"3.1. 准备模版","slug":"_3-1-准备模版","link":"#_3-1-准备模版","children":[]},{"level":3,"title":"3.2. 绑定路由","slug":"_3-2-绑定路由","link":"#_3-2-绑定路由","children":[]},{"level":3,"title":"3.3. 渲染列表","slug":"_3-3-渲染列表","link":"#_3-3-渲染列表","children":[]}]},{"level":2,"title":"4. 列表购物车-单选功能实现","slug":"_4-列表购物车-单选功能实现","link":"#_4-列表购物车-单选功能实现","children":[]},{"level":2,"title":"5. 列表购物车-全选功能实现","slug":"_5-列表购物车-全选功能实现","link":"#_5-列表购物车-全选功能实现","children":[]},{"level":2,"title":"6. 列表购物车-统计数据功能实现","slug":"_6-列表购物车-统计数据功能实现","link":"#_6-列表购物车-统计数据功能实现","children":[]},{"level":2,"title":"1. 加入购物车","slug":"_1-加入购物车","link":"#_1-加入购物车","children":[]},{"level":2,"title":"2. 删除购物车","slug":"_2-删除购物车","link":"#_2-删除购物车","children":[]}],"git":{"createdTime":1709618715000,"updatedTime":1709618715000,"contributors":[{"name":"zhaoshuo","email":"apzs@foxmaill.com","commits":1}]},"readingTime":{"minutes":7.55,"words":2266},"filePathRelative":"front-project/小兔鲜PC (Vue3+Pinia+js)/10. 购物车.md","localizedDate":"2024年3月5日","excerpt":"<h1> 本地购物车</h1>\\n<h2> 1. 添加购物车</h2>\\n<blockquote>\\n<p>基础思想：如果已经添加过相同的商品，就在其数量count上加一，如果没有添加过，就直接push到购物车列表中</p>\\n</blockquote>\\n<div class=\\"language-javascript line-numbers-mode\\" data-ext=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token comment\\">// 封装购物车模块</span>\\n\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> defineStore <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'pinia'</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> ref <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">'vue'</span>\\n\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">const</span> useCartStore <span class=\\"token operator\\">=</span> <span class=\\"token function\\">defineStore</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'cart'</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 1. 定义state - cartList</span>\\n  <span class=\\"token keyword\\">const</span> cartList <span class=\\"token operator\\">=</span> <span class=\\"token function\\">ref</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">)</span>\\n  <span class=\\"token comment\\">// 2. 定义action - addCart</span>\\n  <span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">addCart</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">goods</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n    console<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">log</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'添加'</span><span class=\\"token punctuation\\">,</span> goods<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token comment\\">// 添加购物车操作</span>\\n    <span class=\\"token comment\\">// 已添加过 - count + 1</span>\\n    <span class=\\"token comment\\">// 没有添加过 - 直接push</span>\\n    <span class=\\"token comment\\">// 思路：通过匹配传递过来的商品对象中的skuId能不能在cartList中找到，找到了就是添加过</span>\\n    <span class=\\"token keyword\\">const</span> item <span class=\\"token operator\\">=</span> cartList<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">find</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">item</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> goods<span class=\\"token punctuation\\">.</span>skuId <span class=\\"token operator\\">===</span> item<span class=\\"token punctuation\\">.</span>skuId<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>item<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// 找到了</span>\\n      item<span class=\\"token punctuation\\">.</span>count<span class=\\"token operator\\">++</span>\\n    <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">else</span> <span class=\\"token punctuation\\">{</span>\\n      <span class=\\"token comment\\">// 没找到</span>\\n      cartList<span class=\\"token punctuation\\">.</span>value<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>goods<span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token punctuation\\">}</span>\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token punctuation\\">{</span>\\n    cartList<span class=\\"token punctuation\\">,</span>\\n    addCart\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token literal-property property\\">persist</span><span class=\\"token operator\\">:</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
