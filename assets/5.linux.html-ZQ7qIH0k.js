import{_ as e}from"./plugin-vue_export-helper-x3n3nnut.js";import{r as i,o as t,c as l,a,b as c,d as o,e as s}from"./app-YilgCgZO.js";const p={},d=s(`<h1 id="五、linux常用功能" tabindex="-1"><a class="header-anchor" href="#五、linux常用功能" aria-hidden="true">#</a> 五、linux常用功能</h1><h2 id="_5-1、使用ssh连接虚拟机" tabindex="-1"><a class="header-anchor" href="#_5-1、使用ssh连接虚拟机" aria-hidden="true">#</a> 5.1、使用<code>ssh</code>连接虚拟机</h2><blockquote><p>需要使用<code>su root</code>命令切换到<code>root</code>用户才能进行下面操作</p></blockquote><h3 id="_1-进入ssh配置文件" tabindex="-1"><a class="header-anchor" href="#_1-进入ssh配置文件" aria-hidden="true">#</a> 1. 进入<code>ssh</code>配置文件</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> /etc/ssh/sshd_config
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-允许root用户远程连接虚拟机" tabindex="-1"><a class="header-anchor" href="#_2-允许root用户远程连接虚拟机" aria-hidden="true">#</a> 2. 允许<code>root</code>用户远程连接虚拟机</h3><p>将<code>PermitRootLogin yes</code>配置打开(删掉<code>PermitRootLogin yes</code>左边的<code>#</code>)</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">PermitRootLogin</span> <span class="token value attr-value">yes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20221130141853388.png" alt="image-20221130141853388" tabindex="0" loading="lazy"><figcaption>image-20221130141853388</figcaption></figure><h3 id="_3-允许使用密码连接虚拟机" tabindex="-1"><a class="header-anchor" href="#_3-允许使用密码连接虚拟机" aria-hidden="true">#</a> 3. 允许使用密码连接虚拟机</h3><p>将<code> PasswordAuthentication yes</code>配置打开(删掉<code>PasswordAuthentication yes</code>左边的<code>#</code>)</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">PasswordAuthentication</span> <span class="token value attr-value">yes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20221130141931075.png" alt="image-20221130141931075" tabindex="0" loading="lazy"><figcaption>image-20221130141931075</figcaption></figure><h3 id="_4-重启ssh-service" tabindex="-1"><a class="header-anchor" href="#_4-重启ssh-service" aria-hidden="true">#</a> 4. 重启ssh service</h3><p>使用<code>service sshd restart</code>命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">service</span> sshd restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>或使用<code>systemctl restart sshd</code>命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl restart sshd
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5-连接虚拟机" tabindex="-1"><a class="header-anchor" href="#_5-连接虚拟机" aria-hidden="true">#</a> 5. 连接虚拟机</h3><p>使用如下命令即可连接（修改为自己的虚拟机的ip）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> root@192.168.56.100
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_5-2、修改网卡设置" tabindex="-1"><a class="header-anchor" href="#_5-2、修改网卡设置" aria-hidden="true">#</a> 5.2、修改网卡设置</h2><p>使用<code>ip addr</code>命令可以查看各个网卡的<code>ip</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ip</span> addr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20221130143535732.png" alt="image-20221130143535732" tabindex="0" loading="lazy"><figcaption>image-20221130143535732</figcaption></figure><p>先使用<code>cd /etc/sysconfig/network-scripts</code>命令进到网卡的配置目录，使用<code>ll</code>命令查看相应网卡的配置文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> /etc/sysconfig/network-scripts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20221130143341635.png" alt="image-20221130143341635" tabindex="0" loading="lazy"><figcaption>image-20221130143341635</figcaption></figure><p>假如我想想要修改<code>eth0</code>号网卡，可以使用如下命令修改该网卡的配置</p><blockquote><p>如果我们想要修改<code>eth0</code>号网卡却没有对应的<code>ifcfg-eth0</code>文件，如果我们安装了<code>nano</code>可以使用<code>sudo nano /etc/sysconfig/network-scripts/ifcfg-eth0</code>命令创建，如果没有安装<code>nano</code>可以直接使用<code>touch</code>命令创建<code>ifcfg-eth0</code>文件</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">vi</span> ifcfg-eth0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>修改前：（该网卡是<code>NAT</code>模式，<code>PERSISTENT_DHCLIENT</code> 是一个网络管理工具 <code>dhclient</code> 的配置选项，它指示 <code>dhclient</code> 在网络连接断开后是否保持运行。当 <code>PERSISTENT_DHCLIENT</code> 设置为 <code>yes</code> 时，<code>dhclient</code> 将在网络连接断开后继续运行，并尝试重新连接到网络。这对于需要保持网络连接的应用程序（如服务器）非常有用，因为它可以确保网络连接在断开后能够自动恢复。）</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token comment"># 设备名称</span>
<span class="token key attr-name">DEVICE</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;eth0&quot;</span>
<span class="token key attr-name">BOOTPROTO</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;dhcp&quot;</span>
<span class="token comment"># 是否开机自启动</span>
<span class="token key attr-name">ONBOOT</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;yes&quot;</span>
<span class="token comment"># 网络类型</span>
<span class="token key attr-name">TYPE</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;Ethernet&quot;</span>
<span class="token key attr-name">PERSISTENT_DHCLIENT</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;yes&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20221130113744943.png" alt="image-20221130113744943" tabindex="0" loading="lazy"><figcaption>image-20221130113744943</figcaption></figure><p>修改后：</p><div class="language-properties line-numbers-mode" data-ext="properties"><pre class="language-properties"><code><span class="token key attr-name">DEVICE</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;eth0&quot;</span>
<span class="token key attr-name">BOOTPROTO</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;static&quot;</span>
<span class="token key attr-name">IPADDR</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;192.168.56.100&quot;</span>
<span class="token key attr-name">NETMASK</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;255.255.255.0&quot;</span>
<span class="token key attr-name">ONBOOT</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;yes&quot;</span>
<span class="token key attr-name">TYPE</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;Ethernet&quot;</span>
<span class="token key attr-name">PERSISTENT_DHCLIENT</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;yes&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20221130113702649.png" alt="image-20221130113702649" tabindex="0" loading="lazy"><figcaption>image-20221130113702649</figcaption></figure><blockquote><p>如果是<code>Host-Only仅主机模式</code>，可以修改为如下格式</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">DEVICE</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">eth1</span>&quot;</span>
<span class="token key attr-name">BOOTPROTO</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">static</span>&quot;</span>
<span class="token key attr-name">IPADDR</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">192.168.56.11</span>&quot;</span>
<span class="token key attr-name">NETMASK</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">255.255.255.0</span>&quot;</span>
<span class="token key attr-name">GATEWAY</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">192.168.56.1</span>&quot;</span>
<span class="token key attr-name">DNS1</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">8.8.8.8</span>&quot;</span>
<span class="token key attr-name">DNS2</span><span class="token punctuation">=</span><span class="token value attr-value">&quot;<span class="token inner-value">8.8.4.4</span>&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>或：</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token key attr-name">TYPE</span><span class="token punctuation">=</span><span class="token value attr-value">Ethernet</span>
<span class="token key attr-name">BOOTPROTO</span><span class="token punctuation">=</span><span class="token value attr-value">static</span>
<span class="token key attr-name">DEFROUTE</span><span class="token punctuation">=</span><span class="token value attr-value">yes</span>
<span class="token key attr-name">NAME</span><span class="token punctuation">=</span><span class="token value attr-value">eth1</span>
<span class="token key attr-name">DEVICE</span><span class="token punctuation">=</span><span class="token value attr-value">eth1</span>
<span class="token key attr-name">ONBOOT</span><span class="token punctuation">=</span><span class="token value attr-value">yes</span>
<span class="token key attr-name">IPADDR</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.56.11</span>
<span class="token key attr-name">NETMASK</span><span class="token punctuation">=</span><span class="token value attr-value">255.255.255.0</span>
<span class="token key attr-name">GATEWAY</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.56.1</span>
<span class="token key attr-name">DNS1</span><span class="token punctuation">=</span><span class="token value attr-value">8.8.8.8</span>
<span class="token key attr-name">DNS2</span><span class="token punctuation">=</span><span class="token value attr-value">8.8.4.4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><blockquote><p><code>systemctl restart network</code> 命令可以重启网络服务，但是慎用它，因为它可能会导致网络连接中断，尤其是在远程连接的情况下。在某些情况下，使用该命令可能会导致一些网络配置文件丢失或者被覆盖，从而导致网络连接出现问题。</p><p>如果您需要重启网络服务，建议使用以下命令：</p><ul><li><code>systemctl restart network-manager</code>：重启 Network Manager 服务</li><li><code>systemctl restart NetworkManager.service</code>：重启 Network Manager 服务</li><li><code>service network restart</code>：重启网络服务</li></ul><p>这些命令都可以用来重启网络服务，但是它们更加稳定，不会导致网络连接中断或者配置文件丢失的问题。</p></blockquote><p>重启网卡</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl restart network
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>输入这条命令后，我的<code>ssh</code>连接工具就连不上了，在虚拟机的控制台输入<code>ip addr</code>命令，可以看到已经修改成功了</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20221130150326899.png" alt="image-20221130150326899" tabindex="0" loading="lazy"><figcaption>image-20221130150326899</figcaption></figure><p>然后<code>cmd</code>使用如下命令即可连上虚拟机</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> root@192.168.56.100
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_5-3、防火墙设置" tabindex="-1"><a class="header-anchor" href="#_5-3、防火墙设置" aria-hidden="true">#</a> 5.3、防火墙设置</h2><h3 id="_1-开启防火墙" tabindex="-1"><a class="header-anchor" href="#_1-开启防火墙" aria-hidden="true">#</a> 1. 开启防火墙</h3><p><strong>1. 查看防火状态</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl status firewalld

<span class="token function">service</span>  iptables status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>2. 打卡防火墙</strong></p><p>如果防火墙状态不是active，需要打开防火墙</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl start firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2. 暂时关闭防火墙</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl stop firewalld

<span class="token function">service</span>  iptables stop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>3. 永久关闭防火墙</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl disable firewalld

<span class="token function">chkconfig</span> iptables off
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>4. 自启动防火墙</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> firewalld

<span class="token function">service</span> iptables restart
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>5. 重启防火墙</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>systemctl restart firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-添加允许通过的端口" tabindex="-1"><a class="header-anchor" href="#_2-添加允许通过的端口" aria-hidden="true">#</a> 2. 添加允许通过的端口</h3>`,61),r={href:"https://www.cnblogs.com/gwblog/p/16190754.html",target:"_blank",rel:"noopener noreferrer"},u=s(`<p><strong>1. 查看所有已开放的临时端口（默认为空）</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>firewall-cmd --list-ports
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>查看所有永久开放的端口（默认为空）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>firewall-cmd --list-ports --permanent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2. 添加临时开放端口</strong></p><p>例如：比如我修改ssh远程连接端口是22，则需要开放这个端口</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>firewall-cmd --add-port=22/tcp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关闭临时端口</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>firewall-cmd --remove-port=80/tcp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>3. 添加永久开放的端口</strong></p><p>添加永久开放的端口（例如：22端口）</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>firewall-cmd --add-port=22/tcp --permanent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>关闭永久端口</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>firewall-cmd --remove-port=80/tcp --permanent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>4. 重启防火墙</strong></p><p>配置结束后需要输入重载命令并重启防火墙以生效配置</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>firewall-cmd --reload
systemctl restart firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-4、使用命令行复制文件" tabindex="-1"><a class="header-anchor" href="#_5-4、使用命令行复制文件" aria-hidden="true">#</a> 5.4、使用命令行复制文件</h2><p>scp是有Security的文件copy，基于ssh登录。操作起来比较方便，要把当前一个文件copy到远程另外一台主机上，可以使用该命令。</p><p>格式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span>  <span class="token punctuation">[</span>可选参数<span class="token punctuation">]</span>  file_source  file_target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>完整命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> 本地用户名@IP地址:文件名1  远程用户名@IP地址:文件名2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>由于本地无需指定，因此<code> 本地用户名@IP地址:</code>可以不输入 , 需要输入远程用户名和所对应的密码</p><p>可能有用的几个参数 :</p><ul><li><p>-v 和大多数 linux 命令中的 -v 意思一样 , 用来显示进度 . 可以用来查看连接 , 认证 , 或是配置错误</p></li><li><p>-C 使能压缩选项 .</p></li><li><p>-P 选择端口 . 注意 -p 已经被 rcp 使用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> <span class="token parameter variable">-p</span> <span class="token number">4588</span> remote@www.abc.com:/usr/local/sin.sh /home/administrator
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>-4 强行使用 IPV4 地址</p></li><li><p>-6 强行使用 IPV6 地址</p></li></ul><h3 id="_1-复制文件" tabindex="-1"><a class="header-anchor" href="#_1-复制文件" aria-hidden="true">#</a> 1. 复制文件</h3><ul><li>复制到远程主机</li></ul><p>把文件从当前系统复制到远程主机，可以输入如下命令，然后会提示你输入另外那台主机的root用户的登录密码，接着就开始复制了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> D:<span class="token punctuation">\\</span><span class="token number">1</span>.txt root@192.168.56.10:/root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20221130154901832.png" alt="image-20221130154901832" tabindex="0" loading="lazy"><figcaption>image-20221130154901832</figcaption></figure><ul><li>复制到本地</li></ul><p>如果想反过来操作，把文件从远程主机复制到当前系统，只需调换一下即可。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> root@192.168.56.10:/root D:<span class="token punctuation">\\</span>test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20221130155448918.png" alt="image-20221130155448918" tabindex="0" loading="lazy"><figcaption>image-20221130155448918</figcaption></figure><h3 id="_2-复制文件夹" tabindex="-1"><a class="header-anchor" href="#_2-复制文件夹" aria-hidden="true">#</a> 2. 复制文件夹</h3><ul><li>复制到远程主机</li></ul><p>使用<code>-r</code>参数即可复制文件夹</p><p>把文件夹从当前系统复制到远程主机（<code>test</code>文件夹放到了<code>root</code>文件夹里面）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> <span class="token parameter variable">-r</span> D:<span class="token punctuation">\\</span>test root@192.168.56.10:/root
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20221130161912030.png" alt="image-20221130161912030" tabindex="0" loading="lazy"><figcaption>image-20221130161912030</figcaption></figure><ul><li>复制到本地</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">scp</span> <span class="token parameter variable">-r</span> root@192.168.56.10:/root/test D:<span class="token punctuation">\\</span>aaa
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20221130163021811.png" alt="image-20221130163021811" tabindex="0" loading="lazy"><figcaption>image-20221130163021811</figcaption></figure><h2 id="_5-5、修改yum源" tabindex="-1"><a class="header-anchor" href="#_5-5、修改yum源" aria-hidden="true">#</a> 5.5、修改yum源</h2><div class="language-mysql line-numbers-mode" data-ext="mysql"><pre class="language-mysql"><code># 测试连通性
ping www.baidu.com

cd /etc/yum.repos.d
# 备份CentOS-Base.repo
mv ./CentOS-Base.repo ./CentOS-Base.repo.backup
# 下载yum源
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
# 清除缓存
yum clean all &amp;&amp; yum makecache
# 查看yum源
yum repolist
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>安装<code>wget</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token function">wget</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><p>完整命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ping www.baidu.com</span>
PING www.a.shifen.com <span class="token punctuation">(</span><span class="token number">14.119</span>.104.189<span class="token punctuation">)</span> <span class="token number">56</span><span class="token punctuation">(</span><span class="token number">84</span><span class="token punctuation">)</span> bytes of data.
<span class="token number">64</span> bytes from <span class="token number">14.119</span>.104.189 <span class="token punctuation">(</span><span class="token number">14.119</span>.104.189<span class="token punctuation">)</span>: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">1</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">52</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">32.8</span> ms
<span class="token number">64</span> bytes from <span class="token number">14.119</span>.104.189 <span class="token punctuation">(</span><span class="token number">14.119</span>.104.189<span class="token punctuation">)</span>: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">2</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">52</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">26.8</span> ms
<span class="token number">64</span> bytes from <span class="token number">14.119</span>.104.189 <span class="token punctuation">(</span><span class="token number">14.119</span>.104.189<span class="token punctuation">)</span>: <span class="token assign-left variable">icmp_seq</span><span class="token operator">=</span><span class="token number">3</span> <span class="token assign-left variable">ttl</span><span class="token operator">=</span><span class="token number">52</span> <span class="token assign-left variable">time</span><span class="token operator">=</span><span class="token number">26.3</span> ms
^C
--- www.a.shifen.com <span class="token function">ping</span> statistics ---
<span class="token number">3</span> packets transmitted, <span class="token number">3</span> received, <span class="token number">0</span>% packet loss, <span class="token function">time</span> 2005ms
rtt min/avg/max/mdev <span class="token operator">=</span> <span class="token number">26.339</span>/28.687/32.842/2.949 ms
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cd /etc/yum.repos.d</span>
<span class="token punctuation">[</span>root@localhost yum.repos.d<span class="token punctuation">]</span><span class="token comment"># ls</span>
CentOS-Base.repo       CentOS-fasttrack.repo  CentOS-Vault.repo
CentOS-CR.repo         CentOS-Media.repo      CentOS-x86_64-kernel.repo
CentOS-Debuginfo.repo  CentOS-Sources.repo
<span class="token punctuation">[</span>root@localhost yum.repos.d<span class="token punctuation">]</span><span class="token comment"># mv ./CentOS-Base.repo ./CentOS-Base.repo.backup</span>
<span class="token punctuation">[</span>root@localhost yum.repos.d<span class="token punctuation">]</span><span class="token comment"># wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span>
--2023-03-07 <span class="token number">13</span>:59:44--  http://mirrors.aliyun.com/repo/Centos-7.repo
Resolving mirrors.aliyun.com <span class="token punctuation">(</span>mirrors.aliyun.com<span class="token punctuation">)</span><span class="token punctuation">..</span>. <span class="token number">180.101</span>.198.211, <span class="token number">14.17</span>.66.242, <span class="token number">180.101</span>.198.210, <span class="token punctuation">..</span>.
Connecting to mirrors.aliyun.com <span class="token punctuation">(</span>mirrors.aliyun.com<span class="token punctuation">)</span><span class="token operator">|</span><span class="token number">180.101</span>.198.211<span class="token operator">|</span>:80<span class="token punctuation">..</span>. connected.
HTTP request sent, awaiting response<span class="token punctuation">..</span>. <span class="token number">200</span> OK
Length: <span class="token number">2523</span> <span class="token punctuation">(</span><span class="token number">2</span>.5K<span class="token punctuation">)</span> <span class="token punctuation">[</span>application/octet-stream<span class="token punctuation">]</span>
Saving to: ‘/etc/yum.repos.d/CentOS-Base.repo’
<span class="token punctuation">..</span>.
<span class="token number">100</span>%<span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">=</span><span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token number">2,523</span>       --.-K/s   <span class="token keyword">in</span> <span class="token number">0</span>.008s  

<span class="token number">2023</span>-03-07 <span class="token number">13</span>:59:44 <span class="token punctuation">(</span><span class="token number">303</span> KB/s<span class="token punctuation">)</span> - ‘/etc/yum.repos.d/CentOS-Base.repo’ saved <span class="token punctuation">[</span><span class="token number">2523</span>/2523<span class="token punctuation">]</span>

<span class="token punctuation">[</span>root@localhost yum.repos.d<span class="token punctuation">]</span><span class="token comment"># yum clean all &amp;&amp; yum makecache</span>
Loaded plugins: fastestmirror
<span class="token punctuation">..</span>.     
<span class="token punctuation">(</span><span class="token number">10</span>/10<span class="token punctuation">)</span>: updates/7/x86_64/primary_db                              <span class="token operator">|</span>  <span class="token number">19</span> MB  00:01:09     
Metadata Cache Created
<span class="token punctuation">[</span>root@localhost yum.repos.d<span class="token punctuation">]</span><span class="token comment"># yum repolist</span>
Loaded plugins: fastestmirror
Loading mirror speeds from cached hostfile
 * base: mirrors.aliyun.com
 * extras: mirrors.aliyun.com
 * updates: mirrors.aliyun.com
repo <span class="token function">id</span>                       repo name                                            status
base/7/x86_64                 CentOS-7 - Base - mirrors.aliyun.com                 <span class="token number">10,072</span>
extras/7/x86_64               CentOS-7 - Extras - mirrors.aliyun.com                  <span class="token number">515</span>
updates/7/x86_64              CentOS-7 - Updates - mirrors.aliyun.com               <span class="token number">4,734</span>
repolist: <span class="token number">15,321</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-6、yum常用功能" tabindex="-1"><a class="header-anchor" href="#_5-6、yum常用功能" aria-hidden="true">#</a> 5.6、yum常用功能</h2><p>yum是一个在CentOS/RHEL系统上用于管理软件包的命令行工具。以下是yum的一些常用命令：</p><blockquote><p>请注意，这些命令需要在具有管理员权限的帐户下运行。</p></blockquote><p><strong>更新所有软件包</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum update
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>安装软件包</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> package_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>卸载软件包</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum remove package_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>搜索软件包</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum search search_term
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>显示软件包信息</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum info package_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>列出所有已安装软件包</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum list installed
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>清除缓存</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum clean all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_5-7、查看是否安装某个软件" tabindex="-1"><a class="header-anchor" href="#_5-7、查看是否安装某个软件" aria-hidden="true">#</a> 5.7、查看是否安装某个软件</h2><p>可以使用 <code>rpm</code> 命令来查看某个软件是否已经安装。具体方法如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">rpm</span> <span class="token parameter variable">-qa</span> <span class="token operator">|</span> <span class="token function">grep</span> software_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，<code>software_name</code> 是你要查找的软件的名称。该命令会列出所有已经安装的软件，并使用 <code>grep</code> 过滤出包含 <code>software_name</code> 的软件。</p><p>如果该命令没有输出任何结果，则表示该软件尚未安装。如果输出了软件的名称，则表示该软件已经安装。</p><p>另外，你也可以使用 <code>yum</code> 命令来查看软件是否已经安装。具体方法如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum list installed <span class="token operator">|</span> <span class="token function">grep</span> software_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>同样，<code>software_name</code> 是你要查找的软件的名称。该命令会列出所有已经安装的软件，并使用 <code>grep</code> 过滤出包含 <code>software_name</code> 的软件。</p><p>如果该命令没有输出任何结果，则表示该软件尚未安装。如果输出了软件的名称，则表示该软件已经安装。</p><p>还可以使用如下几种命令查找该软件的安装位置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost local<span class="token punctuation">]</span><span class="token comment"># whereis redis</span>
redis: /etc/redis.conf
<span class="token punctuation">[</span>root@localhost local<span class="token punctuation">]</span><span class="token comment"># which redis</span>
/usr/bin/which: no redis <span class="token keyword">in</span> <span class="token punctuation">(</span>/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/root/bin<span class="token punctuation">)</span>
<span class="token punctuation">[</span>root@localhost local<span class="token punctuation">]</span><span class="token comment"># find / -name  &#39;redis.conf&#39;</span>
/etc/redis.conf
<span class="token punctuation">[</span>root@localhost local<span class="token punctuation">]</span><span class="token comment"># locate / redis    # 如果命令不存在可以使用 yum install mlocate 命令安装</span>
locate: can not <span class="token function">stat</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> \`/var/lib/mlocate/mlocate.db&#39;: No such <span class="token function">file</span> or directory
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-8、设置开机自启动" tabindex="-1"><a class="header-anchor" href="#_5-8、设置开机自启动" aria-hidden="true">#</a> 5.8、设置开机自启动</h2><p><strong>设置某个服务开机自启动</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><hr><p><strong>自己创建启动配置</strong></p><p>将Redis设置为开机自启动服务，可以按照以下步骤进行：</p><ul><li><p>创建一个systemd服务文件，例如<code>redis.service</code>，并将其放在<code>/etc/systemd/system/</code>目录下。</p></li><li><p>在<code>redis.service</code>文件中，定义服务的详细信息，包括服务的描述、启动命令、服务类型等。例如：</p></li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>Redis persistent key-value database
<span class="token assign-left variable">After</span><span class="token operator">=</span>network.target

<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">Type</span><span class="token operator">=</span>forking
<span class="token assign-left variable">User</span><span class="token operator">=</span>redis
<span class="token assign-left variable">Group</span><span class="token operator">=</span>redis
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/redis-server /etc/redis.conf
<span class="token assign-left variable">ExecStop</span><span class="token operator">=</span>/usr/bin/redis-cli <span class="token function">shutdown</span>
<span class="token assign-left variable">Restart</span><span class="token operator">=</span>always

<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中，<code>Description</code>字段是服务的描述，<code>After</code>字段指定服务应该在哪个目标之后启动，<code>Type</code>字段指定服务的类型，<code>User</code>和<code>Group</code>字段指定服务应该以哪个用户和组的身份运行，<code>ExecStart</code>字段指定Redis启动命令和配置文件的位置，<code>ExecStop</code>字段指定Redis停止命令，<code>Restart</code>字段指定服务应该在崩溃时自动重启，<code>WantedBy</code>字段指定服务应该在哪个目标中启用。</p><ul><li>重新加载systemd服务文件：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl daemon-reload
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>启用Redis服务：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl <span class="token builtin class-name">enable</span> redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>现在，Redis将在系统启动时自动启动。你可以使用以下命令来启动、停止或重启Redis服务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl start redis
<span class="token function">sudo</span> systemctl stop redis
<span class="token function">sudo</span> systemctl restart redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-9、手动安装java" tabindex="-1"><a class="header-anchor" href="#_5-9、手动安装java" aria-hidden="true">#</a> 5.9、手动安装Java</h2><p>要在Linux上手动安装Java并配置环境变量，请按照以下步骤进行操作：</p><ol><li><p>下载Java安装包。您可以从Oracle官网下载Java安装包</p><p>例如JDK 8：https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html</p></li><li><p>解压缩Java安装包。您可以使用以下命令解压缩：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xvf</span> jdk-8u301-linux-x64.tar.gz
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>请注意，此处的文件名可能会因您下载的Java版本而有所不同。</p></li><li><p>将Java安装到您选择的目录中。例如，您可以将Java安装到<code>/usr/local/java</code>目录中：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">mkdir</span> /usr/local/java
<span class="token function">mv</span> jdk1.8.0_301 /usr/local/java/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，此处的文件名可能会因您下载的Java版本而有所不同。</p></li><li><p>配置Java环境变量。打开<code>/etc/profile</code>文件并在文件末尾添加以下行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/local/java/jdk1.8.0_301
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$JAVA_HOME</span>/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>保存并关闭文件。</p></li><li><p>使环境变量生效。使用以下命令使环境变量立即生效：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /etc/profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>检查Java是否已成功安装。使用以下命令检查Java版本：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">java</span> <span class="token parameter variable">-version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果Java已成功安装，则会显示Java版本信息。</p></li></ol><p>现在，您已经成功地在Linux上手动安装了Java并配置了环境变量。</p><h2 id="_5-10、杀死指定端口的进程" tabindex="-1"><a class="header-anchor" href="#_5-10、杀死指定端口的进程" aria-hidden="true">#</a> 5.10、杀死指定端口的进程</h2><p>要关闭CentOS上的指定端口的进程，可以执行以下步骤：</p><ul><li>1、用以下命令查找正在运行的进程并占用端口：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-tulnp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token operator">&lt;</span>端口号<span class="token operator">&gt;</span>
<span class="token comment"># 或</span>
<span class="token function">lsof</span> <span class="token parameter variable">-i</span> :<span class="token operator">&lt;</span>端口号<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>例如，如果要查找占用端口号为80的进程，可以运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 使用netstat （如果没有netstat命令需要安装net-tools，即 yum install net-tools）</span>
<span class="token function">netstat</span> <span class="token parameter variable">-tulnp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">6379</span>
<span class="token comment"># 或使用 （如果没有需要安装 lsof ， 即 yum install lsof）</span>
<span class="token function">lsof</span> <span class="token parameter variable">-i</span> :6379
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查找到占用端口号的进程PID，例如PID为1300。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># netstat -tulnp | grep 6379</span>
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">127.0</span>.0.1:6379          <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1300</span>/redis-server <span class="token number">1</span> 
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># sudo lsof -i :6379</span>
COMMAND    PID  <span class="token environment constant">USER</span>   FD   TYPE DEVICE SIZE/OFF NODE NAME
redis-ser <span class="token number">1300</span> redis    4u  IPv4  <span class="token number">18168</span>      0t0  TCP localhost:6379 <span class="token punctuation">(</span>LISTEN<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>2、使用以下命令杀死该进程：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">kill</span> <span class="token operator">&lt;</span>PID<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如，如果PID为1234，可以运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">kill</span> <span class="token number">1300</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>3、使用以下命令确认该进程已被杀死：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-tulnp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token operator">&lt;</span>端口号<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如，如果要确认端口号为80的进程已被杀死，可以运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">netstat</span> <span class="token parameter variable">-tulnp</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">6379</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果没有任何输出，则表示该端口没有进程正在占用。</p><h2 id="_5-11、连不上虚拟机的某个服务-如redis" tabindex="-1"><a class="header-anchor" href="#_5-11、连不上虚拟机的某个服务-如redis" aria-hidden="true">#</a> 5.11、连不上虚拟机的某个服务(如<code>redis</code>)</h2><h3 id="_1-查看服务是否可用" tabindex="-1"><a class="header-anchor" href="#_1-查看服务是否可用" aria-hidden="true">#</a> 1. 查看服务是否可用</h3><p>我们先测试在虚拟机里面使用命令是否可以使用，可以看到<code>redis</code>能够正常使用（如果不能使用，则证明安装或配置存在问题）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost local<span class="token punctuation">]</span><span class="token comment"># redis-cli</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">set</span> name <span class="token number">123</span>
OK
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> get name
<span class="token string">&quot;123&quot;</span>
<span class="token number">127.0</span>.0.1:637<span class="token operator"><span class="token file-descriptor important">9</span>&gt;</span> <span class="token builtin class-name">exit</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-查看某个服务的pid和端口" tabindex="-1"><a class="header-anchor" href="#_2-查看某个服务的pid和端口" aria-hidden="true">#</a> 2. 查看某个服务的pid和端口</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>ps aux | grep &lt;服务名&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如查看redis（在虚拟机里执行）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ps aux | grep redis</span>
redis     <span class="token number">1300</span>  <span class="token number">0.0</span>  <span class="token number">0.5</span> <span class="token number">143060</span>  <span class="token number">2644</span> ?        Ssl  08:07   <span class="token number">0</span>:03 /usr/bin/redis-server <span class="token number">127.0</span>.0.1:6379
root      <span class="token number">1992</span>  <span class="token number">0.0</span>  <span class="token number">0.1</span> <span class="token number">112812</span>   <span class="token number">976</span> pts/0    S+   09:18   <span class="token number">0</span>:00 <span class="token function">grep</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到<code>redis</code>的<code>pid</code>为<code>1300</code>，使用的<code>ip</code>为<code>127.0.0.1</code>，端口为<code>6379</code>，如果没有查到证明<code>redis</code>没有启动成功</p><h3 id="_3-查看端口占用" tabindex="-1"><a class="header-anchor" href="#_3-查看端口占用" aria-hidden="true">#</a> 3. 查看端口占用</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>netstat -tulnp | grep &lt;端口号&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>例如查看redis（在虚拟机里执行），可以看到<code>redis</code>已经占用<code>6379</code>端口了（如果修改了端口可以查看修改后的端口）</p><blockquote><p>如果报<code>-bash: telnet: command not found</code>，使用如下命令安装<code>telnet</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> telnet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># netstat -tulnp | grep 6379</span>
tcp        <span class="token number">0</span>      <span class="token number">0</span> <span class="token number">127.0</span>.0.1:6379          <span class="token number">0.0</span>.0.0:*               LISTEN      <span class="token number">1300</span>/redis-server <span class="token number">1</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4-测试回环地址ip" tabindex="-1"><a class="header-anchor" href="#_4-测试回环地址ip" aria-hidden="true">#</a> 4. 测试回环地址ip</h3><p>使用<code>127.0.0.1</code>的<code>ip</code>测试<code>6379</code>是否能访问（在虚拟机里执行），可以看到回环地址可以访问</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost local<span class="token punctuation">]</span><span class="token comment"># telnet 127.0.0.1 6379</span>
Trying <span class="token number">127.0</span>.0.1<span class="token punctuation">..</span>.
Connected to <span class="token number">127.0</span>.0.1.
Escape character is <span class="token string">&#39;^]&#39;</span><span class="token builtin class-name">.</span> <span class="token comment"># 此时使用 ctrl + ] 快捷键</span>
^<span class="token punctuation">]</span>
telnet<span class="token operator">&gt;</span> quit
Connection closed.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_5-测试其他网卡ip" tabindex="-1"><a class="header-anchor" href="#_5-测试其他网卡ip" aria-hidden="true">#</a> 5. 测试其他网卡ip</h3><p>我们使用主机可以访问的<code>ip</code>测试是否可以连接（在虚拟机里执行）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost local<span class="token punctuation">]</span><span class="token comment"># telnet 192.168.56.11 6379</span>
Trying <span class="token number">192.168</span>.56.11<span class="token punctuation">..</span>.
telnet: connect to address <span class="token number">192.168</span>.56.11: Connection refused
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到这里连接拒绝了，我们可以修改其配置文件，使其所有网卡的<code>ip</code>都可访问（生产环境最好不要修改，使其不允许远程访问）</p><blockquote><p>使用<code>ip addr</code>可以查看所有网卡的<code>ip</code>（<code>lo</code>表示回环地址，即<code>127.0.0.1</code>）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost local<span class="token punctuation">]</span><span class="token comment"># ip addr</span>
<span class="token number">1</span>: lo: <span class="token operator">&lt;</span>LOOPBACK,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">65536</span> qdisc noqueue state UNKNOWN group default qlen <span class="token number">1000</span>
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet <span class="token number">127.0</span>.0.1/8 scope <span class="token function">host</span> lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope <span class="token function">host</span> 
       valid_lft forever preferred_lft forever
<span class="token number">2</span>: eth0: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">1500</span> qdisc pfifo_fast state UP group default qlen <span class="token number">1000</span>
    link/ether <span class="token number">52</span>:54:00:4d:77:d3 brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">10.0</span>.2.15/24 brd <span class="token number">10.0</span>.2.255 scope global noprefixroute dynamic eth0
       valid_lft 64528sec preferred_lft 64528sec
    inet6 fe80::5054:ff:fe4d:77d3/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever
<span class="token number">3</span>: eth1: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">1500</span> qdisc pfifo_fast state UP group default qlen <span class="token number">1000</span>
    link/ether 08:00:27:ad:7a:5f brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">192.168</span>.56.11/24 brd <span class="token number">192.168</span>.56.255 scope global noprefixroute eth1
       valid_lft forever preferred_lft forever
    inet6 fe80::a00:27ff:fead:7a5f/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p>修改<code>redis.conf</code>文件的<code>bind</code>为<code>0.0.0.0</code>，即使用所有网卡的<code>ip</code>都可访问</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>bind 0.0.0.0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>我们可以<code>find</code>命令查看配置文件的安装位置</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost local<span class="token punctuation">]</span><span class="token comment"># find / -name &#39;redis.conf&#39;</span>
/etc/redis.conf
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><p>再次测试时就可以访问了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost local<span class="token punctuation">]</span><span class="token comment"># telnet 192.168.56.11 6379</span>
Trying <span class="token number">192.168</span>.56.11<span class="token punctuation">..</span>.
Connected to <span class="token number">192.168</span>.56.11.
Escape character is <span class="token string">&#39;^]&#39;</span><span class="token builtin class-name">.</span>
^<span class="token punctuation">]</span>
telnet<span class="token operator">&gt;</span> quit
Connection closed.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>此时再次执行<code>ps -ef | grep redis</code>就可以看到<code>ip</code>为<code>0.0.0.0</code>了，即使用所有网卡的<code>ip</code>都可访问</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost local<span class="token punctuation">]</span><span class="token comment"># ps -ef | grep redis</span>
redis     <span class="token number">5707</span>     <span class="token number">1</span>  <span class="token number">0</span> <span class="token number">13</span>:08 ?        00:00:02 /usr/bin/redis-server <span class="token number">0.0</span>.0.0:6379
root      <span class="token number">7647</span>  <span class="token number">1858</span>  <span class="token number">0</span> <span class="token number">13</span>:46 pts/0    00:00:00 <span class="token function">grep</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto redis
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></blockquote><h3 id="_6-访问虚拟机" tabindex="-1"><a class="header-anchor" href="#_6-访问虚拟机" aria-hidden="true">#</a> 6. 访问虚拟机</h3><p>我们使用主机可以访问的<code>ip</code>测试是否可以连接（在主机里执行）</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>C:<span class="token punctuation">\\</span>Users<span class="token punctuation">\\</span>无名氏<span class="token operator">&gt;</span>telnet <span class="token number">192.168</span>.56.11 <span class="token number">6379</span>
正在连接192.168.56.11<span class="token punctuation">..</span>.无法打开到主机的连接。 在端口 <span class="token number">6379</span>: 连接失败
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看待连接失败了，此时应该是防火墙拦截了</p><h3 id="_7-配置防火墙" tabindex="-1"><a class="header-anchor" href="#_7-配置防火墙" aria-hidden="true">#</a> 7. 配置防火墙</h3><blockquote><p>如果使用的是</p></blockquote><p>可以使用如下命令永久开放<code>6379</code>端口</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>firewall-cmd --add-port=6379/tcp --permanent
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>再使用<code>systemctl restart firewalld</code>命令重启防火墙</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>systemctl restart firewalld
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时在主机使用<code>telnet 192.168.56.11 6379</code>命令连接，出现下面这种样子就证明可以访问了</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230308213318348.png" alt="image-20230308213318348" tabindex="0" loading="lazy"><figcaption>image-20230308213318348</figcaption></figure><p>使用<code>redis</code>连接工具，可以看到连接<code>redis</code>成功了</p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230308213439414.png" alt="image-20230308213439414" tabindex="0" loading="lazy"><figcaption>image-20230308213439414</figcaption></figure><h2 id="_5-13、测试某个端口的连通性" tabindex="-1"><a class="header-anchor" href="#_5-13、测试某个端口的连通性" aria-hidden="true">#</a> 5.13、测试某个端口的连通性</h2><h3 id="_1、telnet法" tabindex="-1"><a class="header-anchor" href="#_1、telnet法" aria-hidden="true">#</a> <strong>1、telnet法</strong></h3><p>telnet为用户提供了在本地计算机上完成远程主机工作的能力，因此可以通过telnet来测试端口的连通性</p><blockquote><p>安装<code>telnet</code>可以使用如下命令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum install telnet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><p>具体用法格式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>telnet <span class="token function">ip</span> port
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>ip：是测试主机的ip地址</p><p>port：是端口，比如80</p></blockquote><p>连接成功会显示<code>Escape character is &#39;^]&#39;.</code>即使用<code>ctrl + ]</code>快捷键进入<code>telnet</code>命令行，再输入<code>quit</code>即可退出</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># telnet 127.0.0.1 6379</span>
Trying <span class="token number">127.0</span>.0.1<span class="token punctuation">..</span>.
Connected to <span class="token number">127.0</span>.0.1.
Escape character is <span class="token string">&#39;^]&#39;</span><span class="token builtin class-name">.</span>
^<span class="token punctuation">]</span>
telnet<span class="token operator">&gt;</span> quit
Connection closed.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>连接失败会显示<code>Connection refused</code>即连接拒绝</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># telnet 127.0.0.1 80</span>
Trying <span class="token number">127.0</span>.0.1<span class="token punctuation">..</span>.
telnet: connect to address <span class="token number">127.0</span>.0.1: Connection refused
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230308184147311.png" alt="image-20230308184147311" tabindex="0" loading="lazy"><figcaption>image-20230308184147311</figcaption></figure><p>安装<code>telnet</code>可以使用如下命令</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>yum install telnet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>windows</code>系统可以在 <code>控制面板</code> -&gt; <code>程序</code> -&gt; <code>程序和功能</code>里的<code>启用或关闭Windows功能</code>里开启<code>Telnet 客户端</code></p><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230308185617948.png" alt="image-20230308185617948" tabindex="0" loading="lazy"><figcaption>image-20230308185617948</figcaption></figure><h3 id="_2、ssh法" tabindex="-1"><a class="header-anchor" href="#_2、ssh法" aria-hidden="true">#</a> 2、ssh法</h3><p>SSH 是目前较可靠，专为远程登录会话和其他网络服务提供安全性的协议,在linux上可以通过ssh命令来测试端口的连通</p><blockquote><p>可以使用如下命令安装<code>ssh</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> openssh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><p>用法:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-v</span> <span class="token parameter variable">-p</span> port username@ip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>-v 调试模式(会打印日志).</p><p>-p 指定端口</p><p>username:远程主机的登录用户</p><p>ip:远程主机</p></blockquote><p>如果远程主机开通了相应的端口，会有<code>Connection established</code>已建立连接的提示。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ssh -v -p 6379 root@127.0.0.1</span>
OpenSSH_7.4p1, OpenSSL <span class="token number">1.0</span>.2k-fips  <span class="token number">26</span> Jan <span class="token number">2017</span>
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: /etc/ssh/ssh_config line <span class="token number">58</span>: Applying options <span class="token keyword">for</span> *
debug1: Connecting to <span class="token number">127.0</span>.0.1 <span class="token punctuation">[</span><span class="token number">127.0</span>.0.1<span class="token punctuation">]</span> port <span class="token number">6379</span>.
debug1: Connection established.
debug1: permanently_set_uid: <span class="token number">0</span>/0
debug1: SELinux support enabled
debug1: key_load_public: No such <span class="token function">file</span> or directory
debug1: identity <span class="token function">file</span> /root/.ssh/id_rsa <span class="token builtin class-name">type</span> <span class="token parameter variable">-1</span>
debug1: key_load_public: No such <span class="token function">file</span> or directory
debug1: identity <span class="token function">file</span> /root/.ssh/id_rsa-cert <span class="token builtin class-name">type</span> <span class="token parameter variable">-1</span>
debug1: key_load_public: No such <span class="token function">file</span> or directory
debug1: identity <span class="token function">file</span> /root/.ssh/id_dsa <span class="token builtin class-name">type</span> <span class="token parameter variable">-1</span>
debug1: key_load_public: No such <span class="token function">file</span> or directory
debug1: identity <span class="token function">file</span> /root/.ssh/id_dsa-cert <span class="token builtin class-name">type</span> <span class="token parameter variable">-1</span>
debug1: key_load_public: No such <span class="token function">file</span> or directory
debug1: identity <span class="token function">file</span> /root/.ssh/id_ecdsa <span class="token builtin class-name">type</span> <span class="token parameter variable">-1</span>
debug1: key_load_public: No such <span class="token function">file</span> or directory
debug1: identity <span class="token function">file</span> /root/.ssh/id_ecdsa-cert <span class="token builtin class-name">type</span> <span class="token parameter variable">-1</span>
debug1: key_load_public: No such <span class="token function">file</span> or directory
debug1: identity <span class="token function">file</span> /root/.ssh/id_ed25519 <span class="token builtin class-name">type</span> <span class="token parameter variable">-1</span>
debug1: key_load_public: No such <span class="token function">file</span> or directory
debug1: identity <span class="token function">file</span> /root/.ssh/id_ed25519-cert <span class="token builtin class-name">type</span> <span class="token parameter variable">-1</span>
debug1: Enabling compatibility mode <span class="token keyword">for</span> protocol <span class="token number">2.0</span>
debug1: Local version string SSH-2.0-OpenSSH_7.4
debug1: ssh_exchange_identification: <span class="token parameter variable">-ERR</span> unknown <span class="token builtin class-name">command</span> <span class="token string">&#39;SSH-2.0-OpenSSH_7.4&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果远程主机没有开通相应的端口，则没有<code>Connection established</code>的提示</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ssh -v -p 80 root@127.0.0.1</span>
OpenSSH_7.4p1, OpenSSL <span class="token number">1.0</span>.2k-fips  <span class="token number">26</span> Jan <span class="token number">2017</span>
debug1: Reading configuration data /etc/ssh/ssh_config
debug1: /etc/ssh/ssh_config line <span class="token number">58</span>: Applying options <span class="token keyword">for</span> *
debug1: Connecting to <span class="token number">127.0</span>.0.1 <span class="token punctuation">[</span><span class="token number">127.0</span>.0.1<span class="token punctuation">]</span> port <span class="token number">80</span>.
debug1: connect to address <span class="token number">127.0</span>.0.1 port <span class="token number">80</span>: Connection refused
ssh: connect to <span class="token function">host</span> <span class="token number">127.0</span>.0.1 port <span class="token number">80</span>: Connection refused
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230308185020519.png" alt="image-20230308185020519" tabindex="0" loading="lazy"><figcaption>image-20230308185020519</figcaption></figure><h3 id="_3、curl法" tabindex="-1"><a class="header-anchor" href="#_3、curl法" aria-hidden="true">#</a> 3、curl法</h3><p>curl是利用URL语法在命令行方式下工作的开源文件传输工具。也可以用来测试端口的连通性</p><blockquote><p>可以使用如下命令安装<code>curl</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token function">curl</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><p>具体用法:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>curl ip:port
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>ip：是测试主机的ip地址</p><p>port：是端口，比如80</p></blockquote><p>如果远程主机开通了相应的端口，都会输出信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># curl 127.0.0.1:6379</span>
<span class="token parameter variable">-ERR</span> wrong number of arguments <span class="token keyword">for</span> <span class="token string">&#39;get&#39;</span> <span class="token builtin class-name">command</span>
<span class="token parameter variable">-ERR</span> unknown <span class="token builtin class-name">command</span> <span class="token string">&#39;User-Agent:&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果没有开通相应的端口，则没有任何提示，需要CTRL+C断开（或显示连接拒绝）。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># curl 127.0.0.1:80</span>
curl: <span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span> Failed connect to <span class="token number">127.0</span>.0.1:80<span class="token punctuation">;</span> Connection refused
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230308184412194.png" alt="image-20230308184412194" tabindex="0" loading="lazy"><figcaption>image-20230308184412194</figcaption></figure><h3 id="_4、wget方法" tabindex="-1"><a class="header-anchor" href="#_4、wget方法" aria-hidden="true">#</a> 4、wget方法</h3><p>wget是一个从网络上自动下载文件的自由工具，支持通过HTTP、HTTPS、FTP三个最常见的TCP/IP协议下载，并可以使用HTTP代理。wget名称的由来是“World Wide Web”与“get”的结合</p><blockquote><p>可以使用如下命令安装<code>wget</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yum <span class="token function">install</span> <span class="token function">wget</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><p>它也可以用来测试端口的连通性具体用法:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> ip:port
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>ip：是测试主机的ip地址</p><p>port：是端口，比如80</p></blockquote><p>如果远程主机存在该端口会输出如下信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># wget 127.0.0.1:6379</span>
--2023-03-08 <span class="token number">10</span>:45:43--  http://127.0.0.1:6379/
Connecting to <span class="token number">127.0</span>.0.1:6379<span class="token punctuation">..</span>. connected.
HTTP request sent, awaiting response<span class="token punctuation">..</span>. <span class="token number">200</span> No headers, assuming HTTP/0.9
Length: unspecified
Saving to: ‘index.html.1’

    <span class="token punctuation">[</span> <span class="token operator">&lt;=</span><span class="token operator">&gt;</span>                                              <span class="token punctuation">]</span> <span class="token number">118</span>         --.-K/s   <span class="token keyword">in</span> 0s      

<span class="token number">2023</span>-03-08 <span class="token number">10</span>:45:43 <span class="token punctuation">(</span><span class="token number">22.3</span> MB/s<span class="token punctuation">)</span> - ‘index.html.1’ saved <span class="token punctuation">[</span><span class="token number">118</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果远程主机不存在端口则会一直提示连接主机（或显示连接拒绝）。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># wget 127.0.0.1:80</span>
--2023-03-08 <span class="token number">10</span>:45:36--  http://127.0.0.1/
Connecting to <span class="token number">127.0</span>.0.1:80<span class="token punctuation">..</span>. failed: Connection refused.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://gitlab.com/apzs/image/-/raw/master/image/image-20230308184831976.png" alt="image-20230308184831976" tabindex="0" loading="lazy"><figcaption>image-20230308184831976</figcaption></figure><h3 id="_5、nc命令" tabindex="-1"><a class="header-anchor" href="#_5、nc命令" aria-hidden="true">#</a> 5、<code>nc</code>命令</h3><p>nc（也称为netcat）是一种网络工具，可用于在网络上传输数据或连接不同的网络服务。</p><p><strong>格式</strong></p><p>nc命令的一般格式为：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">nc</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token function">host</span> port
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，host表示要连接的远程主机名或IP地址，port表示要连接的远程端口号。options是可选参数，用于指定nc命令的不同选项，可以根据具体的需求选择使用。</p><p>除了上述基本格式，nc命令还有一些其他的命令格式，用于执行不同的任务，例如：</p><ul><li>监听本地端口：<code>nc -l [options] [port]</code></li><li>发送文件到远程主机：<code>nc [options] host port &lt; filename</code></li><li>接收远程主机发送的文件：<code>nc -l [options] [port] &gt; filename</code></li></ul><p>这些命令格式的具体用法和参数选项也可以通过<code>man nc</code>命令来查看。</p><p><strong>参数说明</strong></p><p>以下是nc命令的一些常用参数和其含义：</p><ul><li><p>-v：启用详细模式，显示更多的调试信息</p></li><li><p>-u：使用UDP协议而不是默认的TCP协议</p></li><li><p>-l：监听模式，用于等待客户端连接</p></li><li><p>-p port：指定本地端口</p></li><li><p>-n：禁用DNS解析，使用IP地址进行连接</p></li><li><p>-w timeout：设置超时时间</p></li><li><p>-z：使用扫描模式，不发送任何数据</p></li><li><p>-s source_ip：指定源IP地址</p></li><li><p>-c：关闭连接（在发送完数据后立即关闭连接）</p></li><li><p>-e command：在建立连接后执行命令（仅在使用监听模式时有效）</p></li></ul><p>这些参数可以组合使用，以实现各种网络传输和连接的需求。要查看完整的nc命令文档和更多用法示例，可以在终端中输入<code>man nc</code>命令。</p><p><strong>常用命令</strong></p><ol><li><code>nc -l &lt;port&gt;</code>: 监听指定的端口，等待客户端连接。</li><li><code>nc &lt;host&gt; &lt;port&gt;</code>: 连接指定的主机和端口。</li><li><code>nc -v &lt;host&gt; &lt;port&gt;</code>: 显示详细的输出信息，包括连接状态、传输数据等。</li><li><code>nc -z &lt;host&gt; &lt;port&gt;</code>: 尝试连接指定的主机和端口，但不发送任何数据。</li><li><code>nc -u &lt;host&gt; &lt;port&gt;</code>: 使用UDP协议连接指定的主机和端口。</li><li><code>nc -w &lt;timeout&gt; &lt;host&gt; &lt;port&gt;</code>: 设置连接的超时时间，单位为秒。</li><li><code>nc -n</code>: 不使用DNS解析，直接使用IP地址连接。</li><li><code>nc -c</code>: 允许多个客户端连接到服务端。</li><li><code>nc -e &lt;command&gt;</code>: 连接成功后执行指定的命令。</li><li><code>nc -k</code>: 在客户端和服务器之间保持连接，直到接收到中断信号。</li></ol><p><strong>示例</strong></p><ol><li><p>建立TCP连接：<code>nc -v host port</code></p><p>例如：<code>nc -v 192.168.1.1 80</code></p></li><li><p>建立UDP连接：<code>nc -u -v host port</code></p><p>例如：<code>nc -u -v 192.168.1.1 53</code></p></li><li><p>监听TCP端口：<code>nc -l -v port</code></p><p>例如：<code>nc -l -v 8080</code></p></li><li><p>监听UDP端口：<code>nc -u -l -v port</code></p><p>例如：<code>nc -u -l -v 53</code></p></li><li><p>文件传输：将文件发送到另一台计算机</p><p>发送端：<code>nc -v host port &lt; file</code></p><p>接收端：<code>nc -l -v port &gt; file</code></p></li><li><p>使用nc进行端口扫描：<code>nc -vz host start_port-end_port</code></p><p>例如：<code>nc -vz 192.168.1.1 1-1000</code></p></li><li><p>扫描多个主机的某一端口：<code>nc -zv target1.com target2.com target3.com 80</code></p></li><li><p>扫描多个主机的多个端口：<code>nc -zv target1.com 80 443 target2.com 22 target3.com 8080</code></p></li></ol><h3 id="_6、nmap命令" tabindex="-1"><a class="header-anchor" href="#_6、nmap命令" aria-hidden="true">#</a> 6、<code>nmap</code>命令</h3><p>nmap是一款用于网络探测和安全评估的常用工具，以下是nmap命令的基本格式：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token punctuation">[</span>扫描类型选项<span class="token punctuation">]</span> <span class="token punctuation">[</span>扫描目标选项<span class="token punctuation">]</span> <span class="token punctuation">[</span>其他选项<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中，扫描类型选项指定要执行的扫描类型，如TCP连接扫描、UDP扫描、操作系统检测、服务版本检测等。常用的扫描类型选项包括：</p><ul><li><code>-sS</code>：TCP SYN扫描，也称为半开放扫描。</li><li><code>-sT</code>：TCP连接扫描，也称为全连接扫描。</li><li><code>-sU</code>：UDP扫描，用于发现UDP端口上运行的服务。</li><li><code>-O</code>：操作系统检测，尝试识别目标主机的操作系统类型和版本。</li><li><code>-sV</code>：服务版本检测，尝试确定目标主机上运行的服务的类型和版本。</li></ul><p>扫描目标选项指定要扫描的目标主机、IP地址、域名或网段。常用的扫描目标选项包括：</p><ul><li>主机名或IP地址：指定单个主机进行扫描。</li><li>IP地址范围：指定要扫描的一段连续的IP地址。</li><li>域名：指定要扫描的域名。</li><li>网络号/掩码：指定要扫描的一个网络段。</li></ul><p>其他选项包括一些控制扫描行为的选项，如扫描速度、输出格式、是否进行DNS解析等。常用的其他选项包括：</p><ul><li><code>-T&lt;0-5&gt;</code>：指定扫描速度，数字越大扫描速度越快。</li><li><code>-oN &lt;file&gt;</code>：将扫描结果输出到指定的文件中。</li><li><code>-v</code>：显示详细的扫描结果。</li><li><code>-Pn</code>：跳过主机的Ping检测，直接进行端口扫描。</li><li><code>-sC</code>：使用默认脚本扫描，执行常规的安全检查。</li></ul><p><strong>常用命令</strong></p><p>以下是nmap的一些常用命令及其示例：</p><ul><li>基本TCP端口扫描：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap target.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令将扫描target.com主机的所有TCP端口，显示所有开放的端口。</p><ul><li>扫描单个端口：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">-p</span> <span class="token number">22</span> target.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令将扫描target.com主机的22号端口，如果该端口开放，则显示“open”状态。</p><ul><li>扫描多个端口：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">-p</span> <span class="token number">22,80</span>,443 target.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令将扫描target.com主机的22、80、443号端口，如果这些端口开放，则显示“open”状态。</p><ul><li>扫描指定端口范围：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">-p</span> <span class="token number">1</span>-100 target.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令将扫描target.com主机的1到100号端口，如果这些端口开放，则显示“open”状态。</p><ul><li>指定扫描速度：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">-T4</span> target.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令将以比默认速度更快的速度扫描target.com主机的所有端口。</p><ul><li>扫描UDP端口：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">-sU</span> target.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令将扫描target.com主机上所有的UDP端口，以确定是否有开放的UDP端口。</p><ul><li>操作系统检测：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">-O</span> target.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令将尝试识别target.com主机的操作系统类型和版本。</p><ul><li>服务版本检测：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">-sV</span> target.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令将尝试确定target.com主机上运行的服务的类型和版本。</p><ul><li>使用默认脚本扫描：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">-sC</span> target.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令将执行一些常见的安全检查，使用默认的脚本。</p><ul><li>执行自定义脚本：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">--script</span><span class="token operator">=</span>my_script.nse target.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令将执行自定义的脚本my_script.nse，用于执行特定的安全检查。</p><ul><li>扫描多个主机，使用空格或逗号分隔。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">-H</span> <span class="token number">192.168</span>.1.1,192.168.1.2,192.168.1.3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果您想在扫描中使用其他选项，可以在命令行中添加它们。例如，要扫描TCP端口1到1024之间的端口，可以运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">-H</span> <span class="token number">192.168</span>.1.1,192.168.1.2,192.168.1.3 <span class="token parameter variable">-p</span> <span class="token number">1</span>-1024
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>使用文件的方式扫描多个主机</li></ul><p>要使用nmap扫描多个主机，您可以指定一个包含主机地址的文本文件作为nmap的输入。</p><p>以下是一些步骤来执行此操作：</p><ol><li>创建一个文本文件，其中包含要扫描的主机地址。每行一个地址。例如：</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>192.168.1.1
192.168.1.2
192.168.1.3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>在命令行中运行nmap，指定要扫描的主机文件。例如：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nmap <span class="token parameter variable">-iL</span> hosts.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这将扫描hosts.txt文件中列出的所有主机</p><h2 id="_5-6-查看已使用的端口" tabindex="-1"><a class="header-anchor" href="#_5-6-查看已使用的端口" aria-hidden="true">#</a> 5.6 查看已使用的端口</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>netstat -tulnp
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,276);function m(v,b){const n=i("ExternalLinkIcon");return t(),l("div",null,[d,a("p",null,[a("a",r,[c("linux下开启防火墙，添加允许通过的端口"),o(n)])]),u])}const h=e(p,[["render",m],["__file","5.linux.html.vue"]]);export{h as default};
