const e=JSON.parse('{"key":"v-3ceb10ec","path":"/front-advance/react/05%20%E3%80%90redux%E3%80%91.html","title":"","lang":"zh-CN","frontmatter":{"description":"17 【redux】 引言 我们现在开始学习了 Redux ，在我们之前写的案例当中，我们对于状态的管理，都是通过 state 来实现的，比如，我们在给兄弟组件传递数据时，需要先将数据传递给父组件，再由父组件转发 给它的子组件。这个过程十分的复杂，后来我们又学习了消息的发布订阅，我们通过 pubsub 库，实现了消息的转发，直接将数据发布，由兄弟组件订阅，实现了兄弟组件间的数据传递。但是，随着我们的需求不断地提升，我们需要进行更加复杂的数据传递，更多层次的数据交换。因此我们为何不可以将所有的数据交给一个中转站，这个中转站独立于所有的组件之外，由这个中转站来进行数据的分发，这样不管哪个组件需要数据，我们都可以很轻易的给他派发。","head":[["meta",{"property":"og:url","content":"https://apzs.github.io/front-advance/react/05%20%E3%80%90redux%E3%80%91.html"}],["meta",{"property":"og:site_name","content":"apzs"}],["meta",{"property":"og:description","content":"17 【redux】 引言 我们现在开始学习了 Redux ，在我们之前写的案例当中，我们对于状态的管理，都是通过 state 来实现的，比如，我们在给兄弟组件传递数据时，需要先将数据传递给父组件，再由父组件转发 给它的子组件。这个过程十分的复杂，后来我们又学习了消息的发布订阅，我们通过 pubsub 库，实现了消息的转发，直接将数据发布，由兄弟组件订阅，实现了兄弟组件间的数据传递。但是，随着我们的需求不断地提升，我们需要进行更加复杂的数据传递，更多层次的数据交换。因此我们为何不可以将所有的数据交给一个中转站，这个中转站独立于所有的组件之外，由这个中转站来进行数据的分发，这样不管哪个组件需要数据，我们都可以很轻易的给他派发。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-10T13:06:08.000Z"}],["meta",{"property":"article:author","content":"apzs"}],["meta",{"property":"article:modified_time","content":"2024-03-10T13:06:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-10T13:06:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"apzs\\",\\"url\\":\\"https://apzs.eu.org\\"}]}"]]},"headers":[{"level":2,"title":"17 【redux】","slug":"_17-【redux】","link":"#_17-【redux】","children":[{"level":3,"title":"引言","slug":"引言","link":"#引言","children":[]},{"level":3,"title":"1.简介","slug":"_1-简介","link":"#_1-简介","children":[]},{"level":3,"title":"2.为什么是Redux？","slug":"_2-为什么是redux","link":"#_2-为什么是redux","children":[]},{"level":3,"title":"3.什么情况使用 Redux","slug":"_3-什么情况使用-redux","link":"#_3-什么情况使用-redux","children":[]},{"level":3,"title":"4.Redux 的工作流程","slug":"_4-redux-的工作流程","link":"#_4-redux-的工作流程","children":[]},{"level":3,"title":"5.简单使用","slug":"_5-简单使用","link":"#_5-简单使用","children":[]},{"level":3,"title":"6.Redux API","slug":"_6-redux-api","link":"#_6-redux-api","children":[]},{"level":3,"title":"7.React-Redux 基本使用","slug":"_7-react-redux-基本使用","link":"#_7-react-redux-基本使用","children":[]},{"level":3,"title":"8.多个Reducer","slug":"_8-多个reducer","link":"#_8-多个reducer","children":[]},{"level":3,"title":"10.总结","slug":"_10-总结","link":"#_10-总结","children":[]}]},{"level":2,"title":"18 【Redux Toolkit】","slug":"_18-【redux-toolkit】","link":"#_18-【redux-toolkit】","children":[{"level":3,"title":"1.Redux Toolkit 概览","slug":"_1-redux-toolkit-概览","link":"#_1-redux-toolkit-概览","children":[]},{"level":3,"title":"2.安装","slug":"_2-安装","link":"#_2-安装","children":[]},{"level":3,"title":"3.基础开发流程","slug":"_3-基础开发流程","link":"#_3-基础开发流程","children":[]},{"level":3,"title":"4.补充解析上面计数器案例","slug":"_4-补充解析上面计数器案例","link":"#_4-补充解析上面计数器案例","children":[]},{"level":3,"title":"5.传递参数","slug":"_5-传递参数","link":"#_5-传递参数","children":[]},{"level":3,"title":"6.异步逻辑与数据请求","slug":"_6-异步逻辑与数据请求","link":"#_6-异步逻辑与数据请求","children":[]},{"level":3,"title":"7.数据持久化","slug":"_7-数据持久化","link":"#_7-数据持久化","children":[]}]}],"git":{"createdTime":1708674856000,"updatedTime":1710075968000,"contributors":[{"name":"zhaoshuo","email":"apzs@foxmaill.com","commits":3}]},"readingTime":{"minutes":57.22,"words":17165},"filePathRelative":"front-advance/react/05 【redux】.md","localizedDate":"2024年2月23日","excerpt":"<h2> 17 【redux】</h2>\\n<h3> 引言</h3>\\n<p>我们现在开始学习了 Redux ，在我们之前写的案例当中，我们对于状态的管理，都是通过 state 来实现的，比如，我们在给兄弟组件传递数据时，需要先将数据传递给父组件，再由父组件转发 给它的子组件。这个过程十分的复杂，后来我们又学习了<strong>消息的发布订阅</strong>，我们通过 <strong>pubsub</strong> 库，实现了消息的转发，直接将数据发布，由兄弟组件订阅，实现了兄弟组件间的数据传递。但是，随着我们的需求不断地提升，我们需要进行更加复杂的数据传递，更多层次的数据交换。<strong>因此我们为何不可以将所有的数据交给一个中转站，这个中转站独立于所有的组件之外，由这个中转站来进行数据的分发，这样不管哪个组件需要数据，我们都可以很轻易的给他派发。</strong></p>","autoDesc":true}');export{e as data};
