const e=JSON.parse('{"key":"v-50772087","path":"/front-advance/react/06%20%E3%80%90hooks%E3%80%91.html","title":"","lang":"zh-CN","frontmatter":{"description":"八、react-Hook （上） Hook 是 React 16.8 的新增特性。它可以让你在不编写 class 的情况下使用 state 以及其他的 React 特性。 1.准备 1.1 什么是 Hook Hooks 译为钩子，Hooks 就是在函数组件内，负责钩进外部功能的函数。 React 提供了一些常用钩子，React 也支持自定义钩子，这些钩子都是用于为函数引入外部功能。 当我们在组件中，需要引入外部功能时，就可以使用 React 提供的钩子，或者自定义钩子。","head":[["meta",{"property":"og:url","content":"https://apzs.github.io/front-advance/react/06%20%E3%80%90hooks%E3%80%91.html"}],["meta",{"property":"og:site_name","content":"apzs"}],["meta",{"property":"og:description","content":"八、react-Hook （上） Hook 是 React 16.8 的新增特性。它可以让你在不编写 class 的情况下使用 state 以及其他的 React 特性。 1.准备 1.1 什么是 Hook Hooks 译为钩子，Hooks 就是在函数组件内，负责钩进外部功能的函数。 React 提供了一些常用钩子，React 也支持自定义钩子，这些钩子都是用于为函数引入外部功能。 当我们在组件中，需要引入外部功能时，就可以使用 React 提供的钩子，或者自定义钩子。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-10T13:06:08.000Z"}],["meta",{"property":"article:author","content":"apzs"}],["meta",{"property":"article:modified_time","content":"2024-03-10T13:06:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-10T13:06:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"apzs\\",\\"url\\":\\"https://apzs.eu.org\\"}]}"]]},"headers":[{"level":2,"title":"八、react-Hook （上）","slug":"八、react-hook-上","link":"#八、react-hook-上","children":[{"level":3,"title":"1.准备","slug":"_1-准备","link":"#_1-准备","children":[]},{"level":3,"title":"2.使用 State Hook","slug":"_2-使用-state-hook","link":"#_2-使用-state-hook","children":[]},{"level":3,"title":"3.使用 Effect Hook","slug":"_3-使用-effect-hook","link":"#_3-使用-effect-hook","children":[]},{"level":3,"title":"4.useRef","slug":"_4-useref","link":"#_4-useref","children":[]},{"level":3,"title":"完整代码","slug":"完整代码","link":"#完整代码","children":[]},{"level":3,"title":"5 React.StrictMode 严格模式","slug":"_5-react-strictmode-严格模式","link":"#_5-react-strictmode-严格模式","children":[]},{"level":3,"title":"5.useReducer","slug":"_5-usereducer","link":"#_5-usereducer","children":[]}]},{"level":2,"title":"15【react-Hook （下）】","slug":"_15【react-hook-下-】","link":"#_15【react-hook-下-】","children":[{"level":3,"title":"1.React.memo","slug":"_1-react-memo","link":"#_1-react-memo","children":[]},{"level":3,"title":"2.useCallback","slug":"_2-usecallback","link":"#_2-usecallback","children":[]},{"level":3,"title":"3.useMemo","slug":"_3-usememo","link":"#_3-usememo","children":[]},{"level":3,"title":"4.React.forwardRef","slug":"_4-react-forwardref","link":"#_4-react-forwardref","children":[]},{"level":3,"title":"5.useImperativeHandle","slug":"_5-useimperativehandle","link":"#_5-useimperativehandle","children":[]}]}],"git":{"createdTime":1708674856000,"updatedTime":1710075968000,"contributors":[{"name":"zhaoshuo","email":"apzs@foxmaill.com","commits":3}]},"readingTime":{"minutes":32.44,"words":9731},"filePathRelative":"front-advance/react/06 【hooks】.md","localizedDate":"2024年2月23日","excerpt":"<h2> 八、react-Hook （上）</h2>\\n<p><em>Hook</em> 是 React 16.8 的新增特性。它可以让你在不编写 class 的情况下使用 state 以及其他的 React 特性。</p>\\n<h3> 1.准备</h3>\\n<h4> 1.1  什么是 Hook</h4>\\n<p>Hooks 译为钩子，Hooks 就是在函数组件内，负责钩进外部功能的函数。</p>\\n<p>React 提供了一些常用钩子，React 也支持自定义钩子，这些钩子都是用于为函数引入外部功能。</p>\\n<p>当我们在组件中，需要引入外部功能时，就可以使用 React 提供的钩子，或者自定义钩子。</p>","autoDesc":true}');export{e as data};
