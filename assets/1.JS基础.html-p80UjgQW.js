const l=JSON.parse('{"key":"v-a1659354","path":"/front-base/js/1.JS%E5%9F%BA%E7%A1%80.html","title":"js基础知识","lang":"zh-CN","frontmatter":{"title":"js基础知识","icon":"gears","order":1,"category":["前端"],"tag":["js","前端"],"description":"JavaScript 基础 一、初识JS 1. JavaScript历史 布兰登艾奇（Brendan Eich， 1961年～）。 神奇的大哥在1995年利用10天完成JavaScript设计。 网景公司最初命名为LiveScript ，后来在与Sun合作之后将其改名为JavaScript. 2. JavaScript是什么 lavaScript是世界上最流行的语言之一，是一种运行在客户端的脚本语言（Script是脚本的意思）脚本语言：不需要编译，运行过程中由js解释器（js引擎）逐行来进行解释并执行。 现在也可以基于Nodejs技术进行服务器端编程","head":[["meta",{"property":"og:url","content":"https://apzs.github.io/front-base/js/1.JS%E5%9F%BA%E7%A1%80.html"}],["meta",{"property":"og:site_name","content":"apzs"}],["meta",{"property":"og:title","content":"js基础知识"}],["meta",{"property":"og:description","content":"JavaScript 基础 一、初识JS 1. JavaScript历史 布兰登艾奇（Brendan Eich， 1961年～）。 神奇的大哥在1995年利用10天完成JavaScript设计。 网景公司最初命名为LiveScript ，后来在与Sun合作之后将其改名为JavaScript. 2. JavaScript是什么 lavaScript是世界上最流行的语言之一，是一种运行在客户端的脚本语言（Script是脚本的意思）脚本语言：不需要编译，运行过程中由js解释器（js引擎）逐行来进行解释并执行。 现在也可以基于Nodejs技术进行服务器端编程"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-10T13:06:08.000Z"}],["meta",{"property":"article:author","content":"apzs"}],["meta",{"property":"article:tag","content":"js"}],["meta",{"property":"article:tag","content":"前端"}],["meta",{"property":"article:modified_time","content":"2024-03-10T13:06:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"js基础知识\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-10T13:06:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"apzs\\",\\"url\\":\\"https://apzs.eu.org\\"}]}"]]},"headers":[{"level":2,"title":"一、初识JS","slug":"一、初识js","link":"#一、初识js","children":[{"level":3,"title":"1. JavaScript历史","slug":"_1-javascript历史","link":"#_1-javascript历史","children":[]},{"level":3,"title":"2. JavaScript是什么","slug":"_2-javascript是什么","link":"#_2-javascript是什么","children":[]},{"level":3,"title":"3. JavaScript的作","slug":"_3-javascript的作","link":"#_3-javascript的作","children":[]},{"level":3,"title":"4. 浏览器执行JS简介","slug":"_4-浏览器执行js简介","link":"#_4-浏览器执行js简介","children":[]},{"level":3,"title":"5. JS三大组成","slug":"_5-js三大组成","link":"#_5-js三大组成","children":[]},{"level":3,"title":"6. JS 初体验","slug":"_6-js-初体验","link":"#_6-js-初体验","children":[]},{"level":3,"title":"7. JS 注释","slug":"_7-js-注释","link":"#_7-js-注释","children":[]},{"level":3,"title":"8. JS输入输出语句","slug":"_8-js输入输出语句","link":"#_8-js输入输出语句","children":[]}]},{"level":2,"title":"二、变量","slug":"二、变量","link":"#二、变量","children":[{"level":3,"title":"1. 变量的实质","slug":"_1-变量的实质","link":"#_1-变量的实质","children":[]},{"level":3,"title":"2. 变量的声明","slug":"_2-变量的声明","link":"#_2-变量的声明","children":[]},{"level":3,"title":"3. 变量的初始化","slug":"_3-变量的初始化","link":"#_3-变量的初始化","children":[]},{"level":3,"title":"4. 更新赋值","slug":"_4-更新赋值","link":"#_4-更新赋值","children":[]},{"level":3,"title":"5. 同时声明多个变量","slug":"_5-同时声明多个变量","link":"#_5-同时声明多个变量","children":[]},{"level":3,"title":"6. 声明不赋值","slug":"_6-声明不赋值","link":"#_6-声明不赋值","children":[]},{"level":3,"title":"7. 直接输出","slug":"_7-直接输出","link":"#_7-直接输出","children":[]},{"level":3,"title":"8. 不声明直接赋值","slug":"_8-不声明直接赋值","link":"#_8-不声明直接赋值","children":[]},{"level":3,"title":"9. 命名规范","slug":"_9-命名规范","link":"#_9-命名规范","children":[]}]},{"level":2,"title":"三、数据类型","slug":"三、数据类型","link":"#三、数据类型","children":[{"level":3,"title":"1. 数据类型概述","slug":"_1-数据类型概述","link":"#_1-数据类型概述","children":[]},{"level":3,"title":"2. 简单数据类型","slug":"_2-简单数据类型","link":"#_2-简单数据类型","children":[]},{"level":3,"title":"3. 获取变量数据类型","slug":"_3-获取变量数据类型","link":"#_3-获取变量数据类型","children":[]},{"level":3,"title":"4. 数据类型转换","slug":"_4-数据类型转换","link":"#_4-数据类型转换","children":[]},{"level":3,"title":"5. 标识符、关键字、保留字","slug":"_5-标识符、关键字、保留字","link":"#_5-标识符、关键字、保留字","children":[]},{"level":3,"title":"6. 拓展：8 种基本数据类型","slug":"_6-拓展-8-种基本数据类型","link":"#_6-拓展-8-种基本数据类型","children":[]}]},{"level":2,"title":"四、JS 运算符","slug":"四、js-运算符","link":"#四、js-运算符","children":[{"level":3,"title":"1. 算数运算符","slug":"_1-算数运算符","link":"#_1-算数运算符","children":[]},{"level":3,"title":"2. 递增递减运算符","slug":"_2-递增递减运算符","link":"#_2-递增递减运算符","children":[]},{"level":3,"title":"3. 比较运算符","slug":"_3-比较运算符","link":"#_3-比较运算符","children":[]},{"level":3,"title":"4. 逻辑运算符","slug":"_4-逻辑运算符","link":"#_4-逻辑运算符","children":[]},{"level":3,"title":"5. 赋值运算符","slug":"_5-赋值运算符","link":"#_5-赋值运算符","children":[]},{"level":3,"title":"6. 拓展：JS特殊运算符","slug":"_6-拓展-js特殊运算符","link":"#_6-拓展-js特殊运算符","children":[]}]},{"level":2,"title":"五、流程控制","slug":"五、流程控制","link":"#五、流程控制","children":[{"level":3,"title":"1. 顺序结构","slug":"_1-顺序结构","link":"#_1-顺序结构","children":[]},{"level":3,"title":"2. 选择结构","slug":"_2-选择结构","link":"#_2-选择结构","children":[]},{"level":3,"title":"3. 循环","slug":"_3-循环","link":"#_3-循环","children":[]},{"level":3,"title":"4. chrome 代码调试","slug":"_4-chrome-代码调试","link":"#_4-chrome-代码调试","children":[]}]},{"level":2,"title":"六、函数","slug":"六、函数","link":"#六、函数","children":[{"level":3,"title":"1. 概述","slug":"_1-概述","link":"#_1-概述","children":[]},{"level":3,"title":"2. 函数的声明与调用","slug":"_2-函数的声明与调用","link":"#_2-函数的声明与调用","children":[]},{"level":3,"title":"3. 形参与实参","slug":"_3-形参与实参","link":"#_3-形参与实参","children":[]},{"level":3,"title":"4. 实参个数与形参个数不匹配的情况","slug":"_4-实参个数与形参个数不匹配的情况","link":"#_4-实参个数与形参个数不匹配的情况","children":[]},{"level":3,"title":"5. 声明函数的三种方法","slug":"_5-声明函数的三种方法","link":"#_5-声明函数的三种方法","children":[]},{"level":3,"title":"6. 注意","slug":"_6-注意","link":"#_6-注意","children":[]},{"level":3,"title":"7. arguments 的使用","slug":"_7-arguments-的使用","link":"#_7-arguments-的使用","children":[]}]},{"level":2,"title":"七、数组","slug":"七、数组","link":"#七、数组","children":[{"level":3,"title":"1. 基本概念","slug":"_1-基本概念","link":"#_1-基本概念","children":[]},{"level":3,"title":"2. 创建数组","slug":"_2-创建数组","link":"#_2-创建数组","children":[]},{"level":3,"title":"3. 基本操作","slug":"_3-基本操作","link":"#_3-基本操作","children":[]},{"level":3,"title":"4. 检测一个值是否为数组","slug":"_4-检测一个值是否为数组","link":"#_4-检测一个值是否为数组","children":[]},{"level":3,"title":"5. 添加删除数组元素的方法","slug":"_5-添加删除数组元素的方法","link":"#_5-添加删除数组元素的方法","children":[]},{"level":3,"title":"6. 数组排序","slug":"_6-数组排序","link":"#_6-数组排序","children":[]},{"level":3,"title":"7. 数组索引方法","slug":"_7-数组索引方法","link":"#_7-数组索引方法","children":[]},{"level":3,"title":"8. 数组去重","slug":"_8-数组去重","link":"#_8-数组去重","children":[]},{"level":3,"title":"9. 数组与字符串互转","slug":"_9-数组与字符串互转","link":"#_9-数组与字符串互转","children":[]},{"level":3,"title":"10. 数组方法 splice","slug":"_10-数组方法-splice","link":"#_10-数组方法-splice","children":[]}]},{"level":2,"title":"八、作用域","slug":"八、作用域","link":"#八、作用域","children":[{"level":3,"title":"1. 作用域概述","slug":"_1-作用域概述","link":"#_1-作用域概述","children":[]},{"level":3,"title":"2. 全局变量","slug":"_2-全局变量","link":"#_2-全局变量","children":[]},{"level":3,"title":"3. 局部变量","slug":"_3-局部变量","link":"#_3-局部变量","children":[]},{"level":3,"title":"4. 全局变量与局部变量区别","slug":"_4-全局变量与局部变量区别","link":"#_4-全局变量与局部变量区别","children":[]},{"level":3,"title":"5. var、let、const","slug":"_5-var、let、const","link":"#_5-var、let、const","children":[]},{"level":3,"title":"6. 作用域链","slug":"_6-作用域链","link":"#_6-作用域链","children":[]}]},{"level":2,"title":"九、声明提升","slug":"九、声明提升","link":"#九、声明提升","children":[]},{"level":2,"title":"十、对象","slug":"十、对象","link":"#十、对象","children":[{"level":3,"title":"1. 对象","slug":"_1-对象","link":"#_1-对象","children":[]},{"level":3,"title":"2. 创建对象","slug":"_2-创建对象","link":"#_2-创建对象","children":[]},{"level":3,"title":"3. 遍历对象","slug":"_3-遍历对象","link":"#_3-遍历对象","children":[]}]},{"level":2,"title":"十一、内置对象","slug":"十一、内置对象","link":"#十一、内置对象","children":[{"level":3,"title":"1. 内置对象","slug":"_1-内置对象","link":"#_1-内置对象","children":[]},{"level":3,"title":"2. 数学对象 Math","slug":"_2-数学对象-math","link":"#_2-数学对象-math","children":[]},{"level":3,"title":"3. 日期对象 Date","slug":"_3-日期对象-date","link":"#_3-日期对象-date","children":[]},{"level":3,"title":"4. 字符串对象","slug":"_4-字符串对象","link":"#_4-字符串对象","children":[]},{"level":3,"title":"5、JSON","slug":"_5、json","link":"#_5、json","children":[]}]},{"level":2,"title":"十二、复杂类型","slug":"十二、复杂类型","link":"#十二、复杂类型","children":[{"level":3,"title":"1. 简单类型与复杂类型","slug":"_1-简单类型与复杂类型","link":"#_1-简单类型与复杂类型","children":[]},{"level":3,"title":"2. 堆和栈","slug":"_2-堆和栈","link":"#_2-堆和栈","children":[]},{"level":3,"title":"3. 简单数据类型传参","slug":"_3-简单数据类型传参","link":"#_3-简单数据类型传参","children":[]},{"level":3,"title":"4. 复杂数据类型传参","slug":"_4-复杂数据类型传参","link":"#_4-复杂数据类型传参","children":[]}]},{"level":2,"title":"十三、异常处理","slug":"十三、异常处理","link":"#十三、异常处理","children":[{"level":3,"title":"1. try/catch/finally","slug":"_1-try-catch-finally","link":"#_1-try-catch-finally","children":[]},{"level":3,"title":"2. Error","slug":"_2-error","link":"#_2-error","children":[]},{"level":3,"title":"3. throw","slug":"_3-throw","link":"#_3-throw","children":[]},{"level":3,"title":"4. 关于嵌套的 try 块","slug":"_4-关于嵌套的-try-块","link":"#_4-关于嵌套的-try-块","children":[]}]}],"git":{"createdTime":1708674856000,"updatedTime":1710075968000,"contributors":[{"name":"zhaoshuo","email":"apzs@foxmaill.com","commits":3}]},"readingTime":{"minutes":39.94,"words":11981},"filePathRelative":"front-base/js/1.JS基础.md","localizedDate":"2024年2月23日","excerpt":"<h1> JavaScript 基础</h1>\\n<h2> 一、初识JS</h2>\\n<h3> 1. JavaScript历史</h3>\\n<p>布兰登艾奇（Brendan Eich， 1961年～）。 神奇的大哥在1995年利用10天完成JavaScript设计。 网景公司最初命名为LiveScript ，后来在与Sun合作之后将其改名为JavaScript.</p>\\n<h3> 2. JavaScript是什么</h3>\\n<p>lavaScript是世界上最流行的语言之一，是一种运行在客户端的脚本语言（Script是脚本的意思）脚本语言：不需要编译，运行过程中由js解释器（js引擎）逐行来进行解释并执行。 现在也可以基于Nodejs技术进行服务器端编程</p>","autoDesc":true}');export{l as data};
