const l=JSON.parse('{"key":"v-9dc9f322","path":"/back-advance/5.SSM/SSM%E7%AC%94%E8%AE%B0.html","title":"1.Spring的IOC和依赖注入(DI)","lang":"zh-CN","frontmatter":{"description":"1.Spring的IOC和依赖注入(DI) 官方文档：https://docs.spring.io/spring-framework/docs/current/reference/html/core.html 1.1. Spring简介 Spring是分层的 Java SE/EE应用 full-stack 轻量级开源框架，以 IoC（Inverse Of Control：反转控制）和 AOP（Aspect Oriented Programming：面向切面编程）为内核。 提供了展现层 SpringMVC 和持久层 Spring JDBCTemplate 以及业务层事务管理等众多的企业级应用技术，还能整合开源世界众多著名的第三方框架和类库，逐渐成为使用最多的Java EE 企业应用开源框架。","head":[["meta",{"property":"og:url","content":"https://apzs.github.io/back-advance/5.SSM/SSM%E7%AC%94%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"apzs"}],["meta",{"property":"og:title","content":"1.Spring的IOC和依赖注入(DI)"}],["meta",{"property":"og:description","content":"1.Spring的IOC和依赖注入(DI) 官方文档：https://docs.spring.io/spring-framework/docs/current/reference/html/core.html 1.1. Spring简介 Spring是分层的 Java SE/EE应用 full-stack 轻量级开源框架，以 IoC（Inverse Of Control：反转控制）和 AOP（Aspect Oriented Programming：面向切面编程）为内核。 提供了展现层 SpringMVC 和持久层 Spring JDBCTemplate 以及业务层事务管理等众多的企业级应用技术，还能整合开源世界众多著名的第三方框架和类库，逐渐成为使用最多的Java EE 企业应用开源框架。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-05T06:05:15.000Z"}],["meta",{"property":"article:author","content":"apzs"}],["meta",{"property":"article:modified_time","content":"2024-03-05T06:05:15.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"1.Spring的IOC和依赖注入(DI)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-05T06:05:15.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"apzs\\",\\"url\\":\\"https://apzs.eu.org\\"}]}"]]},"headers":[{"level":2,"title":"1.1. Spring简介","slug":"_1-1-spring简介","link":"#_1-1-spring简介","children":[]},{"level":2,"title":"1.2. Spring快速入门","slug":"_1-2-spring快速入门","link":"#_1-2-spring快速入门","children":[]},{"level":2,"title":"1.3. Spring配置文件","slug":"_1-3-spring配置文件","link":"#_1-3-spring配置文件","children":[{"level":3,"title":"1.3.1 Bean标签基本配置","slug":"_1-3-1-bean标签基本配置","link":"#_1-3-1-bean标签基本配置","children":[]},{"level":3,"title":"1.3.2 Bean标签范围配置","slug":"_1-3-2-bean标签范围配置","link":"#_1-3-2-bean标签范围配置","children":[]},{"level":3,"title":"1.3.3 Bean生命周期配置","slug":"_1-3-3-bean生命周期配置","link":"#_1-3-3-bean生命周期配置","children":[]},{"level":3,"title":"1.3.4 Bean实例化三种方式","slug":"_1-3-4-bean实例化三种方式","link":"#_1-3-4-bean实例化三种方式","children":[]},{"level":3,"title":"1.3.5 Bean的依赖注入","slug":"_1-3-5-bean的依赖注入","link":"#_1-3-5-bean的依赖注入","children":[]},{"level":3,"title":"1.3.6 引入其他配置文件（分模块开发）","slug":"_1-3-6-引入其他配置文件-分模块开发","link":"#_1-3-6-引入其他配置文件-分模块开发","children":[]}]},{"level":2,"title":"1.4. Spring相关API","slug":"_1-4-spring相关api","link":"#_1-4-spring相关api","children":[]},{"level":2,"title":"1.5. 依赖倒置原则","slug":"_1-5-依赖倒置原则","link":"#_1-5-依赖倒置原则","children":[]},{"level":2,"title":"1.6. 传统的三层架构","slug":"_1-6-传统的三层架构","link":"#_1-6-传统的三层架构","children":[]},{"level":2,"title":"1.7. IoC","slug":"_1-7-ioc","link":"#_1-7-ioc","children":[]},{"level":2,"title":"1.8. 依赖注入","slug":"_1-8-依赖注入","link":"#_1-8-依赖注入","children":[{"level":3,"title":"1.8.1 依赖注入的原理","slug":"_1-8-1-依赖注入的原理","link":"#_1-8-1-依赖注入的原理","children":[]},{"level":3,"title":"1.8.2 Spring中的依赖注入方式","slug":"_1-8-2-spring中的依赖注入方式","link":"#_1-8-2-spring中的依赖注入方式","children":[]}]},{"level":2,"title":"1.9. 无侵入容器","slug":"_1-9-无侵入容器","link":"#_1-9-无侵入容器","children":[]},{"level":2,"title":"2.1. Spring配置数据源","slug":"_2-1-spring配置数据源","link":"#_2-1-spring配置数据源","children":[{"level":3,"title":"2.1.2 数据源的手动创建","slug":"_2-1-2-数据源的手动创建","link":"#_2-1-2-数据源的手动创建","children":[]},{"level":3,"title":"2.1.3 Spring配置数据源","slug":"_2-1-3-spring配置数据源","link":"#_2-1-3-spring配置数据源","children":[]},{"level":3,"title":"2.1.4 抽取jdbc配置文件","slug":"_2-1-4-抽取jdbc配置文件","link":"#_2-1-4-抽取jdbc配置文件","children":[]}]},{"level":2,"title":"2.2. Spring注解开发","slug":"_2-2-spring注解开发","link":"#_2-2-spring注解开发","children":[{"level":3,"title":"2.2.1 Spring原始注解","slug":"_2-2-1-spring原始注解","link":"#_2-2-1-spring原始注解","children":[]},{"level":3,"title":"2.2.2 Spring新注解","slug":"_2-2-2-spring新注解","link":"#_2-2-2-spring新注解","children":[]}]},{"level":2,"title":"2.3. Spring整合Junit","slug":"_2-3-spring整合junit","link":"#_2-3-spring整合junit","children":[]},{"level":2,"title":"3.1.Spring与Web环境集成","slug":"_3-1-spring与web环境集成","link":"#_3-1-spring与web环境集成","children":[]},{"level":2,"title":"3.2. SpringMVC简介","slug":"_3-2-springmvc简介","link":"#_3-2-springmvc简介","children":[]},{"level":2,"title":"3.3. SpringMVC组件解析","slug":"_3-3-springmvc组件解析","link":"#_3-3-springmvc组件解析","children":[{"level":3,"title":"3.3.1 SpringMVC的执行流程","slug":"_3-3-1-springmvc的执行流程","link":"#_3-3-1-springmvc的执行流程","children":[]},{"level":3,"title":"3.3.2 SpringMVC组件解析","slug":"_3-3-2-springmvc组件解析","link":"#_3-3-2-springmvc组件解析","children":[]},{"level":3,"title":"3.3.3 SpringMVC注解解析","slug":"_3-3-3-springmvc注解解析","link":"#_3-3-3-springmvc注解解析","children":[]},{"level":3,"title":"3.3.4 SpringMVC的XML配置解析","slug":"_3-3-4-springmvc的xml配置解析","link":"#_3-3-4-springmvc的xml配置解析","children":[]}]},{"level":2,"title":"3.4. XML 命名空间（XML Namespaces）","slug":"_3-4-xml-命名空间-xml-namespaces","link":"#_3-4-xml-命名空间-xml-namespaces","children":[{"level":3,"title":"命名冲突","slug":"命名冲突","link":"#命名冲突","children":[]},{"level":3,"title":"使用前缀来避免命名冲突","slug":"使用前缀来避免命名冲突","link":"#使用前缀来避免命名冲突","children":[]},{"level":3,"title":"使用命名空间（Namespaces）","slug":"使用命名空间-namespaces","link":"#使用命名空间-namespaces","children":[]},{"level":3,"title":"XML Namespace (xmlns) 属性","slug":"xml-namespace-xmlns-属性","link":"#xml-namespace-xmlns-属性","children":[]},{"level":3,"title":"默认的命名空间（Default Namespaces）","slug":"默认的命名空间-default-namespaces","link":"#默认的命名空间-default-namespaces","children":[]}]},{"level":2,"title":"3.5. XML Schema (简单了解)","slug":"_3-5-xml-schema-简单了解","link":"#_3-5-xml-schema-简单了解","children":[{"level":3,"title":"对 XML Schema 的引用","slug":"对-xml-schema-的引用","link":"#对-xml-schema-的引用","children":[]}]},{"level":2,"title":"3.6. Spring中的配置","slug":"_3-6-spring中的配置","link":"#_3-6-spring中的配置","children":[]},{"level":2,"title":"4.1. SpringMVC的数据响应","slug":"_4-1-springmvc的数据响应","link":"#_4-1-springmvc的数据响应","children":[{"level":3,"title":"4.1.1 页面跳转","slug":"_4-1-1-页面跳转","link":"#_4-1-1-页面跳转","children":[]},{"level":3,"title":"4.1.2 回写数据","slug":"_4-1-2-回写数据","link":"#_4-1-2-回写数据","children":[]}]},{"level":2,"title":"4.2. SpringMVC获得请求数据","slug":"_4-2-springmvc获得请求数据","link":"#_4-2-springmvc获得请求数据","children":[{"level":3,"title":"4.2.1 获得基本类型参数","slug":"_4-2-1-获得基本类型参数","link":"#_4-2-1-获得基本类型参数","children":[]},{"level":3,"title":"4.2.2 获得POJO类型参数","slug":"_4-2-2-获得pojo类型参数","link":"#_4-2-2-获得pojo类型参数","children":[]},{"level":3,"title":"4.2.3 获得数组类型参数","slug":"_4-2-3-获得数组类型参数","link":"#_4-2-3-获得数组类型参数","children":[]},{"level":3,"title":"4.2.4 获得集合类型参数","slug":"_4-2-4-获得集合类型参数","link":"#_4-2-4-获得集合类型参数","children":[]},{"level":3,"title":"4.2.5 请求数据乱码问题","slug":"_4-2-5-请求数据乱码问题","link":"#_4-2-5-请求数据乱码问题","children":[]},{"level":3,"title":"4.2.6 参数绑定注解@requestParam","slug":"_4-2-6-参数绑定注解-requestparam","link":"#_4-2-6-参数绑定注解-requestparam","children":[]},{"level":3,"title":"4.2.7 获得Restful风格的参数","slug":"_4-2-7-获得restful风格的参数","link":"#_4-2-7-获得restful风格的参数","children":[]},{"level":3,"title":"4.2.8 自定义类型转换器","slug":"_4-2-8-自定义类型转换器","link":"#_4-2-8-自定义类型转换器","children":[]},{"level":3,"title":"4.2.9 获得Servlet相关API","slug":"_4-2-9-获得servlet相关api","link":"#_4-2-9-获得servlet相关api","children":[]},{"level":3,"title":"4.2.10 获得请求头","slug":"_4-2-10-获得请求头","link":"#_4-2-10-获得请求头","children":[]},{"level":3,"title":"4.2.11 文件上传","slug":"_4-2-11-文件上传","link":"#_4-2-11-文件上传","children":[]},{"level":3,"title":"4.2.12 单文件上传","slug":"_4-2-12-单文件上传","link":"#_4-2-12-单文件上传","children":[]}]},{"level":2,"title":"JdbcTemplate基本使用","slug":"jdbctemplate基本使用","link":"#jdbctemplate基本使用","children":[{"level":3,"title":"JdbcTemplate概述","slug":"jdbctemplate概述","link":"#jdbctemplate概述","children":[]},{"level":3,"title":"JdbcTemplate开发步骤","slug":"jdbctemplate开发步骤","link":"#jdbctemplate开发步骤","children":[]},{"level":3,"title":"Spring产生JdbcTemplate对象","slug":"spring产生jdbctemplate对象","link":"#spring产生jdbctemplate对象","children":[]},{"level":3,"title":"JdbcTemplate的常用操作","slug":"jdbctemplate的常用操作","link":"#jdbctemplate的常用操作","children":[]}]},{"level":2,"title":"6.1. Spring环境搭建步骤","slug":"_6-1-spring环境搭建步骤","link":"#_6-1-spring环境搭建步骤","children":[]},{"level":2,"title":"6.2. 项目整体结构","slug":"_6-2-项目整体结构","link":"#_6-2-项目整体结构","children":[]},{"level":2,"title":"6.3. 表结构与domain层的设计","slug":"_6-3-表结构与domain层的设计","link":"#_6-3-表结构与domain层的设计","children":[]},{"level":2,"title":"6.4. DAO层","slug":"_6-4-dao层","link":"#_6-4-dao层","children":[]},{"level":2,"title":"6.5. Service层","slug":"_6-5-service层","link":"#_6-5-service层","children":[]},{"level":2,"title":"6.6. Controller层","slug":"_6-6-controller层","link":"#_6-6-controller层","children":[]},{"level":2,"title":"7.1. 拦截器的作用","slug":"_7-1-拦截器的作用","link":"#_7-1-拦截器的作用","children":[]},{"level":2,"title":"7.2. 拦截器和过滤器区别","slug":"_7-2-拦截器和过滤器区别","link":"#_7-2-拦截器和过滤器区别","children":[]},{"level":2,"title":"7.3. 拦截器快速入门","slug":"_7-3-拦截器快速入门","link":"#_7-3-拦截器快速入门","children":[]},{"level":2,"title":"7.4. 案例-用户登录权限控制","slug":"_7-4-案例-用户登录权限控制","link":"#_7-4-案例-用户登录权限控制","children":[]},{"level":2,"title":"异常处理的思路","slug":"异常处理的思路","link":"#异常处理的思路","children":[]},{"level":2,"title":"异常处理两种方式","slug":"异常处理两种方式","link":"#异常处理两种方式","children":[]},{"level":2,"title":"简单异常处理器 SimpleMappingExceptionResolver","slug":"简单异常处理器-simplemappingexceptionresolver","link":"#简单异常处理器-simplemappingexceptionresolver","children":[]},{"level":2,"title":"自定义异常处理步骤","slug":"自定义异常处理步骤","link":"#自定义异常处理步骤","children":[]},{"level":2,"title":"9.1. Spring的AOP简介","slug":"_9-1-spring的aop简介","link":"#_9-1-spring的aop简介","children":[{"level":3,"title":"9.1.1 什么是AOP?","slug":"_9-1-1-什么是aop","link":"#_9-1-1-什么是aop","children":[]},{"level":3,"title":"9.1.2 AOP 的作用及其优势","slug":"_9-1-2-aop-的作用及其优势","link":"#_9-1-2-aop-的作用及其优势","children":[]},{"level":3,"title":"9.1.3 AOP 的底层实现","slug":"_9-1-3-aop-的底层实现","link":"#_9-1-3-aop-的底层实现","children":[]},{"level":3,"title":"9.1.4 AOP的动态代理技术","slug":"_9-1-4-aop的动态代理技术","link":"#_9-1-4-aop的动态代理技术","children":[]},{"level":3,"title":"9.1.5 JDK的动态代理","slug":"_9-1-5-jdk的动态代理","link":"#_9-1-5-jdk的动态代理","children":[]},{"level":3,"title":"9.1.6 cglib 的动态代理（原理未学习）","slug":"_9-1-6-cglib-的动态代理-原理未学习","link":"#_9-1-6-cglib-的动态代理-原理未学习","children":[]},{"level":3,"title":"9.1.7 AOP的相关概念","slug":"_9-1-7-aop的相关概念","link":"#_9-1-7-aop的相关概念","children":[]},{"level":3,"title":"9.1.8 AOP 开发明确的事项","slug":"_9-1-8-aop-开发明确的事项","link":"#_9-1-8-aop-开发明确的事项","children":[]}]},{"level":2,"title":"9.2. 基于XML的AOP开发","slug":"_9-2-基于xml的aop开发","link":"#_9-2-基于xml的aop开发","children":[{"level":3,"title":"9.2.1 快速入门","slug":"_9-2-1-快速入门","link":"#_9-2-1-快速入门","children":[]},{"level":3,"title":"9.2.2 XML 配置 AOP 详解","slug":"_9-2-2-xml-配置-aop-详解","link":"#_9-2-2-xml-配置-aop-详解","children":[]}]},{"level":2,"title":"9.3. 基于注解的AOP开发","slug":"_9-3-基于注解的aop开发","link":"#_9-3-基于注解的aop开发","children":[{"level":3,"title":"9.3.1 快速入门","slug":"_9-3-1-快速入门","link":"#_9-3-1-快速入门","children":[]},{"level":3,"title":"9.3.2 注解配置 AOP 详解","slug":"_9-3-2-注解配置-aop-详解","link":"#_9-3-2-注解配置-aop-详解","children":[]}]},{"level":2,"title":"静态代理","slug":"静态代理","link":"#静态代理","children":[]},{"level":2,"title":"动态代理","slug":"动态代理","link":"#动态代理","children":[{"level":3,"title":"基于JDK的动态代理","slug":"基于jdk的动态代理","link":"#基于jdk的动态代理","children":[]}]},{"level":2,"title":"10.1. 编程式事务控制相关对象（只需要了解）","slug":"_10-1-编程式事务控制相关对象-只需要了解","link":"#_10-1-编程式事务控制相关对象-只需要了解","children":[{"level":3,"title":"10.1.1 PlatformTransactionManager","slug":"_10-1-1-platformtransactionmanager","link":"#_10-1-1-platformtransactionmanager","children":[]},{"level":3,"title":"10.1.2 TransactionDefinition","slug":"_10-1-2-transactiondefinition","link":"#_10-1-2-transactiondefinition","children":[]},{"level":3,"title":"10.1.3 TransactionStatus","slug":"_10-1-3-transactionstatus","link":"#_10-1-3-transactionstatus","children":[]}]},{"level":2,"title":"10.2. 基于 XML 的声明式事务控制","slug":"_10-2-基于-xml-的声明式事务控制","link":"#_10-2-基于-xml-的声明式事务控制","children":[{"level":3,"title":"10.2.1 什么是声明式事务控制","slug":"_10-2-1-什么是声明式事务控制","link":"#_10-2-1-什么是声明式事务控制","children":[]},{"level":3,"title":"10.2.2 声明式事务控制的实现","slug":"_10-2-2-声明式事务控制的实现","link":"#_10-2-2-声明式事务控制的实现","children":[]},{"level":3,"title":"10.2.3 切点方法的事务参数的配置","slug":"_10-2-3-切点方法的事务参数的配置","link":"#_10-2-3-切点方法的事务参数的配置","children":[]}]},{"level":2,"title":"10.3. 基于注解的声明式事务控制","slug":"_10-3-基于注解的声明式事务控制","link":"#_10-3-基于注解的声明式事务控制","children":[]},{"level":2,"title":"11.1. MyBatis的简介","slug":"_11-1-mybatis的简介","link":"#_11-1-mybatis的简介","children":[{"level":3,"title":"原始jdbc操作的分析","slug":"原始jdbc操作的分析","link":"#原始jdbc操作的分析","children":[]},{"level":3,"title":"什么是MyBatis？","slug":"什么是mybatis","link":"#什么是mybatis","children":[]}]},{"level":2,"title":"11.2. MyBatis的快速入门","slug":"_11-2-mybatis的快速入门","link":"#_11-2-mybatis的快速入门","children":[{"level":3,"title":"环境搭建","slug":"环境搭建","link":"#环境搭建","children":[]},{"level":3,"title":"编写测试代码","slug":"编写测试代码","link":"#编写测试代码","children":[]}]},{"level":2,"title":"11.3. MyBatis的映射文件概述","slug":"_11-3-mybatis的映射文件概述","link":"#_11-3-mybatis的映射文件概述","children":[]},{"level":2,"title":"11.4. MyBatis的增删改查操作","slug":"_11-4-mybatis的增删改查操作","link":"#_11-4-mybatis的增删改查操作","children":[{"level":3,"title":"插入操作","slug":"插入操作","link":"#插入操作","children":[]},{"level":3,"title":"删除操作","slug":"删除操作","link":"#删除操作","children":[]},{"level":3,"title":"查询操作","slug":"查询操作","link":"#查询操作","children":[]},{"level":3,"title":"修改操作","slug":"修改操作","link":"#修改操作","children":[]}]},{"level":2,"title":"11.5. MyBatis的核心配置文件概述","slug":"_11-5-mybatis的核心配置文件概述","link":"#_11-5-mybatis的核心配置文件概述","children":[{"level":3,"title":"MyBatis核心配置文件层级关系","slug":"mybatis核心配置文件层级关系","link":"#mybatis核心配置文件层级关系","children":[]},{"level":3,"title":"MyBatis常用配置解析","slug":"mybatis常用配置解析","link":"#mybatis常用配置解析","children":[]}]},{"level":2,"title":"11.6. MyBatis的相应API","slug":"_11-6-mybatis的相应api","link":"#_11-6-mybatis的相应api","children":[{"level":3,"title":"SqlSession工厂构建器SqlSessionFactoryBuilder","slug":"sqlsession工厂构建器sqlsessionfactorybuilder","link":"#sqlsession工厂构建器sqlsessionfactorybuilder","children":[]},{"level":3,"title":"SqlSession工厂对象SqlSessionFactory","slug":"sqlsession工厂对象sqlsessionfactory","link":"#sqlsession工厂对象sqlsessionfactory","children":[]},{"level":3,"title":"SqlSession会话对象","slug":"sqlsession会话对象","link":"#sqlsession会话对象","children":[]}]},{"level":2,"title":"代理开发方式介绍","slug":"代理开发方式介绍","link":"#代理开发方式介绍","children":[]},{"level":2,"title":"13.1. 动态SQL语句","slug":"_13-1-动态sql语句","link":"#_13-1-动态sql语句","children":[{"level":3,"title":"if","slug":"if","link":"#if","children":[]},{"level":3,"title":"foreach","slug":"foreach","link":"#foreach","children":[]}]},{"level":2,"title":"13.2. SQL语句抽取","slug":"_13-2-sql语句抽取","link":"#_13-2-sql语句抽取","children":[]},{"level":2,"title":"类型处理器（typeHandlers）","slug":"类型处理器-typehandlers","link":"#类型处理器-typehandlers","children":[]},{"level":2,"title":"plugins标签（使用分页助手PageHelper）","slug":"plugins标签-使用分页助手pagehelper","link":"#plugins标签-使用分页助手pagehelper","children":[]},{"level":2,"title":"15.1. 一对一查询","slug":"_15-1-一对一查询","link":"#_15-1-一对一查询","children":[]},{"level":2,"title":"15.2. 一对多查询","slug":"_15-2-一对多查询","link":"#_15-2-一对多查询","children":[]},{"level":2,"title":"15.3. 多对多查询","slug":"_15-3-多对多查询","link":"#_15-3-多对多查询","children":[]},{"level":2,"title":"MyBatis的常用注解","slug":"mybatis的常用注解","link":"#mybatis的常用注解","children":[]},{"level":2,"title":"MyBatis的增删改查","slug":"mybatis的增删改查","link":"#mybatis的增删改查","children":[]},{"level":2,"title":"MyBatis的注解实现复杂映射开发","slug":"mybatis的注解实现复杂映射开发","link":"#mybatis的注解实现复杂映射开发","children":[{"level":3,"title":"一对一查询","slug":"一对一查询","link":"#一对一查询","children":[]},{"level":3,"title":"一对多查询","slug":"一对多查询","link":"#一对多查询","children":[]},{"level":3,"title":"多对多查询","slug":"多对多查询","link":"#多对多查询","children":[]}]},{"level":2,"title":"17.1. 原始方式整合","slug":"_17-1-原始方式整合","link":"#_17-1-原始方式整合","children":[]},{"level":2,"title":"17.2. Spring整合MyBatis","slug":"_17-2-spring整合mybatis","link":"#_17-2-spring整合mybatis","children":[]}],"git":{"createdTime":1709618715000,"updatedTime":1709618715000,"contributors":[{"name":"zhaoshuo","email":"apzs@foxmaill.com","commits":1}]},"readingTime":{"minutes":111.86,"words":33559},"filePathRelative":"back-advance/5.SSM/SSM笔记.md","localizedDate":"2024年3月5日","excerpt":"<h1> 1.Spring的IOC和依赖注入(DI)</h1>\\n<blockquote>\\n<p>官方文档：https://docs.spring.io/spring-framework/docs/current/reference/html/core.html</p>\\n</blockquote>\\n<h2> 1.1. Spring简介</h2>\\n<p>Spring是分层的 Java SE/EE应用 full-stack 轻量级开源框架，以 <strong>IoC</strong>（Inverse Of Control：反转控制）和 <strong>AOP</strong>（Aspect Oriented Programming：面向切面编程）为内核。\\n提供了<strong>展现层 SpringMVC</strong> 和<strong>持久层 Spring JDBCTemplate</strong> 以及<strong>业务层事务管理</strong>等众多的企业级应用技术，还能整合开源世界众多著名的第三方框架和类库，逐渐成为使用最多的Java EE 企业应用开源框架。</p>","autoDesc":true}');export{l as data};
